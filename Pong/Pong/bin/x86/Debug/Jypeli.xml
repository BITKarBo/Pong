<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jypeli</name>
    </assembly>
    <members>
        <member name="T:Jypeli.Assets.CollisionHandler">
            <summary>
            Kokoelma valmiita törmäyksenkäsittelijöitä.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.DestroyObject(Jypeli.PhysicsObject,Jypeli.PhysicsObject)">
            <summary>
            Tuhoaa törmäävän olion.
            </summary>
            <param name="collidingObject">Törmäävä olio</param>
            <param name="targetObject">Kohde johon törmätään</param>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.DestroyTarget(Jypeli.PhysicsObject,Jypeli.PhysicsObject)">
            <summary>
            Tuhoaa olion johon törmätään.
            </summary>
            <param name="collidingObject">Törmäävä olio</param>
            <param name="targetObject">Kohde johon törmätään</param>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.DestroyBoth(Jypeli.PhysicsObject,Jypeli.PhysicsObject)">
            <summary>
            Tuhoaa molemmat törmäävät oliot.
            </summary>
            <param name="collidingObject">Törmäävä olio</param>
            <param name="targetObject">Kohde johon törmätään</param>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.ExplodeObject(System.Double,System.Boolean)">
            <summary>
            Räjäyttää törmäävän olion.
            </summary>
            <param name="radius">Räjähdyksen säde</param>
            <param name="destroyObject">Tuhotaanko törmäävä olio</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.ExplodeTarget(System.Double,System.Boolean)">
            <summary>
            Räjäyttää olion johon törmätään.
            </summary>
            <param name="radius">Räjähdyksen säde</param>
            <param name="destroyObject">Tuhotaanko törmäävä olio</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.ExplodeBoth(System.Double,System.Boolean)">
            <summary>
            Räjäyttää molemmat törmäävät oliot.
            Räjähdys tulee olioiden törmäyskohtaan.
            </summary>
            <param name="radius">Räjähdyksen säde</param>
            <param name="destroyObject">Tuhotaanko oliot samalla</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.AddMeterValue(Jypeli.IntMeter,System.Int32)">
            <summary>
            Lisää mittarin arvoa halutulla määrällä.
            Voit myös vähentää käyttämällä negatiivista lukua.
            </summary>
            <param name="meter">Mittari</param>
            <param name="value">Kuinka paljon lisätään</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.AddMeterValue(Jypeli.DoubleMeter,System.Double)">
            <summary>
            Lisää mittarin arvoa halutulla määrällä.
            Voit myös vähentää käyttämällä negatiivista lukua.
            </summary>
            <param name="meter">Mittari</param>
            <param name="value">Kuinka paljon lisätään</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.HitObject(Jypeli.Vector)">
            <summary>
            Lyö törmäävää oliota vektorin määräämällä suunnalla ja voimalla.
            </summary>
            <param name="impulse">Impulssi (massa * nopeus)</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.HitTarget(Jypeli.Vector)">
            <summary>
            Lyö oliota johon törmätään vektorin määräämällä suunnalla ja voimalla.
            </summary>
            <param name="impulse">Impulssi (massa * nopeus)</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.PlaySound(System.String)">
            <summary>
            Soittaa ääniefektin.
            </summary>
            <param name="soundEffectName">Ääniefekitin nimi</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.AddEffectOnObject(Jypeli.Effects.ExplosionSystem,System.Int32)">
            <summary>
            Lisää efektin törmäävän olion kohdalle.
            </summary>
            <param name="expSystem">Efektijärjestelmä</param>
            <param name="numParticles">Kuinka monta partikkelia laitetaan</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.AddEffectOnTarget(Jypeli.Effects.ExplosionSystem,System.Int32)">
            <summary>
            Lisää efektin sen olion kohdalle, johon törmätään.
            </summary>
            <param name="expSystem">Efektijärjestelmä</param>
            <param name="numParticles">Kuinka monta partikkelia laitetaan</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.IncreaseObjectSize(System.Double,System.Double)">
            <summary>
            Kasvattaa törmäävän olion kokoa (tai pienentää negatiivisilla arvoilla)
            </summary>
            <param name="width">Leveyden muutos</param>
            <param name="height">Korkeuden muutos</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.IncreaseTargetSize(System.Double,System.Double)">
            <summary>
            Kasvattaa kohdeolion kokoa (tai pienentää negatiivisilla arvoilla)
            </summary>
            <param name="width">Leveyden muutos</param>
            <param name="height">Korkeuden muutos</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.CollisionHandler.ShowMessage(System.String)">
            <summary>
            Näyttää viestin MessageDisplayssä.
            </summary>
            <param name="message">Viesti.</param>
            <returns></returns>
        </member>
        <member name="T:Jypeli.Assets.PhysicsTemplates">
            <summary>
            Sisältää funktioita, joilla fysiikkaoliolle voidaan asettaa tiettyä tarkoitusta varten
            optimoidut ominaisuudet.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PhysicsTemplates.ApplyRampRight(Jypeli.PhysicsObject,System.Double)">
            <summary>
            Optimoi fysiikkaominaisuudet rampille, jonka päältä sivulta kuvattu
            auto voi ajaa.
            </summary>
            <param name="o">Olio, jolle asetetaan fysiikkaominaisuudet.</param>
            <param name="wheelDiameter">Auton pyörän halkaisija.</param>
        </member>
        <member name="M:Jypeli.Assets.PhysicsTemplates.ApplyRampLeft(Jypeli.PhysicsObject,System.Double)">
            <summary>
            Optimoi fysiikkaominaisuudet rampille, jonka päältä sivulta kuvattu
            auto voi ajaa.
            </summary>
            <param name="o">Olio, jolle asetetaan fysiikkaominaisuudet.</param>
            <param name="wheelDiameter">Auton pyörän halkaisija.</param>
        </member>
        <member name="M:Jypeli.Assets.PhysicsTemplates.ApplyStackableBox(Jypeli.PhysicsObject,System.Double)">
            <summary>
            Optimoi fysiikkaominaisuudet laatikolle, joita pinotaan monta päällekkäin,
            niin että ne pysyvät mahdollisimman vakaina.
            </summary>
            <param name="o">Olio, jolle asetetaan fysiikkaominaisuudet.</param>
            <param name="minBoxWidth">Pienimmän samassa pinossa olevan laatikon koko.</param>
        </member>
        <member name="T:PlatformCharacter2">
            <summary>
            Tasohyppelypelin hahmo. Voi liikkua ja hyppiä. Lisäksi sillä voi olla ase.
            </summary>
        </member>
        <member name="T:Jypeli.PhysicsObject">
            <summary>
            Peliolio, joka noudattaa fysiikkamoottorin määräämiä fysiikan lakeja.
            Voidaan kuitenkin myös laittaa noudattamaan lakeja valikoidusti.
            </summary>
        </member>
        <member name="T:Jypeli.GameObject">
            <summary>
            Pelialueella liikkuva olio.
            Käytä fysiikkapeleissä <c>PhysicsObject</c>-olioita.
            </summary>
        </member>
        <member name="T:Jypeli.GameObjects.GameObjectBase">
            <summary>
            Kaikille peliolioille yhteinen kantaluokka
            </summary>
        </member>
        <member name="T:Jypeli.Tagged">
            <summary>
            Rajapinta olioille, joilla on Tag-ominaisuus.
            </summary>
        </member>
        <member name="T:Jypeli.Destroyable">
            <summary>
            Rajapinta olioille, jotka ovat tuhottavissa.
            </summary>
        </member>
        <member name="M:Jypeli.GameObjects.GameObjectBase.OnAddedToGame">
            <summary>
            Kutsutaan kun olio lisätään peliin.
            </summary>
        </member>
        <member name="M:Jypeli.GameObjects.GameObjectBase.OnRemoved">
            <summary>
            Kutsutaan kun olio poistetaan pelistä.
            </summary>
        </member>
        <member name="M:Jypeli.GameObjects.GameObjectBase.Destroy">
            <summary>
            Tuhoaa olion.
            </summary>
        </member>
        <member name="M:Jypeli.GameObjects.GameObjectBase.MoveTo(Jypeli.Vector,System.Double,System.Action)">
            <summary>
            Yrittää siirtyä annettuun paikkaan annetulla nopeudella.
            Laukaisee annetun aliohjelman, kun paikkaan on päästy.
            </summary>
            <param name="location">Paikka johon siirrytään</param>
            <param name="speed">
            Nopeus (paikkayksikköä sekunnissa) jolla liikutaan.
            Nopeus on maksiminopeus. Jos välissä on hitaampaa maastoa tai
            esteitä, liikkumisnopeus voi olla alle sen.
            </param>
            <param name="doWhenArrived">
            Aliohjelma, joka ajetaan kun paikkaan on päästy.
            Voi olla null, jos ei haluta mitään aliohjelmaa.
            </param>
        </member>
        <member name="M:Jypeli.GameObjects.GameObjectBase.MoveTo(Jypeli.Vector,System.Double)">
            <summary>
            Yrittää siirtyä annettuun paikkaan annetulla nopeudella.
            </summary>
            <param name="location">Paikka johon siirrytään</param>
            <param name="speed">
            Nopeus (paikkayksikköä sekunnissa) jolla liikutaan.
            Nopeus on maksiminopeus. Jos välissä on hitaampaa maastoa tai
            esteitä, liikkumisnopeus voi olla alle sen.
            </param>
        </member>
        <member name="M:Jypeli.GameObjects.GameObjectBase.Update(Jypeli.Time)">
            <summary>
            Peliolion päivitys. Tätä kutsutaan, kun <c>IsUpdated</c>-ominaisuuden
            arvoksi on asetettu <c>true</c> ja olio on lisätty peliin.
            <see cref="P:Jypeli.GameObjects.GameObjectBase.IsUpdated"/>
            </summary>
            <param name="time">Peliaika.</param>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Game">
            <summary>
            Peli.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Layer">
            <summary>
            Kerros, jolle peliolio on lisätty.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.RotateImage">
            <summary>
            Pyöritetäänkö kuvaa olion kulman mukana.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Parent">
            <summary>
            Olio, jonka lapsiolio tämä olio on. Jos <c>null</c>, olio ei
            ole minkään olion lapsiolio.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.IsUpdated">
            <summary>
            Tarvitseeko olio päivittämistä. Kun perit oman luokkasi
            tästä luokasta, aseta tämä arvoon <c>true</c>, kun luokan olio
            tarvitsee päivittämistä.
            </summary>
            <remarks>
            Jos tämä asetetaan arvoon <code>true</code>, olion <c>Update</c>-metodia
            kutsutaan säännöllisesti (noin 25 kertaa sekunnissa) sen jälkeen, kun olio
            on lisätty peliin.
            
            Tämä ei ole oletuksena <c>true</c>, jotta vältetään pelin hidastuminen
            turhien päivityskutsujen takia. Jos esimerkiksi kenttä koostuu tuhansista
            seinäpalikoista, näiden kaikkien päivittäminen koko ajan olisi turhaa.
            </remarks>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Tag">
            <summary>
            Vapaasti asetettava muuttuja.
            </summary>
            <example>
            Tagia voi käyttää vaikkapa olion keräämien pisteiden tallettamiseen:
            <code>
            hahmo.Tag = 5;
            </code>
            Kun luet pisteitä, täytyy arvo muuntaa oikean tyyppiseksi kertomalla tyypin
            nimi suluissa:
            <code>
            int pisteitä = (int)hahmo.Tag;
            </code>
            </example>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Brain">
            <summary>
            Olion aivot.
            Ks. <c>Brain</c>
            </summary>
        </member>
        <member name="E:Jypeli.GameObjects.GameObjectBase.AddedToGame">
            <summary>
            Tapahtuu, kun olio lisätään peliin.
            </summary>
        </member>
        <member name="E:Jypeli.GameObjects.GameObjectBase.Removed">
            <summary>
            Tapahtuu, kun olio poistetaan pelistä (tuhotaan tai ei).
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.IsDestroyed">
            <summary>
            Onko olio tuhottu.
            </summary>
        </member>
        <member name="E:Jypeli.GameObjects.GameObjectBase.Destroyed">
            <summary>
            Tapahtuu, kun olio tuhotaan. 
            </summary> 
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Size">
            <summary>
            Olion koko pelimaailmassa.
            Kertoo olion äärirajat, ei muotoa.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Position">
            <summary>
            Olion paikka. Jos olio on jonkun toisen peliolion lapsi, paikka on suhteessa
            tämän vanhempaan (<c>Parent</c>). Muuten paikka on paikka pelimaailmassa.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Angle">
            <summary>
            Olion kulma tai rintamasuunta.
            Nolla = osoittaa oikealle.
            </summary>      
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.CreationTime">
            <summary>
            Olion luomisaika.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Lifetime">
            <summary>
            Olion elinaika. Lasketaan siitä lähtien, kun olio luodaan.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.MaximumLifetime">
            <summary>
            Olion suurin mahdollinen elinaika.
            Kun <c>Lifetime</c> on suurempi kuin tämä, olio kuolee.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.LifetimeLeft">
            <summary>
            Olion jäljellä oleva elinaika.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Width">
            <summary>
            Olion leveys (X-suunnassa, leveimmässä kohdassa).
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Height">
            <summary>
            Olion korkeus (Y-suunnassa, korkeimmassa kohdassa).
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.AbsolutePosition">
            <summary>
            Olion absoluuttinen paikka pelimaailmassa.
            Jos olio ei ole minkään toisen peliolion lapsiolio,
            tämä on sama kuin <c>Position</c>.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.AbsoluteAngle">
            <summary>
            Olion absoluuttinen kulma pelimaailmassa.
            Jos olio ei ole minkään toisen peliolion lapsiolio,
            tämä on sama kuin <c>Angle</c>.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Left">
            <summary>
            Olion vasemman reunan x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Right">
            <summary>
            Olion oikean reunan x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Top">
            <summary>
            Olion yläreunan y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Bottom">
            <summary>
            Olion alareunan y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.X">
            <summary>
            Olion paikan X-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Y">
            <summary>
            Olion paikan Y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Animation">
            <summary>
            Animaatio. Voi olla <c>null</c>, jolloin piirretään vain väri.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.GameObjectBase.Image">
            <summary>
            Olion kuva. Voi olla <c>null</c>, jolloin piirretään vain väri.
            </summary>
        </member>
        <member name="T:Jypeli.IGameObjectInternal">
            <summary>
            Jypelin sisäiset metodit ja propertyt joihin käyttäjän ei tarvitse
            päästä käsiksi kuuluvat tähän luokkaan. Kaikki oliot jotka toteuttavat
            IGameObject-rajapinnan toteuttavat myös IGameObjectInternal-rajapinnan.
            Ota tämä huomioon jos aiot tehdä oman olion joka toteuttaa suoraan
            IGameObject(Internal)-rajapinnan.
            <example>
            void UpdateObject(IGameObject obj)
            {
               ((IGameObjectInternal)obj).Update();
            }
            </example>
            </summary>
        </member>
        <member name="T:Jypeli.IGameObject">
            <summary>
            Yhteinen rajapinta kaikille peliolioille.
            </summary>
        </member>
        <member name="T:Jypeli.Updatable">
            <summary>
            Rajapinta päivittyville olioille.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.SetImage(Jypeli.StorageFile)">
            <summary>
            Lataa kuvan tiedostosta ja asettaa sen oliolle.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:Jypeli.GameObject.MirrorImage">
            <summary>
            Kääntää olion kuvan vaakasuunnassa.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.FlipImage">
            <summary>
            Kääntää olion kuvan pystysuunnassa.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.Add(Jypeli.GameObject)">
            <summary>
            Lisää annetun peliolion tämän olion lapseksi. Lapsiolio liikkuu tämän olion mukana,
            ja sen paikka ja koko ilmaistaan suhteessa tähän olioon.
            </summary>
            <remarks>
            <c>PhysicsObject</c>-tyyppisiä olioita ei voi lisätä lapsiolioksi.
            </remarks>
        </member>
        <member name="M:Jypeli.GameObject.Remove(Jypeli.GameObject)">
            <summary> 
            Poistaa lapsiolion. Jos haluat tuhota olion, 
            kutsu mielummin olion <c>Destroy</c>-metodia. 
            </summary> 
            <remarks> 
            Oliota ei poisteta välittömästi, vaan viimeistään seuraavan 
            päivityksen jälkeen. 
            </remarks> 
        </member>
        <member name="M:Jypeli.GameObject.Clear">
            <summary>
            Poistaa kaikki lapsioliot.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.IsInside(Jypeli.Vector)">
            <summary>
            Onko piste <c>p</c> tämän olion sisäpuolella.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.IsInsideRect(Jypeli.Vector)">
            <summary>
            Onko piste <c>p</c> tämän olion ympäröivän suorakulmion sisäpuolella.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.NotifyParentAboutChangedSizingAttributes">
            <summary>
            Should be called whenever properties that might affect layouts
            are changed.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.RefreshLayout">
            <summary>
            Päivittää lapsiolioiden paikat ja koot, jos widgetille on asetettu asettelija.
            Tätä metodia EI yleensä tarvitse kutsua itse, sillä asettelija
            päivitetään automaattisesti jokaisella framella. Tämä metodi on
            tarpeellinen esim. silloin, kun widgetille on lisätty lapsiolioita
            (tai muutettu niiden ominaisuuksia) ja niiden paikat tarvitsee päivittää
            välittömästi lisäyksen jälkeen. Silloinkin tätä tarvitsee kutsua vain kerran,
            viimeisimmän muutoksen jälkeen.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.UpdateSizeHints">
            <summary>
            Recursively updates the preferred sizes (and other parameters that
            affect the layout) of the object and its child objects.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.UpdateLayout(Jypeli.Vector)">
            <summary>
            Recursively updates the layouts of the object and
            its child objects. <c>UpdateSizeHints()</c> must have
            been called before this, because the layout needs to
            know how big the objects need to be.
            </summary>
            <param name="maximumSize">The actual size that is allocated for the layout.</param>
        </member>
        <member name="M:Jypeli.GameObject.GetMaximumSize">
            <summary>
            Antaa widgetin maksimikoon siinä tapauksessa, että kokoa ei
            ole annettu rakentajassa (tai tarkemmin sanoen muuttujan <c>SizingByLayout</c>
            arvo on <c>true</c>). Olio ei siis automaattisesti kasva tätä isommaksi.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.Move(Jypeli.Vector)">
            <summary>
            Siirtää oliota.
            </summary>
            <param name="movement">Vektori, joka määrittää kuinka paljon siirretään.</param>
        </member>
        <member name="M:Jypeli.GameObject.MoveTo(Jypeli.Vector,System.Double,System.Action)">
            <summary>
            Yrittää siirtyä annettuun paikkaan annetulla nopeudella.
            Laukaisee annetun aliohjelman, kun paikkaan on päästy.
            </summary>
            <param name="location">Paikka johon siirrytään</param>
            <param name="speed">
            Nopeus (paikkayksikköä sekunnissa) jolla liikutaan.
            Nopeus on maksiminopeus. Jos välissä on hitaampaa maastoa tai
            esteitä, liikkumisnopeus voi olla alle sen.
            </param>
            <param name="doWhenArrived">
            Aliohjelma, joka ajetaan kun paikkaan on päästy.
            Voi olla null, jos ei haluta mitään aliohjelmaa.
            </param>
        </member>
        <member name="M:Jypeli.GameObject.StopMoveTo">
            <summary>
            Pysäyttää MoveTo-aliohjelmalla aloitetun liikkeen.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.Oscillate(Jypeli.Vector,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Laittaa kappaleen värähtelemään edestakaisin nykyisen paikkansa ympärillä tietyn akselin suuntaisesti.
            </summary>
            <param name="axis">Akseli, jonka suunnassa värähdellään. Pituudella ei väliä, vain suunnalla.</param>
            <param name="amplitude">Amplitudi eli ääripäiden välinen etäisyys.</param>
            <param name="frequency">Taajuus, eli kuinka monta jaksoa sekunnissa värähdellään.</param>
            <param name="phase">Vaihe, eli mistä kohtaa jaksoa aloitetaan. Vaihteluväli 0 - 2 * Math.PI (siniaalto)</param>
            <param name="damping">Vaimennuskerroin. 0 = ei vaimene, mitä suurempi niin sitä nopeammin vaimenee.</param>
        </member>
        <member name="M:Jypeli.GameObject.OscillateAngle(System.Double,Jypeli.UnlimitedAngle,System.Double,System.Double)">
            <summary>
            Laittaa kappaleen kulman värähtelemään edestakaisin.
            </summary>
            <param name="direction">Värähtelyn suunta (1 = myötäpäivään, -1 = vastapäivään)</param>
            <param name="amplitude">Amplitudi eli ääripäiden välinen etäisyys (radiaaneina).</param>
            <param name="frequency">Taajuus, eli kuinka monta jaksoa sekunnissa värähdellään.</param>
            <param name="damping">Vaimennuskerroin. 0 = ei vaimene, mitä suurempi niin sitä nopeammin vaimenee.</param>
        </member>
        <member name="M:Jypeli.GameObject.SetEquilibrium">
            <summary>
            Asettaa uuden tasapainoaseman värähtelyille.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.ClearOscillations">
            <summary>
            Poistaa kaikki värähtelyt kappaleelta.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.Stop">
            <summary>
            Pysäyttää kaiken liikkeen.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.Destroy">
            <summary>
            Tuhoaa olion. Tuhottu olio poistuu pelistä.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden peliolion.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
        </member>
        <member name="M:Jypeli.GameObject.#ctor(System.Double,System.Double,Jypeli.Shape)">
            <summary>
            Alustaa uuden peliolion.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
            <param name="shape">Muoto.</param>
        </member>
        <member name="M:Jypeli.GameObject.#ctor(Jypeli.Animation)">
            <summary>
            Alustaa uuden peliolion.
            Kappaleen koko ja ulkonäkö ladataan parametrina annetusta kuvasta.
            </summary>
            <param name="animation">Kuva</param>
        </member>
        <member name="M:Jypeli.GameObject.#ctor(Jypeli.ILayout)">
            <summary>
            Alustaa widgetin.
            </summary>
        </member>
        <member name="M:Jypeli.GameObject.Update(Jypeli.Time)">
            <summary>
            Peliolion päivitys. Tätä kutsutaan, kun <c>IsUpdated</c>-ominaisuuden
            arvoksi on asetettu <c>true</c> ja olio on lisätty peliin.
            <see cref="!:IsUpdated"/>
            </summary>
            <param name="time">Peliaika.</param>
        </member>
        <member name="M:Jypeli.GameObject.SeesObject(Jypeli.GameObject)">
            <summary>
            Näkeekö olio toisen.
            </summary>
            <param name="obj">Toinen olio</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.SeesObject(Jypeli.GameObject,System.Predicate{Jypeli.GameObject})">
            <summary>
            Näkeekö olio toisen.
            </summary>
            <param name="obj">Toinen olio</param>
            <param name="isObstacle">Ehto sille mikä lasketaan esteeksi</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.SeesObject(Jypeli.GameObject,System.Object)">
            <summary>
            Näkeekö olio toisen.
            </summary>
            <param name="obj">Toinen olio</param>
            <param name="obstacleTag">Tagi esteelle</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.SeesTarget(Jypeli.Vector)">
            <summary>
            Näkeekö olio paikkaan.
            </summary>
            <param name="targetPosition">Paikka</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.SeesTarget(Jypeli.Vector,System.Predicate{Jypeli.GameObject})">
            <summary>
            Näkeekö olio paikkaan.
            </summary>
            <param name="targetPosition">Paikka</param>
            <param name="isObstacle">Ehto sille mikä lasketaan esteeksi</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.SeesTarget(Jypeli.Vector,System.Object)">
            <summary>
            Näkeekö olio paikkaan.
            </summary>
            <param name="targetPosition">Paikka</param>
            <param name="obstacleTag">Tagi esteelle</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.IsBlocking(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Onko olio kahden paikan välissä.
            </summary>
            <param name="obj">Olio</param>
            <param name="pos1">Paikka 1</param>
            <param name="pos2">Paikka 2</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.GameObject.FadeColorTo(Jypeli.Color,System.Double)">
            <summary>
            Muuttaa olion väriä toiseen hitaasti liukumalla.
            </summary>
            <param name="targetColor">Väri johon muutetaan</param>
            <param name="seconds">Aika jossa muutos valmistuu</param>
        </member>
        <member name="P:Jypeli.GameObject.IsVisible">
            <summary>
            Piirretäänkö oliota ruudulle.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.Animation">
            <summary>
            Animaatio. Voi olla <c>null</c>, jolloin piirretään vain väri.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.TextureWrapSize">
            <summary>
            Määrittää kuinka moneen kertaan kuva piirretään. Esimerkiksi (3.0, 2.0) piirtää
            kuvan 3 kertaa vaakasuunnassa ja 2 kertaa pystysuunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.Color">
            <summary>
            Väri, jonka värisenä olio piirretään, jos tekstuuria ei ole määritelty.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.TextureFillsShape">
            <summary>
            Jos <c>true</c>, kuva piirretään niin, ettei se mene olion muodon
            ääriviivojen yli. Toisin sanoen kuva piirretään tarkasti vain
            muodon määrittämälle alueelle.
            </summary>
            <remarks>
            Tämän asettaminen tekee olion piirtämisestä hitaamman. Jos
            muoto on yksinkertainen, harkitse voisiko kuvan piirtää niin, että
            läpinäkyvyyttä käyttämällä saadaan kuvasta halutun muotoinen.
            </remarks>
        </member>
        <member name="P:Jypeli.GameObject.Objects">
            <summary>
            Olion lapsioliot. Saa muuttaa.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.ObjectCount">
            <summary>
            Olion lapsiolioiden lukumäärä.
            Kuten Objects.Count, mutta optimoitu.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.Size">
            <summary>
            Olion koko pelimaailmassa.
            Kertoo olion äärirajat, ei muotoa.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.Angle">
            <summary>
            Olion kulma tai rintamasuunta.
            Nolla = osoittaa oikealle.
            </summary>      
        </member>
        <member name="P:Jypeli.GameObject.Shape">
            <summary>
            Olion muoto.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.ShapeString">
            <summary>
            Olion muoto merkkijonona (kenttäeditorin käyttöön)
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.IsAddedToGame">
            <summary>
            Onko olio lisätty peliin.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.HorizontalSizing">
            <summary>
            Koon asettaminen vaakasuunnassa, kun olio on
            asettelijan sisällä.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.VerticalSizing">
            <summary>
            Koon asettaminen pystysuunnassa, kun olio on
            asettelijan sisällä.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.PreferredSize">
            <summary>
            Koko, jota oliolla tulisi olla asettelijan sisällä. Todellinen koko voi olla
            pienempi, jos tilaa ei ole tarpeeksi.
            </summary>
        </member>
        <member name="P:Jypeli.GameObject.Layout">
            <summary>
            Asettelija lapsiolioille. Asettaa lapsiolioiden koon sekä paikan.
            </summary>
        </member>
        <member name="T:Jypeli.IPhysicsObjectInternal">
            <summary>
            Jypelin sisäiset metodit ja propertyt joihin käyttäjän ei tarvitse
            päästä käsiksi kuuluvat tähän luokkaan. Kaikki oliot jotka toteuttavat
            IPhysicsObject-rajapinnan toteuttavat myös IPhysicsObjectInternal-rajapinnan.
            Ota tämä huomioon jos aiot tehdä oman olion joka toteuttaa suoraan
            IPhysicsObject(Internal)-rajapinnan.
            <example>
            void UpdateObject(IPhysics obj)
            {
               ((IPhysicsObjectInternal)obj).Update();
            }
            </example>
            </summary>
        </member>
        <member name="T:Jypeli.IPhysicsObject">
            <summary>
            Yhteinen rajapinta kaikille fysiikkaolioille.
            </summary>
        </member>
        <member name="T:Jypeli.DelayedDestroyable">
            <summary>
            Rajapinta olioille, joiden tuhoaminen kestää seuraavaan päivitykseen.
            </summary>
        </member>
        <member name="E:Jypeli.IPhysicsObject.Collided">
            <summary>
            Tapahtuu, kun törmätään toiseen fysiikkaolioon.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.MakeOneWay">
            <summary>
            Tekee oliosta läpimentävän alhaalta ylöspäin (tasohyppelytaso).
            Huom. ei toimi yhdessä CollisionIgnoreGroupien kanssa!
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.MakeOneWay(Jypeli.Vector)">
            <summary>
            Tekee oliosta läpimentävän vektorin suuntaan.
            Huom. ei toimi yhdessä CollisionIgnoreGroupien kanssa!
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.CreatePhysicsShape(Jypeli.Shape,Jypeli.Vector,Jypeli.CollisionShapeParameters)">
            <summary>
            Creates a shape to be used in the Physics Body. A physics shape is scaled to the
            size of the object. In addition, it has more vertices and some additional info
            that is used in collision detection.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.Push(Jypeli.Vector)">
            <summary>
            Työntää oliota.
            </summary>
            <param name="force">Voima, jolla oliota työnnetään.</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.Push(Jypeli.Vector,System.TimeSpan)">
            <summary>
            Työntää oliota tietyn ajan tietyllä voimalla.
            </summary>
            <param name="force">Voima, jolla oliota työnnetään sekunnissa.</param>
            <param name="time">Aika, kuinka kauan voimaa pidetään yllä.</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.Hit(Jypeli.Vector)">
            <summary>
            Kohdistaa kappaleeseen impulssin. Tällä kappaleen saa nopeasti liikkeeseen.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.ApplyTorque(System.Double)">
            <summary>
            Kohdistaa kappaleeseen vääntövoiman. Voiman suunta riippuu merkistä.
            </summary>
            <param name="torque">Vääntövoima.</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.Stop">
            <summary>
            Pysäyttää olion.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.StopHorizontal">
            <summary>
            Pysäyttää olion liikkeen vaakasuunnassa.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.StopVertical">
            <summary>
            Pysäyttää olion liikkeen pystysuunnassa.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.StopAxial(Jypeli.Vector)">
            <summary>
            Pysäyttää liikkeen akselin suunnassa.
            </summary>
            <param name="axis">Akseli vektorina (ei väliä pituudella)</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.StopAngular">
            <summary>
            Pysäyttää kaiken pyörimisliikkeen.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.Move(Jypeli.Vector)">
            <summary>
            Siirtää oliota.
            </summary>
            <param name="movement">Vektori, joka määrittää kuinka paljon siirretään.</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.Throw(Jypeli.PhysicsObject,Jypeli.Angle,System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Heittää kappaleen hahmon rintamasuuntaa kohti.
            </summary>
            <param name="obj">Heitettävä kappale</param>
            <param name="angle">Suhteellinen kulma (0 astetta suoraan, 90 ylös)</param>
            <param name="force">Heiton voimakkuus</param>
            <param name="distOffset">Offset ammuksen etäisyydelle</param>
            <param name="layer">Pelimaailman kerros</param>
            <param name="axialOffset">Offset ammuksen akselin suuntaiselle paikalle</param>
        </member>
        <member name="F:Jypeli.PhysicsObject.ActiveForces">
            <summary>
            Olioon vaikuttavat voimat
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden fysiikkaolion.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.#ctor(System.Double,System.Double,Jypeli.Shape)">
            <summary>
            Luo uuden fysiikkaolion.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
            <param name="shape">Muoto.</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.#ctor(Jypeli.Image)">
            <summary>
            Luo uuden fysiikkaolion.
            Kappaleen koko ja ulkonäkö ladataan parametrina annetusta kuvasta.
            </summary>
            <param name="image">Kuva</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.#ctor(Jypeli.RaySegment)">
            <summary>
            Luo fysiikkaolion, jonka muotona on säde.
            </summary>
            <param name="raySegment">Säde.</param>
        </member>
        <member name="M:Jypeli.PhysicsObject.#ctor(System.Double,System.Double,Jypeli.Shape,Physics2DDotNet.Shapes.IShape)">
            <summary>
            Initializes the object with the given physics shape. The size of
            the physicsShape must be the one given.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.CreateStaticObject(System.Double,System.Double)">
            <summary>
            Tekee suorakulmaisen kappaleen, joka on staattinen (eli pysyy paikallaan).
            </summary>
            <param name="width">Kappaleen leveys</param>
            <param name="height">Kappaleen korkeus</param>
            <returns>Fysiikkaolio</returns>
        </member>
        <member name="M:Jypeli.PhysicsObject.CreateStaticObject(Jypeli.Image)">
            <summary>
            Tekee suorakulmaisen kappaleen, joka on staattinen (eli pysyy paikallaan).
            Kappaleen koko ja ulkonäkö ladataan parametrina annetusta kuvasta.
            </summary>
            <param name="width">Kappaleen leveys</param>
            <param name="height">Kappaleen korkeus</param>
            <returns>Fysiikkaolio</returns>
        </member>
        <member name="M:Jypeli.PhysicsObject.CreateStaticObject(System.Double,System.Double,Jypeli.Shape)">
            <summary>
            Tekee vapaamuotoisen kappaleen, joka on staattinen (eli pysyy paikallaan).
            </summary>
            <param name="width">Kappaleen leveys</param>
            <param name="height">Kappaleen korkeus</param>
            <param name="shape">Kappaleen muoto</param>
            <returns>Fysiikkaolio</returns>
        </member>
        <member name="M:Jypeli.PhysicsObject.MakeStatic">
            <summary>
            Tekee oliosta staattisen. Staattinen olio ei liiku muiden olioiden törmäyksistä,
            vaan ainoastaan muuttamalla suoraan sen paikkaa tai nopeutta.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsObject.SetMassAndInertia(System.Double)">
            <summary>
            This updates the mass and momentOfInertia based on the new mass.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.StaticFriction">
            <summary>
            Lepokitka. Liikkeen alkamista vastustava voima, joka ilmenee kun olio yrittää lähteä liikkeelle
            toisen olion pinnalta (esim. laatikkoa yritetään työntää eteenpäin).
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.KineticFriction">
            <summary>
            Liikekitka. Liikettä vastustava voima joka ilmenee kun kaksi oliota liikkuu toisiaan vasten
            (esim. laatikko liukuu maata pitkin). Arvot välillä 0.0 (ei kitkaa) ja 1.0 (täysi kitka).
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Restitution">
            <summary>
            Olion kimmoisuus. Arvo välillä 0.0-1.0.
            Arvolla 1.0 olio säilyttää kaiken vauhtinsa törmäyksessä. Mitä pienempi arvo,
            sitä enemmän olion vauhti hidastuu törmäyksessä.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.CollisionIgnorer">
            <summary>
            Olio, jolla voi välttää oliota osumasta tiettyihin muihin olioihin.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.CollisionIgnoreGroup">
            <summary>
            Törmäysryhmä.
            Oliot jotka ovat samassa törmäysryhmässä menevät toistensa läpi.
            Jos ryhmä on nolla tai negatiivinen, sillä ei ole vaikutusta.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.IgnoresCollisionResponse">
            <summary>
            Jättääkö olio törmäyksen huomioimatta. Jos tosi, törmäyksestä
            tulee tapahtuma, mutta itse törmäystä ei tapahdu.
            </summary>
        </member>
        <member name="E:Jypeli.PhysicsObject.Collided">
            <summary>
            Tapahtuu kun olio törmää toiseen.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Body">
            <summary>
            Fysiikkamoottorin käyttämä tietorakenne.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Position">
            <summary>
            Olion paikka koordinaatistossa. Käsittää sekä X- että Y-koordinaatin.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Size">
            <summary>
            Olion koko (x on leveys, y on korkeus).
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Angle">
            <summary>
            Kulma, jossa olio on. Oliota voi pyörittää kulmaa vaihtamalla.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Shape">
            <summary>
            Olion muoto.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Velocity">
            <summary>
            Olion nopeus.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.AngularVelocity">
            <summary>
            Olion kulmanopeus.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.MaxVelocity">
            <summary>
            Suurin nopeus, jonka olio voi saavuttaa.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.MaxAngularVelocity">
            <summary>
            Suurin kulmanopeus, jonka olio voi saavuttaa.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Acceleration">
            <summary>
            Olion kiihtyvyys.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.AngularAcceleration">
            <summary>
            Olion kulmakiihtyvyys.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.ParentStructure">
            <summary>
            Rakenneolio, johon tämä olio kuuluu.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.IgnoresExplosions">
            <summary>
            Jättääkö olio räjähdyksen paineaallon huomiotta.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.IgnoresGravity">
            <summary>
            Jättääkö olio painovoiman huomioimatta.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.IgnoresPhysicsLogics">
            <summary>
            Jättääkö olio kaikki fysiikkalogiikat (ks. <c>AddPhysicsLogic</c>)
            huomiotta. Vaikuttaa esim. painovoimaan, mutta ei törmäyksiin.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.IsDestroying">
            <summary>
            Onko olio tuhoutumassa.
            </summary>
        </member>
        <member name="E:Jypeli.PhysicsObject.Destroying">
            <summary>
            Tapahtuu, kun olion tuhoaminen alkaa.
            </summary> 
        </member>
        <member name="P:Jypeli.PhysicsObject.CanRotate">
            <summary>
            Jos <c>false</c>, olio ei voi pyöriä.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.Mass">
            <summary>
            Olion massa. Mitä suurempi massa, sitä suurempi voima tarvitaan olion liikuttamiseksi.
            </summary>
            <remarks>
            Massan asettaminen muuttaa myös hitausmomenttia (<c>MomentOfInertia</c>).
            </remarks>
        </member>
        <member name="P:Jypeli.PhysicsObject.MomentOfInertia">
            <summary>
            Olion hitausmomentti. Mitä suurempi hitausmomentti, sitä enemmän vääntöä tarvitaan
            olion pyörittämiseksi.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.LinearDamping">
            <summary>
            Olion hidastuminen. Hidastaa olion vauhtia, vaikka se ei
            osuisi mihinkään. Vähän kuin väliaineen (esim. ilman tai veden)
            vastus. Oletusarvo on 1.0, jolloin hidastumista ei ole. Mitä
            pienempi arvo, sitä enemmän kappale hidastuu.
            
            Yleensä kannattaa käyttää arvoja, jotka ovat lähellä ykköstä,
            esim. 0.95.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsObject.AngularDamping">
            <summary>
            Olion pyörimisen hidastuminen.
            
            <see cref="P:Jypeli.PhysicsObject.LinearDamping"/>
            </summary>
        </member>
        <member name="M:PlatformCharacter2.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden tasohyppelyhahmon.
            </summary>
        </member>
        <member name="M:PlatformCharacter2.#ctor(System.Double,System.Double,Jypeli.Shape)">
            <summary>
            Luo uuden tasohyppelyhahmon.
            </summary>
        </member>
        <member name="M:PlatformCharacter2.Walk">
            <summary>
            Kävelee.
            </summary>
        </member>
        <member name="M:PlatformCharacter2.Walk(Jypeli.Direction)">
            <summary>
            Kävelee tiettyyn suuntaan.
            </summary>
            <param name="direction">Rintamasuunta. Direction.Left tai Direction.Right</param>
        </member>
        <member name="M:PlatformCharacter2.Turn(Jypeli.Direction)">
            <summary>
            Kääntyy.
            </summary>
            <param name="direction">Suunta</param>
        </member>
        <member name="M:PlatformCharacter2.StopWalking">
            <summary>
            Pysähtyy.
            </summary>
        </member>
        <member name="M:PlatformCharacter2.Jump(System.Double)">
            <summary>
            Hyppää tietyllä nopeudella, jos hahmo seisoo tukevalla pohjalla.
            </summary>
            <param name="speed">Lähtönopeus.</param>
        </member>
        <member name="M:PlatformCharacter2.ForceJump(System.Double)">
            <summary>
            Hyppää vaikka olio ei olisikaan toisen päällä.
            </summary>
            <param name="speed">Lähtönopeus maasta.</param>
        </member>
        <member name="M:PlatformCharacter2.Update(Jypeli.Time)">
            <summary>
            Ajetaan kun pelitilannetta päivitetään. Päivityksen voi toteuttaa omassa luokassa toteuttamalla tämän
            metodin. Perityn luokan metodissa tulee kutsua kantaluokan metodia.
            </summary>
            <param name="time">Peliaika.</param>
        </member>
        <member name="M:PlatformCharacter2.Move(Jypeli.Vector)">
            <summary>
            Siirtää oliota.
            </summary>
            <param name="movement">Vektori, joka määrittää kuinka paljon siirretään.</param>
        </member>
        <member name="P:PlatformCharacter2.PlatformTolerance">
            <summary>
            Toleranssiarvo, joka määrittää kuinka monta pelin päivitysjaksoa hahmo voi
            olla irti tasosta ennen kuin se lasketaan ilmassa olevaksi.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.FacingDirection">
            <summary>
            Hahmon rintamasuunta (vasen tai oikea).
            </summary>
        </member>
        <member name="P:PlatformCharacter2.Acceleration">
            <summary>
            Hahmon kiihtyvyys.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.MaxVelocity">
            <summary>
            Hahmon maksiminopeus.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.Platform">
            <summary>
            Fysiikkaolio jonka päällä seisotaan.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.PlatformNormal">
            <summary>
            Suuntavektori, joka osoittaa tason suuntaan.
            Nollavektori, jos ilmassa.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.Weapon">
            <summary>
            Hahmolla oleva ase.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.CanMoveOnAir">
            <summary>
            Jos <c>false</c>, hahmoa ei voi liikuttaa kun se on ilmassa.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.AnimWalk">
            <summary>
            Kävelyanimaatio (oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter2.AnimJump">
            <summary>
            Hyppyanimaatio (oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter2.AnimFall">
            <summary>
            Putoamisanimaatio (oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter2.LoopJumpAnim">
            <summary>
            Toistetaanko hyppyanimaatiota useammin kuin kerran.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.LoopFallAnim">
            <summary>
            Toistetaanko putoamisanimaatiota useammin kuin kerran.
            </summary>
        </member>
        <member name="P:PlatformCharacter2.AnimIdle">
            <summary>
            Animaatio, jota käytetään kun hahmo on paikallaan (kääntyneenä oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter2.WalkOnAir">
            <summary>
            Toistetaanko kävelyanimaatiota ilmassa liikuttaessa?
            </summary>
        </member>
        <member name="E:PlatformCharacter2.DirectionChanged">
            <summary>
            Tapahtuu kun suunta vaihtuu.
            </summary>
        </member>
        <member name="T:Jypeli.Brain">
            <summary>
            Aivoluokka peliolioille.
            Voidaan käyttää tekoälyn ja tilannekohtaisten toimintamallien luomiseen
            peliolioille, esimerkkinä tietokoneen ohjaamat viholliset.
            </summary>    
        </member>
        <member name="F:Jypeli.Brain.None">
            <summary>
            Tyhjät aivot, eivät sisällä mitään toiminnallisuutta.
            </summary>
        </member>
        <member name="M:Jypeli.Brain.OnAdd(Jypeli.IGameObject)">
            <summary>
            Kutsutaan, kun aivot lisätään oliolle.
            </summary>
            <param name="newOwner">Olio, jolle aivot lisättiin.</param>
        </member>
        <member name="M:Jypeli.Brain.OnRemove(Jypeli.IGameObject)">
            <summary>
            Kutsutaan, kun aivot poistetaan oliolta.
            </summary>
            <param name="prevOwner">Olio, jolta aivot poistettiin.</param>
        </member>
        <member name="M:Jypeli.Brain.OnAddToGame">
            <summary>
            Kutsutaan, kun aivojen omistaja lisätään peliin tai omistajaksi
            asetetaan olio, joka on jo lisätty peliin.
            </summary>
        </member>
        <member name="M:Jypeli.Brain.Update(Jypeli.Time)">
            <summary>
            Kutsutaan, kun tilaa päivitetään.
            Suurin osa päätöksenteosta tapahtuu täällä.
            Perivässä luokassa methodin kuuluu kutsua vastaavaa
            kantaluokan methodia.
            </summary>
            <param name="time">Päivityksen ajanhetki.</param>
        </member>
        <member name="M:Jypeli.Brain.OnCollision(Jypeli.IGameObject)">
            <summary>
            Kutsutaan, kun tapahtuu törmäys.
            Perivässä luokassa methodin kuuluu kutsua vastaavaa
            kantaluokan methodia.
            </summary>
            <param name="target">Olio, johon törmätään.</param>
        </member>
        <member name="P:Jypeli.Brain.Active">
            <summary>
            Aivot käytössä tai pois käytöstä.
            </summary>
        </member>
        <member name="E:Jypeli.Brain.Updated">
            <summary>
            Tapahtuu kun aivoja päivitetään.
            </summary>
        </member>
        <member name="P:Jypeli.Brain.Owner">
            <summary>
            Aivojen haltija.
            </summary>
        </member>
        <member name="T:Jypeli.LabyrinthWandererBrain">
            <summary>
            Aivot, jotka saavat omistajansa liikkumaan labyrinttimäisessä kentässä satunnaisesti edeten.
            </summary>
        </member>
        <member name="T:Jypeli.AbstractMoverBrain">
            <summary>
            Yleiset liikkumiseen tarkoitetut aivot.
            </summary>
        </member>
        <member name="P:Jypeli.AbstractMoverBrain.Speed">
            <summary>
            Nopeus, jolla liikutaan.
            </summary>
            <value>Nopeus.</value>
        </member>
        <member name="P:Jypeli.AbstractMoverBrain.TurnWhileMoving">
            <summary>
            Käännytäänkö siihen suuntaan mihin liikutaan.
            </summary>
        </member>
        <member name="P:Jypeli.AbstractMoverBrain.TurnSpeed">
            <summary>
            Maksimikääntymisnopeus (radiaania sekunnissa)
            </summary>
        </member>
        <member name="M:Jypeli.LabyrinthWandererBrain.#ctor(System.Double)">
            <summary>
            Luo uudet aivot, jotka saavat omistajansa vaeltelemaan labyrintissä.
            </summary>
            <param name="tileSize">Kentän ruudun koko.</param>
        </member>
        <member name="M:Jypeli.LabyrinthWandererBrain.#ctor(System.Double,System.Double)">
            <summary>
            Luo uudet aivot, jotka saavat omistajansa vaeltelemaan labyrintissä.
            </summary>
            <param name="tileSize">Kentän ruudun koko.</param>
            <param name="speed">Nopeus.</param>
        </member>
        <member name="M:Jypeli.LabyrinthWandererBrain.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Luo uudet aivot, jotka saavat omistajansa vaeltelemaan labyrintissä.
            </summary>
            <param name="tileSize">Kentän ruudun koko.</param>
            <param name="speed">Nopeus.</param>
            <param name="wallTag">Tagilla varustetut oliot tulkitaan seiniksi, muita ei väistetä.</param>
        </member>
        <member name="M:Jypeli.LabyrinthWandererBrain.SetNextDirectionAndDestination">
            <summary>
            Asetetaan uusi suunta. Hakee olioita edestä ja sivuilta ja arpoo tyhjistä kohdista uuden suunnan.
            Jos eteen tai sivuille ei pääse, uusi suunta on taaksepäin.
            </summary>
        </member>
        <member name="M:Jypeli.LabyrinthWandererBrain.Update(Jypeli.Time)">
            <summary>
            Liikuttaa omistajaa Move-metodilla.
            Asetetaan uusi suunta jos ollaan saavutettu annettu määränpää, annettu määränpää on kauempana kuin yksi ruudun koko tai edellisestä suunnan asettamisesta on kulunut riittävän pitkä aika.
            </summary>
            <param name="time"></param>
        </member>
        <member name="P:Jypeli.LabyrinthWandererBrain.DirectionChangeTimeout">
            <summary>
            Jos jäädään jumiin, kuinka pian arvotaan uusi suunta. Oletuksena 1 sekunti.
            </summary>
        </member>
        <member name="P:Jypeli.LabyrinthWandererBrain.LabyrinthWallTag">
            <summary>
            Tagi, jolla varustetut oliot tulkitaan seiniksi. Muilla tageilla varustettuja olioita ei väistetä.
            </summary>
        </member>
        <member name="T:Jypeli.PlatformWandererBrain">
            <summary>
            Aivot, jotka laittavat omistajansa hortoilemaan tasohyppelytasoa
            edestakaisin.
            </summary>
        </member>
        <member name="P:Jypeli.PlatformWandererBrain.JumpSpeed">
            <summary>
            Hyppynopeus.
            </summary>
        </member>
        <member name="P:Jypeli.PlatformWandererBrain.Speed">
            <summary>
            Nopeus.
            </summary>
        </member>
        <member name="P:Jypeli.PlatformWandererBrain.FallsOffPlatforms">
            <summary>
            Tippuuko aivojen omistaja tasojen reunoilta.
            </summary>
        </member>
        <member name="P:Jypeli.PlatformWandererBrain.TriesToJump">
            <summary>
            Yrittääkö aivojen omistaja hypätä esteen päälle kun se kävelee esteeseen.
            </summary>
        </member>
        <member name="T:Jypeli.FollowerBrain">
            <summary>
            Aivot, joiden tehtävänä on laittaa omistajansa seuraamaan jotakin kohdetta.
            </summary>
        </member>
        <member name="M:Jypeli.FollowerBrain.CreateDistanceComparer(System.Double)">
            <summary>
            Luo FollowComparer-vertailijan, jolla aivot seuraavat aina lähintä oliota.
            </summary>
            <param name="changeTargetDistance">
            Ero kahden olion etäisyyden välillä ennen kuin vaihdetaan seurattavaa kohdetta.
            Mitä pienempi arvo, sitä helpommin kohdetta vaihdetaan.
            </param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.FollowerBrain.#ctor">
            <summary>
            Luo aivot.
            </summary>
        </member>
        <member name="M:Jypeli.FollowerBrain.#ctor(System.Object[])">
            <summary>
            Luo aivot ja asettaa ne seuraamaan yhtä tai useampaa kohdetta.
            </summary>
            <param name="targets">Seurattavat oliot. Voit antaa olioiden lisäksi myös tageja.</param>
        </member>
        <member name="M:Jypeli.FollowerBrain.Update(Jypeli.Time)">
            <summary>
            Kutsutaan, kun tilaa päivitetään.
            Suurin osa päätöksenteosta tapahtuu täällä.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.TagsToFollow">
            <summary>
            Tagit, joita seurataan.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.ObjectsToFollow">
            <summary>
            Oliot, joita seurataan.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.FollowComparer">
            <summary>
            Metodi, joka vertailee kahta oliota keskenään.
            Kumpi olio tulee ensimmäiseksi, sitä seurataan.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.CurrentTarget">
            <summary>
            Olio, jota parhaillaan seurataan.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.DistanceToTarget">
            <summary>
            Etäisyys lähimpään kohteeseen.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.DistanceClose">
            <summary>
            Etäisyys, jolloin ollaan lähellä kohdetta.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.DistanceFar">
            <summary>
            Etäisyys, jolloin ollaan kaukana kohteesta ja lopetetaan sen seuraaminen.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.FarBrain">
            <summary>
            Aivot, joita käytetään näiden sijasta kun ollaan kaukana kaikista kohteista,
            esim. RandomMoverBrain
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.CloseBrain">
            <summary>
            Aivot, joita käytetään näiden sijasta kun ollaan lähellä kohdestta
            </summary>
        </member>
        <member name="E:Jypeli.FollowerBrain.TargetClose">
            <summary>
            Tapahtuma, joka suoritetaan, kun ollaan tarpeeksi lähellä seurattavaa.
            </summary>
        </member>
        <member name="P:Jypeli.FollowerBrain.StopWhenTargetClose">
            <summary>
            Pysähdytäänkö, kun ollaan lähellä kohdetta.
            </summary>
            <value>
            	<c>true</c> jos pysähdytään; jos ei, niin <c>false</c>.
            </value>
        </member>
        <member name="P:Jypeli.FollowerBrain.Delay">
            <summary>
            Viive seuraamislogiikassa. Oletuksena nolla (seuraa reaaliajassa)
            </summary>
        </member>
        <member name="T:Jypeli.RandomMoverBrain">
            <summary>
            Aivot, jotka laittavat omistajansa liikkumaan satunnaisesti eri suuntiin törmäyksissä ja tietyn ajan jälkeen.
            </summary>
        </member>
        <member name="M:Jypeli.RandomMoverBrain.#ctor">
            <summary>
            Luo uudet satunnaisliikkujan aivot.
            </summary>
        </member>
        <member name="M:Jypeli.RandomMoverBrain.#ctor(System.Double)">
            <summary>
            Luo uudet satunnaisliikkujan aivot ja asettaa niille nopeuden.
            </summary>
        </member>
        <member name="M:Jypeli.RandomMoverBrain.OnCollision(Jypeli.IGameObject)">
            <summary>
            Kutsutaan, kun tapahtuu törmäys.
            </summary>
            <param name="target">Olio, johon törmätään.</param>
        </member>
        <member name="P:Jypeli.RandomMoverBrain.ChangeMovementSeconds">
            <summary>
            Aika sekunteina, jonka kuluttua muutetaan liikesuuntaa
            </summary>
        </member>
        <member name="P:Jypeli.RandomMoverBrain.WanderPosition">
            <summary>
            Paikka, jonka ympärillä harhaillaan, jos WanderRadius on asetettu.
            </summary>
        </member>
        <member name="P:Jypeli.RandomMoverBrain.WanderRadius">
            <summary>
            Säde, jonka sisälle harhailu rajoittuu.
            </summary>
        </member>
        <member name="F:Jypeli.Button.Start">
            <summary>
            Start.
            </summary>
        </member>
        <member name="F:Jypeli.Button.Back">
            <summary>
            Back.
            </summary>
        </member>
        <member name="F:Jypeli.Button.LeftStick">
            <summary>
            Oikea tikku.
            </summary>
        </member>
        <member name="F:Jypeli.Button.RightStick">
            <summary>
            Vasen tikku.
            </summary>
        </member>
        <member name="F:Jypeli.Button.LeftShoulder">
            <summary>
            Vasen olkanappi.
            </summary>
        </member>
        <member name="F:Jypeli.Button.RightShoulder">
            <summary>
            Oikea olkanappi.
            </summary>
        </member>
        <member name="F:Jypeli.Button.RightTrigger">
            <summary>
            Oikea liipasin.
            </summary>
        </member>
        <member name="F:Jypeli.Button.LeftTrigger">
            <summary>
            Vasen liipasin.
            </summary>
        </member>
        <member name="T:Jypeli.ButtonState">
            <summary>
            Napin (minkä tahansa) asento.
            </summary>
        </member>
        <member name="F:Jypeli.ButtonState.Irrelevant">
            <summary>
            Ei väliä.
            </summary>
        </member>
        <member name="F:Jypeli.ButtonState.Released">
            <summary>
            Nappi nostetaan ylös.
            </summary>
        </member>
        <member name="F:Jypeli.ButtonState.Pressed">
            <summary>
            Nappi painetaan alas.
            </summary>
        </member>
        <member name="F:Jypeli.ButtonState.Up">
            <summary>
            Nappi on ylhäällä.
            </summary>
        </member>
        <member name="F:Jypeli.ButtonState.Down">
            <summary>
            Nappi on alhaalla.
            </summary>
        </member>
        <member name="T:Jypeli.Key">
            <summary>
            Näppäimistön näppäin.
            </summary>
        </member>
        <member name="E:Jypeli.Controls.ListenContext.Activated">
            <summary>
            Tapahtuu kun konteksti aktivoidaan.
            </summary>
        </member>
        <member name="E:Jypeli.Controls.ListenContext.Deactivated">
            <summary>
            Tapahtuu kun konteksti passivoidaan.
            </summary>
        </member>
        <member name="T:Jypeli.MouseButton">
            <summary>
            Hiiren napit.
            </summary>
        </member>
        <member name="F:Jypeli.MouseButton.None">
            <summary>
            Ei mikään nappi hiiressä.
            </summary>
        </member>
        <member name="F:Jypeli.MouseButton.Left">
            <summary>
            Vasen nappi hiiressä.
            </summary>
        </member>
        <member name="F:Jypeli.MouseButton.Right">
            <summary>
            Oikea nappi hiiressä.
            </summary>
        </member>
        <member name="F:Jypeli.MouseButton.Middle">
            <summary>
            Keskimmäinen nappi hiiressä (rullan painallus).
            </summary>
        </member>
        <member name="F:Jypeli.MouseButton.XButton1">
            <summary>
            Hiiren ensimmäinen erikoisnäppäin.
            </summary>
        </member>
        <member name="F:Jypeli.MouseButton.XButton2">
            <summary>
            Hiiren toinen erikoisnäppäin.
            </summary>
        </member>
        <member name="T:Jypeli.INotifyList`1">
            <summary>
            Lista, joka ilmoittaa muutoksistaan.
            </summary>
            <typeparam name="T">Listan alkion tyyppi.</typeparam>
        </member>
        <member name="E:Jypeli.INotifyList`1.Changed">
            <summary>
            Tapahtuu kun listan sisältö muuttuu.
            </summary>
        </member>
        <member name="T:Jypeli.ScoreList">
            <summary>
            Parhaiden pisteiden lista.
            </summary>
        </member>
        <member name="M:Jypeli.ScoreList.#ctor">
            <summary>
            Luo tyhjän, 10 sijan top-listan.
            </summary>
        </member>
        <member name="M:Jypeli.ScoreList.#ctor(System.Int32,System.Boolean,System.Double,System.String)">
            <summary>
            Luo uuden, tyhjän top-listan.
            </summary>
            <param name="length">Kuinka monta nimeä listalla voi olla enintään.</param>
            <param name="reverse">Käänteinen järjestys (false = suurempi tulos parempi, true = pienempi tulos parempi).</param>
            <param name="baseScore">Pohjatulos, jota parempi hyväksyttävän tuloksen on oltava.</param>
            <param name="defaultName">Oletusnimi tyhjille paikoille.</param>
        </member>
        <member name="M:Jypeli.ScoreList.#ctor(System.Int32,System.Boolean,System.Double)">
            <summary>
            Luo uuden, tyhjän top-listan.
            </summary>
            <param name="length">Kuinka monta nimeä listalla voi olla enintään.</param>
            <param name="reverse">Käänteinen järjestys (false = suurempi tulos parempi, true = pienempi tulos parempi).</param>
            <param name="baseScore">Pohjatulos, jota parempi hyväksyttävän tuloksen on oltava.</param>
        </member>
        <member name="M:Jypeli.ScoreList.Qualifies(System.Double)">
            <summary>
            Tarkistaa, kelpaako tulos listalle.
            </summary>
            <param name="score">Tulos</param>
            <returns>true jos tulos riitää listalle pääsemiseksi, false jos ei.</returns>
        </member>
        <member name="M:Jypeli.ScoreList.Add(System.String,System.Double)">
            <summary>
            Lisää nimen ja pisteet listalle, jos tulos on tarpeeksi hyvä.
            </summary>
            <param name="name">Nimi.</param>
            <param name="score">Pisteet.</param>
            <returns>Pistesija, tai -1 jos tulos ei ole riittävä listalle pääsemiseksi.</returns>
        </member>
        <member name="P:Jypeli.ScoreList.Count">
            <summary>
            Kuinka monta nimeä listalle mahtuu.
            </summary>
        </member>
        <member name="P:Jypeli.ScoreList.Item(System.Int32)">
            <summary>
            Nimet ja pisteet. Indeksointi alkaa yhdestä.
            <example>
            string ykkosenNimi = Lista[1].Name;
            double ykkosenPisteet = Lista[1].Score;
            </example>
            </summary>
            <param name="position">Sijoitus listalla.</param>
            <returns></returns>
        </member>
        <member name="P:Jypeli.ScoreList.Reverse">
            <summary>
            Käänteinen järjestys, ts. pienempi tulos on parempi.
            </summary>
        </member>
        <member name="E:Jypeli.ScoreList.Changed">
            <summary>
            Tapahtuu kun listan sisältö muuttuu.
            </summary>
        </member>
        <member name="T:Jypeli.ScoreItem">
            <summary>
            Nimi ja pisteet.
            </summary>
        </member>
        <member name="F:Jypeli.ScoreItem.Name">
            <summary>
            Nimi
            </summary>
        </member>
        <member name="F:Jypeli.ScoreItem.Score">
            <summary>
            Pistemäärä
            </summary>
        </member>
        <member name="M:Jypeli.ScoreItem.#ctor(System.String,System.Double)">
            <summary>
            Luo uuden sijoituksen listalle.
            </summary>
            <param name="name">Nimi</param>
            <param name="score">Pistemäärä.</param>
        </member>
        <member name="T:Jypeli.UnlimitedAngle">
            <summary>
            Rajoittamaton kulma (asteina ja radiaaneina).
            Tietoja kulmasta: http://en.wikipedia.org/wiki/File:Degree-Radian_Conversion.svg
            </summary>
        </member>
        <member name="F:Jypeli.UnlimitedAngle.Zero">
            <summary>
            Nollakulma.
            </summary>
        </member>
        <member name="F:Jypeli.UnlimitedAngle.RightAngle">
            <summary>
            Suora kulma (90 astetta).
            </summary>
        </member>
        <member name="F:Jypeli.UnlimitedAngle.StraightAngle">
            <summary>
            Oikokulma (180 astetta).
            </summary>
        </member>
        <member name="F:Jypeli.UnlimitedAngle.FullAngle">
            <summary>
            Täysikulma (360 astetta).
            </summary>
        </member>
        <member name="F:Jypeli.UnlimitedAngle.Infinity">
            <summary>
            Ääretön kulma.
            </summary>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Addition(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Laskee kaksi kulmaa yhteen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Kulmien summa.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Subtraction(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Vähentää jälkimmäisen kulman ensimmäisestä.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Kulmien erotus.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_UnaryNegation(Jypeli.UnlimitedAngle)">
            <summary>
            Ottaa kulman vastakulman.
            </summary>
            <param name="a">Kulma.</param>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Multiply(System.Double,Jypeli.UnlimitedAngle)">
            <summary>
            Kertoo kulman reaaliluvulla.
            </summary>
            <param name="a">Reaaliluku.</param>
            <param name="b">Kulma.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Multiply(Jypeli.UnlimitedAngle,System.Double)">
            <summary>
            Kertoo kulman reaaliluvulla.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Reaaliluku.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Division(Jypeli.UnlimitedAngle,System.Double)">
            <summary>
            Jakaa kulman reaaliluvulla.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Reaaliluku.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Equality(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Vertaa kahden kulman yhtäsuuruutta.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Yhtäsuuruus.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Inequality(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Vertaa kahden kulman erisuuruutta.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Erisuuruus.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_LessThan(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Vertaa ensimmäisen kulman suuremmuutta toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos suurempi, <c>false</c> jos pienempi tai yhtäsuuri.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_LessThanOrEqual(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Vertaa ensimmäisen kulman suuremmuutta/yhtäsuuruutta toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos suurempi tai yhtäsuuri, <c>false</c> jos pienempi.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_GreaterThan(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Vertaa ensimmäisen kulman pienemmyyttä toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos pienempi, <c>false</c> jos suurempi tai yhtäsuuri.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_GreaterThanOrEqual(Jypeli.UnlimitedAngle,Jypeli.UnlimitedAngle)">
            <summary>
            Vertaa ensimmäisen kulman pienemmyyttä/yhtäsuuruutta toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos pienempi tai yhtäsuuri, <c>false</c> jos suurempi.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.op_Explicit(Jypeli.UnlimitedAngle)~Jypeli.Angle">
            <summary>
            Rajoittaa kulman tyyppimuunnoksena.
            </summary>
            <param name="angle">Rajoittamaton kulma</param>
            <returns>Rajoitettu kulma</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.Sum(Jypeli.UnlimitedAngle,Jypeli.Angle)">
            <summary>
            Laskee yhteen rajoittamattoman ja rajoitetun kulman, palauttaen rajoittamattoman kulman.
            </summary>
            <param name="a">Rajoittamaton kulma</param>
            <param name="b">Rajoitettu kulma</param>
            <returns>Rajoittamaton kulma</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.Sum(Jypeli.Angle,Jypeli.UnlimitedAngle)">
            <summary>
            Laskee yhteen rajoitetun ja rajoittamattoman kulman, palauttaen rajoittamattoman kulman.
            </summary>
            <param name="a">Rajoitettu kulma</param>
            <param name="b">Rajoittamaton kulma</param>
            <returns>Rajoittamaton kulma</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.Limit">
            <summary>
            Palauttaa kulman rajoitettuna välille -180 ja 180 astetta.
            </summary>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.FromRadians(System.Double)">
            <summary>
            Luo kulman annettujen radiaanien mukaan.
            </summary>
            <param name="radian">Radiaanit.</param>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.FromDegrees(System.Double)">
            <summary>
            Luo kulman annettujen asteiden mukaan.
            </summary>
            <param name="degree">Asteet.</param>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.DegreeToRadian(System.Double)">
            <summary>
            Muuttaa asteet radiaaneiksi.
            </summary>
            <param name="degree">Asteet.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.RadianToDegree(System.Double)">
            <summary>
            Muuttaa radiaanit asteiksi.
            </summary>
            <param name="radian">Radiaanit.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.GetHashCode">
            <summary>
            Palauttaa kulmaa yksilöivän luvun, tässä tapauksessa kulman asteluvun.
            </summary>
            <returns>
            Kokonaisluku.
            </returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.Equals(System.Object)">
            <summary>
            Tarkistaa kahden kulman yhtäsuuruuden. Jos parametrinä annetaan jotain muuta kuin kulma, tulos on aina epätosi.
            </summary>
            <param name="obj">Toinen kulma.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.GetPositiveRadians">
            <summary>
            Palauttaa kulman radiaaneina siten, että se on aina positiivinen.
            Hyödyllinen esimerkiksi ympyrän kaarien käsittelyssä.
            </summary>
            <returns>]0,2pi]</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.GetPositiveDegrees">
            <summary>
            Palauttaa kulman asteina siten, että se on aina positiivinen.
            Hyödyllinen esimerkiksi ympyrän kaarien käsittelyssä.
            </summary>
            <returns>]0,360]</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.ArcSin(System.Double)">
            <summary>
            Palauttaa kulman joka vastaa d:n arcus-sini.
            </summary>
            <param name="d">Lukuarvo välillä 0-1.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.ArcCos(System.Double)">
            <summary>
            Palauttaa kulman joka vastaa d:n arcuskosini.
            </summary>
            <param name="d">Lukuarvo välillä 0-1.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.UnlimitedAngle.ArcTan(System.Double)">
            <summary>
            Palauttaa kulman joka vastaa d:n arcus-tangentti.
            </summary>
            <param name="d">Lukuarvo.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="P:Jypeli.UnlimitedAngle.Degrees">
            <summary>
            Palauttaa tai asettaa kulman asteina.
            </summary>
            <value>Asteet.</value>
        </member>
        <member name="P:Jypeli.UnlimitedAngle.Radians">
            <summary>
            Palauttaa tai asettaa kulman radiaaneina.
            </summary>
            <value>Radiaanit.</value>
        </member>
        <member name="P:Jypeli.UnlimitedAngle.MainDirection">
            <summary>
            Kulmaa vastaava pääilmansuunta.
            </summary>
        </member>
        <member name="P:Jypeli.UnlimitedAngle.Sin">
            <summary>
            Kulman sini.
            </summary>
        </member>
        <member name="P:Jypeli.UnlimitedAngle.Cos">
            <summary>
            Kulman kosini.
            </summary>
        </member>
        <member name="P:Jypeli.UnlimitedAngle.Tan">
            <summary>
            Kulman tangentti.
            </summary>
        </member>
        <member name="T:Jypeli.GameObjects.Oscillator">
            <summary>
            Harmoninen värähtelijä.
            </summary>
        </member>
        <member name="T:Jypeli.GameObjects.LinearOscillator">
            <summary>
            Harmoninen värähtelijä akselin suhteen.
            </summary>
        </member>
        <member name="T:Jypeli.GameObjects.AngularOscillator">
            <summary>
            Harmoninen värähtelijä pyörintäliikkeelle.
            </summary>
        </member>
        <member name="T:Jypeli.Effects.ParticleSystem">
            <summary>
            Järjestelmä partikkelien käsittelyyn
            </summary>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.FadeIn(System.Double)">
            <summary>
            Efekti tulee näkyviin tietyn sekuntimäärän aikana
            </summary>
            <param name="timeInSeconds">Aika joka kuluu että efekti on näkyvä</param>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.FadeOut(System.Double)">
            <summary>
            Efekti hiipuu näkyvistä tietyn sekuntimäärän aikana
            </summary>
            <param name="TimeInSeconds">Aika joka kuluu että efekti katoaa</param>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.#ctor(Jypeli.Image,System.Int32)">
            <summary>
            Muodostaja
            </summary>
            <param name="particleImage">Partikkelin kuva.</param>
            <param name="maxAmountOfParticles">Suurin määrä partikkeleita mitä efektillä voi olla kerralla</param>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.InitializeParticles">
            <summary>
            Metodi joka asettaa partikkeleille attribuutit
            Täytyy kutsua perityistä luokista
            </summary>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.AddEffect(System.Double,System.Double,System.Int32)">
            <summary>
            Lisää efektin kentälle
            </summary>
            <param name="x">Efektin x-koordinaatti</param>
            <param name="y">Efektin y-koordinaatti</param>
            <param name="numberOfParticles">Partikkeleiden määrä efektissä</param>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.AddEffect(Jypeli.Vector,System.Int32)">
            <summary>
            Lisää efektin kentälle
            </summary>
            <param name="position">Paikka.</param>
            <param name="numberOfParticles">Partikkeleiden määrä efektissä</param>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.GiveRandomDirection">
            <summary>
            Antaa satunnaisen suunnan
            </summary>
            <returns>Satunnainen suunta</returns>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.InitializeParticle(Jypeli.Effects.Particle,Jypeli.Vector)">
            <summary>
            Alustaa yhden partikkelin
            </summary>
            <param name="p">Partikkeli joka alustetaan</param>
            <param name="position">Sijainti johon alustetaan</param>
        </member>
        <member name="M:Jypeli.Effects.ParticleSystem.Update(Jypeli.Time)">
            <summary>
            Kutsutaan kun luokka päivitetään
            </summary>
            <param name="time">Gametime</param>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.ParticleImage">
            <summary>
            Yksittäisen partikkelin kuva.
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.OuterParticleImage">
            <summary>
            Partikkelin toissijainen kuva. Jos <c>null</c> niin käytetään vain yhtä kuvaa.
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MinScale">
            <summary>
            Pienin skaalaus joka efektin partikkeleilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MaxScale">
            <summary>
            Suurin skaalaus joka efektin partikkeleilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.ScaleAmount">
            <summary>
            Määrä jonka partikkeli skaalautuu päivityksessä
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MinVelocity">
            <summary>
            Pienin nopeus joka efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MaxVelocity">
            <summary>
            Suurin nopeus joka efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MinLifetime">
            <summary>
            Efektin partikkelin lyhin mahdollinen elinaika
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MaxLifetime">
            <summary>
            Efektin partikkelin pisin mahdollinen elinaika
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MinAcceleration">
            <summary>
            Pienin kiihtyvyys joka efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MaxAcceleration">
            <summary>
            Suurin kiihtyvyys joka efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MinRotationSpeed">
            <summary>
            Pienin pyörimisnopeus joka efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MaxRotationSpeed">
            <summary>
            Suurin pyörimisnopeus joka efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MinRotation">
            <summary>
            Pienin kierre mikä efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.MaxRotation">
            <summary>
            Suurin kierre mikä efektin partikkelilla voi olla
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.AlphaAmount">
            <summary>
            Efektin läpinäkyvyyskerroin (0.0-1.0)
            </summary>
        </member>
        <member name="P:Jypeli.Effects.ParticleSystem.IgnoreWind">
            <summary>
            Vaikuttaako efektiin tuuli
            </summary>
        </member>
        <member name="T:Jypeli.Game">
            <summary>
            Peliluokka reaaliaikaisille peleille.
            </summary>
        </member>
        <member name="M:Jypeli.Game.#ctor">
            <summary>
            Alustaa uuden peliluokan.
            </summary>
        </member>
        <member name="M:Jypeli.Game.#ctor(System.Int32)">
            <summary>
            Alustaa uuden peliluokan.
            </summary>
            <param name="device">Mikä monitori käytössä, 1=ensimmäinen</param>
        </member>
        <member name="M:Jypeli.Game.ShowMessageWindow(System.String)">
            <summary>
            Näyttää viesti-ikkunan.
            </summary>
            <param name="message">Viesti</param>
        </member>
        <member name="M:Jypeli.Game.AssertInitialized(System.Action)">
            <summary>
            Suorittaa aliohjelman kun peli on varmasti alustettu.
            </summary>
            <param name="actionMethod">Suoritettava aliohjelma.</param>
        </member>
        <member name="M:Jypeli.Game.DoNextUpdate(System.Action)">
            <summary>
            Suorittaa aliohjelman seuraavalla päivityksellä.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)">
            <summary>
            Suorittaa aliohjelman seuraavalla päivityksellä.
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="action"></param>
            <param name="p1"></param>
        </member>
        <member name="M:Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)">
            <summary>
            Suorittaa aliohjelman seuraavalla päivityksellä.
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="action"></param>
            <param name="p1"></param>
            <param name="p2"></param>
        </member>
        <member name="M:Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)">
            <summary>
            Suorittaa aliohjelman kun peli on varmasti alustettu.
            </summary>
            <param name="actionMethod">Suoritettava aliohjelma.</param>
        </member>
        <member name="M:Jypeli.Game.Add(Jypeli.IGameObject)">
            <summary>
            Lisää olion peliin.
            Tavalliset oliot tulevat automaattisesti kerrokselle 0
            ja ruutuoliot päällimmäiselle kerrokselle.
            </summary>
        </member>
        <member name="M:Jypeli.Game.Add(Jypeli.Effects.Light)">
            <summary>
            Lisää valon peliin. Nykyisellään valoja voi olla ainoastaan
            yksi kappale.
            </summary>
        </member>
        <member name="M:Jypeli.Game.Add(Jypeli.IGameObject,System.Int32)">
            <summary>
            Lisää peliolion peliin, tiettyyn kerrokseen.
            </summary>
            <param name="o">Lisättävä olio.</param>
            <param name="layer">Kerros, luku väliltä [-3, 3].</param>
        </member>
        <member name="M:Jypeli.Game.Add(Jypeli.Layer)">
            <summary>
            Lisää oliokerroksen peliin.
            </summary>
            <param name="l"></param>
        </member>
        <member name="M:Jypeli.Game.Remove(Jypeli.IGameObject)">
            <summary> 
            Poistaa olion pelistä. Jos haluat tuhota olion, 
            kutsu mielummin olion <c>Destroy</c>-metodia. 
            </summary> 
            <remarks> 
            Oliota ei poisteta välittömästi, vaan viimeistään seuraavan 
            päivityksen jälkeen. 
            </remarks> 
        </member>
        <member name="M:Jypeli.Game.Remove(Jypeli.Layer)">
            <summary>
            Poistaa oliokerroksen pelistä.
            </summary>
            <param name="l"></param>
        </member>
        <member name="M:Jypeli.Game.GetObjects(System.Predicate{Jypeli.GameObject})">
            <summary>
            Palauttaa listan kaikista peliolioista jotka toteuttavat ehdon.
            Lista on järjestetty päällimmäisestä alimmaiseen.
            </summary>
            <param name="condition">Ehto</param>
            <returns>Lista olioista</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectsWithTag(System.String[])">
            <summary>
            Palauttaa listan kaikista peliolioista joilla on tietty tagi.
            Lista on järjestetty päällimmäisestä alimmaiseen.
            </summary>
            <param name="tags">Tagi(t)</param>
            <returns>Lista olioista</returns>
        </member>
        <member name="M:Jypeli.Game.GetFirstObject(System.Predicate{Jypeli.GameObject})">
            <summary>
            Palauttaa ensimmäisen peliolion joka toteuttaa ehdon (null jos mikään ei toteuta).
            </summary>
            <param name="condition">Ehto</param>
            <returns>Olio</returns>
        </member>
        <member name="M:Jypeli.Game.GetFirstWidget(System.Predicate{Jypeli.Widget})">
            <summary>
            Palauttaa ensimmäisen ruutuolion joka toteuttaa ehdon (null jos mikään ei toteuta).
            </summary>
            <param name="condition">Ehto</param>
            <returns>Lista olioista</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectsAt(Jypeli.Vector)">
            <summary>
            Palauttaa listan peliolioista, jotka ovat annetussa paikassa.
            Jos paikassa ei ole mitään pelioliota, palautetaan tyhjä lista.
            Lista on järjestetty päällimmäisestä alimmaiseen.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <returns>Lista olioista</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectAt(Jypeli.Vector)">
            <summary>
            Palauttaa peliolion, joka on annetussa paikassa.
            Jos paikassa ei ole mitään pelioliota, palautetaan null.
            Jos olioita on useampia, palautetaan päällimmäinen.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <returns>Mahdollinen olio</returns>
        </member>
        <member name="M:Jypeli.Game.GetWidgetAt(Jypeli.Vector)">
            <summary>
            Palauttaa ruutuolion, joka on annetussa paikassa.
            Jos paikassa ei ole mitään oliota, palautetaan null.
            Jos olioita on useampia, palautetaan päällimmäinen.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <returns>Mahdollinen ruutuolio</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Double)">
            <summary>
            Palauttaa listan peliolioista, jotka ovat annetussa paikassa tietyllä säteellä.
            Jos paikassa ei ole mitään pelioliota, palautetaan tyhjä lista.
            Lista on järjestetty päällimmäisestä alimmaiseen.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <param name="radius">Säde jolla etsitään</param>
            <returns>Lista olioista</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Double)">
            <summary>
            Palauttaa peliolion, joka on annetussa paikassa tietyllä säteellä.
            Jos paikassa ei ole mitään pelioliota, palautetaan null.
            Jos olioita on useampia, palautetaan ensin lisätty.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <param name="radius">Säde jolla etsitään</param>
            <returns>Mahdollinen olio</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object)">
            <summary>
            Palauttaa listan peliolioista, jotka ovat annetussa paikassa tietyllä säteellä.
            Jos paikassa ei ole mitään pelioliota, palautetaan tyhjä lista.
            Lista on järjestetty päällimmäisestä alimmaiseen.
            Vain annetulla tagilla varustetut oliot huomioidaan.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <param name="tag">Etsittävän olion tagi.</param>
            <returns>Lista olioista</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object)">
            <summary>
            Palauttaa peliolion, joka on annetussa paikassa.
            Vain annetulla tagilla varustetut oliot huomioidaan.
            Jos paikassa ei ole mitään pelioliota, palautetaan null.
            Jos olioita on useampia, palautetaan ensin lisätty.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <param name="tag">Etsittävän olion tagi.</param>
            <returns>Mahdollinen olio</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object,System.Double)">
            <summary>
            Palauttaa listan peliolioista, jotka ovat annetussa paikassa tietyllä säteellä.
            Jos paikassa ei ole mitään pelioliota, palautetaan tyhjä lista.
            Lista on järjestetty päällimmäisestä alimmaiseen.
            Vain annetulla tagilla varustetut oliot huomioidaan.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <param name="tag">Etsittävän olion tagi.</param>
            <param name="radius">Säde jolla etsitään</param>
            <returns>Lista olioista</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object,System.Double)">
            <summary>
            Palauttaa peliolion, joka on annetussa paikassa tietyllä säteellä.
            Vain annetulla tagilla varustetut oliot huomioidaan.
            Jos paikassa ei ole mitään pelioliota, palautetaan null.
            Jos olioita on useampia, palautetaan ensin lisätty.
            </summary>
            <param name="position">Paikkakoordinaatit</param>
            <param name="tag">Etsittävän olion tagi.</param>
            <param name="radius">Säde jolla etsitään</param>
            <returns>Mahdollinen olio</returns>
        </member>
        <member name="M:Jypeli.Game.GetObjectsBetween(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Palauttaa pelioliot kahden pisteen välillä.
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Game.LoadAnimation(System.String)">
            <summary>
            Lataa animaation contentista.
            </summary>
            <param name="name">Animaation nimi (ei tarkennetta)</param>
            <returns>Animation-olio</returns>
        </member>
        <member name="M:Jypeli.Game.LoadImage(System.String)">
            <summary>
            Lataa kuvan contentista.
            </summary>
            <param name="name">Kuvan nimi (ei tarkennetta)</param>
            <returns>Image-olio</returns>
        </member>
        <member name="M:Jypeli.Game.LoadImages(System.String[])">
            <summary>
            Lataa taulukon kuvia contentista.
            </summary>
            <param name="name">Kuvien nimet ilman tarkennetta pilkuin eroiteltuna</param>
            <returns>Taulukko Image-olioita</returns>
        </member>
        <member name="M:Jypeli.Game.LoadImages(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Lataa taulukon kuvia contentista.
            </summary>
            <param name="baseName">Ennen numeroa tuleva osa nimestä.</param>
            <param name="startIndex">Ensimmäisen kuvan numero.</param>
            <param name="endIndex">Viimeisen kuvan numero.</param>
            <param name="zeroPad">Onko numeron edessä täytenollia.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Game.PlaySound(System.String)">
            <summary>
            Soittaa ääniefektin.
            </summary>
            <param name="name">Äänen nimi (ei tarkennetta)</param>
        </member>
        <member name="M:Jypeli.Game.LoadSoundEffect(System.String)">
            <summary>
            Lataa ääniefektin contentista.
            </summary>
            <param name="name">Äänen nimi (ei tarkennetta)</param>
            <returns>SoundEffect-olio</returns>
        </member>
        <member name="M:Jypeli.Game.LoadSoundEffects(System.String[])">
            <summary>
            Lataa taulukon ääniefektejä contentista.
            </summary>
            <param name="names">Äänien nimet ilman tarkennetta pilkuin eroiteltuna</param>
            <returns>Taulukko SoundEffect-olioita</returns>
        </member>
        <member name="M:Jypeli.Game.ClearTimers">
            <summary>
            Poistaa kaikki ajastimet.
            </summary>
        </member>
        <member name="M:Jypeli.Game.ClearAll">
            <summary>
            Nollaa kaiken.
            </summary>
        </member>
        <member name="M:Jypeli.Game.ResetLayers">
            <summary>
            Nollaa oliokerrokset. Huom. tuhoaa kaikki pelioliot!
            </summary>
            <param name="l"></param>
        </member>
        <member name="M:Jypeli.Game.RemoveAllLayers">
            <summary>
            Poistaa kaikki oliokerrokset. Huom. tuhoaa kaikki pelioliot!
            </summary>
            <param name="l"></param>
        </member>
        <member name="M:Jypeli.Game.ClearControls">
            <summary>
            Palauttaa kontrollit alkutilaansa.
            </summary>
        </member>
        <member name="M:Jypeli.Game.ClearGameObjects">
            <summary>
            Tuhoaa ja poistaa pelistä kaikki pelioliot (ml. fysiikkaoliot).
            </summary>
        </member>
        <member name="M:Jypeli.Game.PausedUpdate(Jypeli.Time)">
            <summary>
            Ajetaan Updaten sijaan kun peli on pysähdyksissä.
            </summary>
        </member>
        <member name="M:Jypeli.Game.Update(Jypeli.Time)">
            <summary>
            Ajetaan kun pelin tilannetta päivitetään. Päivittämisen voi toteuttaa perityssä luokassa
            toteuttamalla tämän metodin. Perityn luokan metodissa tulee kutsua kantaluokan metodia.
            </summary>
        </member>
        <member name="M:Jypeli.Game.Initialize">
            <summary>
            This gets called after the GraphicsDevice has been created. So, this is
            the place to initialize the resources needed in the game. Except the graphics content,
            which should be called int LoadContent(), according to the XNA docs.
            </summary>
        </member>
        <member name="M:Jypeli.Game.LoadContent">
            <summary>
            XNA calls this when graphics resources need to be loaded.
            Note that this can be called multiple times (whenever the graphics device is reset).
            </summary>
        </member>
        <member name="M:Jypeli.Game.CallBegin">
            <summary>
            Aloittaa pelin kutsumalla Begin-metodia.
            Tärkeää: kutsu tätä, älä Beginiä suoraan, sillä muuten peli ei päivity!
            </summary>
        </member>
        <member name="M:Jypeli.Game.Begin">
            <summary>
            Tässä alustetaan peli.
            </summary>
        </member>
        <member name="M:Jypeli.Game.Continue">
            <summary>
            Tässä alustetaan peli tombstoning-tilasta.
            Jos metodia ei ole määritelty, kutsutaan Begin.
            </summary>
        </member>
        <member name="M:Jypeli.Game.SetWindowSize(System.Int32,System.Int32)">
            <summary>
            Asettaa ikkunan koon.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
        </member>
        <member name="M:Jypeli.Game.SetWindowSize(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Asettaa ikkunan koon ja alustaa pelin käyttämään joko ikkunaa tai koko ruutua.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
            <param name="fullscreen">Koko ruutu jos <c>true</c>, muuten ikkuna.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Game.Pause">
            <summary>
            Pysäyttää pelin tai jatkaa sitä, jos se on jo pysäytetty.
            </summary>
        </member>
        <member name="M:Jypeli.Game.Exit">
            <summary>
            Lopettaa pelin.
            </summary>
        </member>
        <member name="M:Jypeli.Game.ConfirmExit">
            <summary>
            Kysyy haluaako lopettaa pelin ja lopettaa jos vastataan kyllä.
            </summary>
        </member>
        <member name="M:Jypeli.Game.SaveGame(System.String)">
            <summary>
            Tallentaa pelin.
            </summary>
            <param name="tagName">Pelitilanteen nimi.</param>
        </member>
        <member name="M:Jypeli.Game.LoadGame(System.String)">
            <summary>
            Lataa pelin.
            </summary>
            <param name="tagName">Pelitilanteen nimi.</param>
        </member>
        <member name="M:Jypeli.Game.ShowControlHelp">
            <summary>
            Näyttää kontrollien ohjetekstit.
            </summary>
        </member>
        <member name="M:Jypeli.Game.BindControlHelp(System.Object[])">
            <summary>
            Sitoo kontrollien ohjeet viestinäyttöön ja haluttuihin nappeihin.
            Tämän jälkeen nappeja painamalla pelaaja saa automaattisesti ohjeen esille.
            </summary>
            <param name="keysOrButtons">Napit, joita painamalla ohjeen saa näkyviin.</param>
        </member>
        <member name="M:Jypeli.Game.LoadFont(System.String)">
            <summary>
            Lataa fontin. Fontin tulee olla lisätty content-hakemistoon.
            </summary>
            <param name="name">Fontin tiedoston nimi, ilman päätettä.</param>
        </member>
        <member name="P:Jypeli.Game.IsPaused">
            <summary>
            Onko peli pysähdyksissä.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Layers">
            <summary>
            Kerrokset, joilla pelioliot viihtyvät.
            </summary>
        </member>
        <member name="P:Jypeli.Game.StaticLayers">
            <summary>
            Kerrokset, joilla olevat pelioliot eivät liiku kameran mukana.
            </summary>
        </member>
        <member name="P:Jypeli.Game.DynamicLayers">
            <summary>
            Kerrokset, joilla olevat pelioliot liikkuvat kameran mukana.
            </summary>
        </member>
        <member name="P:Jypeli.Game.MinLayer">
            <summary>
            Pienin mahdollinen kerros.
            </summary>
        </member>
        <member name="P:Jypeli.Game.MaxLayer">
            <summary>
            Suurin mahdollinen kerros.
            </summary>
        </member>
        <member name="P:Jypeli.Game.LayerCount">
            <summary>
            Kerrosten määrä.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Name">
            <summary>
            Pelin nimi.
            </summary>
        </member>
        <member name="E:Jypeli.Game.InstanceInitialized">
            <summary>
            Tapahtuu kun Game.Instance on alustettu.
            </summary>
        </member>
        <member name="E:Jypeli.Game.Exiting">
            <summary>
            Tapahtuu kun peli lopetetaan.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Camera">
            <summary>
            Kamera, joka näyttää ruudulla näkyvän osan kentästä.
            Kameraa voidaan siirtää, zoomata tai asettaa seuraamaan tiettyä oliota.
            </summary>
        </member>
        <member name="P:Jypeli.Game.DrawPerimeter">
            <summary>
            Kentän reunat näkyvissä tai pois näkyvistä.
            Huomaa, että tämä ominaisuus ei vaikuta reunojen törmäyskäsittelyyn.
            </summary>
        </member>
        <member name="P:Jypeli.Game.PerimeterColor">
            <summary>
            Väri, jolla kentän reunat piirretään.
            </summary>
        </member>
        <member name="P:Jypeli.Game.SmoothTextures">
            <summary>
            Tekstuurien (kuvien) reunanpehmennys skaalattaessa (oletus päällä).
            </summary>
        </member>
        <member name="P:Jypeli.Game.ResourceContent">
            <summary>
            Kirjaston mukana tuleva sisältö.
            Voidaan käyttää esimerkiksi tekstuurien lataamiseen.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Screen">
            <summary>
            Näytön dimensiot, eli koko ja reunat.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Controls">
            <summary>
            Pelin kontrollit.
            </summary>
        </member>
        <member name="P:Jypeli.Game.ControlContext">
            <summary>
            Pelin pääohjainkonteksti.
            </summary>
        </member>
        <member name="P:Jypeli.Game.MessageDisplay">
            <summary>
            Viestinäyttö, johon voi laittaa viestejä.
            </summary>
            <value>Viestinäyttö.</value>
        </member>
        <member name="P:Jypeli.Game.DataStorage">
            <summary>
            Tietovarasto, johon voi tallentaa tiedostoja pidempiaikaisesti.
            Sopii esimerkiksi pelitilanteen lataamiseen ja tallentamiseen.
            </summary>
        </member>
        <member name="P:Jypeli.Game.AcceptsFocus">
            <summary>
            Onko olio valittavissa.
            Vain valittu (fokusoitu) olio voii kuunnella näppäimistöä ja muita ohjainlaitteita.
            Peliolio on aina valittavissa.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Keyboard">
            <summary>
            Näppäimistö.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Mouse">
            <summary>
            Hiiri.
            </summary>
        </member>
        <member name="P:Jypeli.Game.TouchPanel">
            <summary>
            Kosketusnäyttö. Vain kännykässä.
            </summary>
        </member>
        <member name="P:Jypeli.Game.ControllerOne">
            <summary>
            Peliohjain yksi.
            </summary>
        </member>
        <member name="P:Jypeli.Game.ControllerTwo">
            <summary>
            Peliohjain kaksi.
            </summary>
        </member>
        <member name="P:Jypeli.Game.ControllerThree">
            <summary>
            Peliohjain kolme.
            </summary>
        </member>
        <member name="P:Jypeli.Game.ControllerFour">
            <summary>
            Peliohjain neljä.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Accelerometer">
            <summary>
            Kiihtyvyysanturi. Vain kännykässä.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Phone">
            <summary>
            Phone-olio esim. puhelimen tärisyttämiseen.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Level">
            <summary>
            Aktiivinen kenttä.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Time">
            <summary>
            Peliaika. Sisältää tiedon siitä, kuinka kauan peliä on pelattu (Time.SinceStartOfGame)
            ja kuinka kauan on viimeisestä pelin päivityksestä (Time.SinceLastUpdate).
            Tätä päivitetään noin 30 kertaa sekunnissa kun peli ei ole pause-tilassa.
            </summary>
        </member>
        <member name="P:Jypeli.Game.RealTime">
            <summary>
            Todellinen peliaika. Sisältää tiedon siitä, kuinka kauan peliä on pelattu (Time.SinceStartOfGame)
            ja kuinka kauan on viimeisestä pelin päivityksestä (Time.SinceLastUpdate).
            Tätä päivitetään noin 30 kertaa sekunnissa, myös pause-tilassa.
            </summary>
        </member>
        <member name="P:Jypeli.Game.Wind">
            <summary>
            Tuuli. Vaikuttaa vain efekteihin
            </summary>
        </member>
        <member name="P:Jypeli.Game.Title">
            <summary>
            Teksti, joka näkyy pelin ikkunassa (jos peli ei ole koko ruudun tilassa).
            </summary>
        </member>
        <member name="P:Jypeli.Game.ObjectCount">
            <summary>
            Kuinka monta pelioliota pelissä on (ei laske widgettejä).
            </summary>
        </member>
        <member name="P:Jypeli.Game.IsFullScreen">
            <summary>
            Onko peli kokoruututilassa.
            </summary>
        </member>
        <member name="P:Jypeli.Game.MediaPlayer">
            <summary>
            Mediasoitin.
            </summary>
        </member>
        <member name="T:Jypeli.PhysicsGame">
            <summary>
            Peli, jossa on fysiikan laskenta mukana. Peliin lisätyt <code>PhysicsObject</code>-oliot
            käyttäytyvät fysiikan lakien mukaan.
            </summary>
        </member>
        <member name="T:Jypeli.PhysicsGameBase">
            <summary>
            Kantaluokka fysiikkapeleille.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.#ctor(System.Int32)">
            <summary>
            Alustaa uuden fysiikkapelin.
            </summary>
            <param name="device">Mikä monitori käytössä, 1=ensimmäinen</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.StopAll">
            <summary>
            Pysäyttää kaiken liikkeen.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.ClearAll">
            <summary>
            Nollaa kaiken (kontrollit, näyttöobjektit, ajastimet ja fysiikkamoottorin).
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.ClearPhysics">
            <summary>
            Nollaa fysiikkamoottorin.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.Add(Physics2DDotNet.Joints.Joint)">
            <summary>
            Lisää liitoksen peliin.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.Remove(Physics2DDotNet.Joints.Joint)">
            <summary>
            Poistaa liitoksen pelistä.
            </summary>
            <param name="j"></param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.Remove(Jypeli.AxleJoint)">
            <summary>
            Poistaa liitoksen pelistä.
            </summary>
            <param name="j"></param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.Add(Jypeli.AxleJoint)">
            <summary>
            Lisää liitoksen peliin.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.Update(Jypeli.Time)">
            <summary>
            Ajetaan kun pelin tilannetta päivitetään. Päivittämisen voi toteuttaa perityssä luokassa
            toteuttamalla tämän metodin. Perityn luokan metodissa tulee kutsua kantaluokan metodia.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun olio <code>obj</code> törmää johonkin toiseen olioon.
            </summary>
            <typeparam name="T">Kohdeolion tyyppi.</typeparam>
            <param name="obj">Törmäävä olio</param>
            <param name="handler">Törmäyksen käsittelevä aliohjelma.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddProtectedCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun olio <code>obj</code> törmää johonkin toiseen olioon.
            Jypelin sisäiseen käyttöön!
            </summary>
            <typeparam name="T">Kohdeolion tyyppi.</typeparam>
            <param name="obj">Törmäävä olio</param>
            <param name="handler">Törmäyksen käsittelevä aliohjelma.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun yleinen fysiikkaolio <code>obj</code>
            törmää johonkin toiseen yleiseen fysiikkaolioon.
            </summary>
            <param name="obj">Törmäävä olio</param>
            <param name="handler">Törmäyksen käsittelevä aliohjelma.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun fysiikkaolio <code>obj</code> törmää johonkin toiseen fysiikkaolioon.
            </summary>
            <param name="obj">Törmäävä olio</param>
            <param name="handler">Törmäyksen käsittelevä aliohjelma.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsStructure})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun fysiikkaolio <code>obj</code> törmää johonkin fysiikkarakenteeseen.
            </summary>
            <param name="obj">Törmäävä olio</param>
            <param name="handler">Törmäyksen käsittelevä aliohjelma.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsObject})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun fysiikkarakenne <code>o</code> törmää johonkin fysiikkaolioon.
            </summary>
            <param name="obj">Törmäävä fysiikkarakenne</param>
            <param name="handler">Törmäyksen käsittelevä aliohjelma.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsStructure})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun fysiikkarakenne <code>o</code> törmää toiseen fysiikkarakenteeseen.
            </summary>
            <param name="obj">Törmäävä fysiikkarakenne</param>
            <param name="handler">Törmäyksen käsittelevä aliohjelma.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,``1,Jypeli.CollisionHandler{Jypeli.PhysicsObject,``1})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun
            olio <code>obj</code> törmää tiettyyn toiseen olioon <code>target</code>.
            </summary>
            <param name="obj">Törmäävä olio.</param>
            <param name="target">Olio johon törmätään.</param>
            <param name="handler">Metodi, joka käsittelee törmäyksen (ei parametreja).</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun 
            olio <code>obj</code> törmää toiseen olioon, jolla on tietty tagi <code>tag</code>.
            </summary>
            <param name="obj">Törmäävä olio.</param>
            <param name="tag">Törmättävän olion tagi.</param>
            <param name="handler">Metodi, joka käsittelee törmäyksen (ei parametreja).</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun 
            yleinen fysiikkaolio <code>obj</code> törmää toiseen yleiseen fysiikkaolioon, jolla on tietty tagi <code>tag</code>.
            </summary>
            <param name="obj">Törmäävä olio.</param>
            <param name="tag">Törmättävän olion tagi.</param>
            <param name="handler">Metodi, joka käsittelee törmäyksen (ei parametreja).</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun 
            fysiikkaolio <code>obj</code> törmää toiseen fysiikkaolioon, jolla on tietty tagi <code>tag</code>.
            </summary>
            <param name="obj">Törmäävä olio.</param>
            <param name="tag">Törmättävän olion tagi.</param>
            <param name="handler">Metodi, joka käsittelee törmäyksen (ei parametreja).</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsStructure})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun 
            fysiikkaolio <code>obj</code> törmää fysiikkarakenteeseen, jolla on tietty tagi <code>tag</code>.
            </summary>
            <param name="obj">Törmäävä olio.</param>
            <param name="tag">Törmättävän olion tagi.</param>
            <param name="handler">Metodi, joka käsittelee törmäyksen (ei parametreja).</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsObject})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun 
            fysiikkarakenne <code>obj</code> törmää fysiikkaolioon, jolla on tietty tagi <code>tag</code>.
            </summary>
            <param name="obj">Törmäävä rakenne.</param>
            <param name="tag">Törmättävän olion tagi.</param>
            <param name="handler">Metodi, joka käsittelee törmäyksen (ei parametreja).</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsStructure})">
            <summary>
            Määrää, mihin aliohjelmaan siirrytään kun 
            fysiikkarakenne <code>obj</code> törmää toiseen fysiikarakenteeseen, jolla on tietty tagi <code>tag</code>.
            </summary>
            <param name="obj">Törmäävä rakenne.</param>
            <param name="tag">Törmättävän rakenteen tagi.</param>
            <param name="handler">Metodi, joka käsittelee törmäyksen (ei parametreja).</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.RemoveCollisionHandlers(Jypeli.PhysicsObject,Jypeli.PhysicsObject,System.Object,System.Delegate)">
            <summary>
            Poistaa kaikki ehdot täyttävät törmäyksenkäsittelijät.
            </summary>
            <param name="obj">Törmäävä olio. null jos ei väliä.</param>
            <param name="target">Törmäyksen kohde. null jos ei väliä.</param>
            <param name="tag">Törmäyksen kohteen tagi. null jos ei väliä.</param>
            <param name="handler">Törmäyksenkäsittelijä. null jos ei väliä.</param>
        </member>
        <member name="M:Jypeli.PhysicsGameBase.RemoveProtectedCollisionHandlers(Jypeli.PhysicsObject,Jypeli.PhysicsObject,System.Object,System.Delegate)">
            <summary>
            Poistaa kaikki ehdot täyttävät törmäyksenkäsittelijät.
            Jypelin sisäiseen käyttöön!
            </summary>
            <param name="obj">Törmäävä olio. null jos ei väliä.</param>
            <param name="target">Törmäyksen kohde. null jos ei väliä.</param>
            <param name="tag">Törmäyksen kohteen tagi. null jos ei väliä.</param>
            <param name="handler">Törmäyksenkäsittelijä. null jos ei väliä.</param>
        </member>
        <member name="P:Jypeli.PhysicsGameBase.PhysicsEnabled">
            <summary>
            Onko fysiikan laskenta käytössä vai ei.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGame.#ctor">
            <summary>
            Alustaa uuden fysiikkapelin.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsGame.#ctor(System.Int32)">
            <summary>
            Alustaa uuden fysiikkapelin.
            </summary>
            <param name="device">Mikä monitori käytössä, 1=ensimmäinen</param>
        </member>
        <member name="P:Jypeli.PhysicsGame.Gravity">
            <summary>
            Painovoima. Voimavektori, joka vaikuttaa kaikkiin ei-staattisiin kappaleisiin.
            </summary>
        </member>
        <member name="T:Jypeli.TopDownPhysicsGame">
            <summary>
            Peli, johon voi lisätä pintoja, joiden päällä oliot voivat liukua. Peliin lisätyt <code>PhysicsObject</code>-oliot
            käyttäytyvät fysiikan lakien mukaan.
            </summary>
        </member>
        <member name="M:Jypeli.TopDownPhysicsGame.#ctor">
            <summary>
            Alustaa uuden fysiikkapelin.
            </summary>
        </member>
        <member name="M:Jypeli.TopDownPhysicsGame.#ctor(System.Int32)">
            <summary>
            Alustaa uuden fysiikkapelin.
            </summary>
            <param name="device">Mikä monitori käytössä, 1=ensimmäinen</param>
        </member>
        <member name="M:Jypeli.TopDownPhysicsGame.AddSurface(Jypeli.PhysicsObject)">
            <summary>
            Lisää peliin pinnan, jonka päällä muut oliot voivat liukua.
            </summary>
            <remarks>
            Pinnalle asetetaan automaattisesti <c>IgnoresCollisionResponse</c> arvoon <c>true</c>.
            </remarks>
            <param name="surface"></param>
        </member>
        <member name="M:Jypeli.TopDownPhysicsGame.ClearAll">
            <summary>
            Nollaa kaiken (kontrollit, näyttöobjektit, ajastimet ja fysiikkamoottorin).
            </summary>
        </member>
        <member name="P:Jypeli.TopDownPhysicsGame.Surfaces">
            <summary>
            The surfaces on which other objects may slide.
            </summary>
            <remarks>
            The purpose of having surfaces in a separate list is to
            have less checks between objects and thus keep the performance
            good. Although the worst-case scenario is still O(n^2), this
            happens only when there are a lot of surfaces. One way to
            optimize that might be to store the surfaces in a spatial hash.
            
            It might make sense not to add the surfaces to the physics engine at all.
            Or to have only IShape objects as surfaces instead of physics objects.
            Although someone might of course want to listen collisions for surfaces.
            </remarks>
        </member>
        <member name="P:Jypeli.TopDownPhysicsGame.Gravity">
            <summary>
            Painovoima. Mitä suurempi painovoima, sitä suurempi liikekitka
            kaikille olioille.
            </summary>
        </member>
        <member name="P:Jypeli.TopDownPhysicsGame.KineticFriction">
            <summary>
            Liikekitka pinnalla. Tätä arvoa käytetään, kun liikkuva kappale
            ei ole minkään lisätyn pinnan päällä. Arvot tyypillisesti välillä
            <c>0.0</c>-<c>1.0</c>.
            </summary>
        </member>
        <member name="T:Jypeli.DrawOrder">
            <summary>
            Piirtojärjestys.
            </summary>
        </member>
        <member name="F:Jypeli.DrawOrder.Irrelevant">
            <summary>
            Piirtojärjestyksellä ei ole väliä. Oliot piirretään mahdollisimman tehokkaassa järjestyksessä.
            Tämä on oletus.
            </summary>
        </member>
        <member name="F:Jypeli.DrawOrder.FirstToLast">
            <summary>
            Oliot piirretään siinä järjestyksessä missä ne on lisätty peliin.
            </summary>
        </member>
        <member name="T:Jypeli.Layer">
            <summary>
            Kerros. Vastaa olioiden piirtämisestä.
            </summary>
        </member>
        <member name="F:Jypeli.Layer.squareVertices">
            <summary>
            Vertices for drawing a filled square.
            </summary>
        </member>
        <member name="F:Jypeli.Layer.squareIndices">
            <summary>
            Indices for the vertex array of the square.
            </summary>
        </member>
        <member name="F:Jypeli.Layer.triangleVertices">
            <summary>
            Vertices for drawing a filled triangle.
            </summary>
        </member>
        <member name="F:Jypeli.Layer.triangleIndices">
            <summary>
            Indices for the vertex array of the triangle.
            </summary>
        </member>
        <member name="M:Jypeli.Layer.CreateStaticLayer">
            <summary>
            Luo staattisen kerroksen (ei liiku kameran mukana)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Jypeli.Layer.DrawOrder">
            <summary>
            Olioiden piirtojärjestys.
            </summary>
        </member>
        <member name="P:Jypeli.Layer.RelativeTransition">
            <summary>
            Kuinka paljon tämän kerroksen olioiden paikka muuttuu kameran siirtyessä suhteessa muihin kerroksiin.
            Esimerkiksi arvo 0.5 aiheuttaa siirtymän joka on puolet normaalista.
            </summary>
        </member>
        <member name="P:Jypeli.Layer.IgnoresZoom">
            <summary>
            Jättää kameran zoomin huomiotta jos asetettu.
            </summary>
        </member>
        <member name="P:Jypeli.Layer.Grid">
            <summary>
            Ruudukko. Ruudukko piirretään asettamalla tähän <c>Grid</c>-olio.
            Jos <c>null</c>, ruudukkoa ei piirretä.
            </summary>
        </member>
        <member name="T:Jypeli.ListHelpers">
            <summary>
            Apufunktioita listojen ja muiden tietorakenteiden käyttöön.
            </summary>
        </member>
        <member name="M:Jypeli.ListHelpers.Min(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Laskee minimin.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.ListHelpers.Max(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Laskee maksimin.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.ListHelpers.Average(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Laskee keskiarvon.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.ListHelpers.Average(System.Collections.Generic.IEnumerable{Jypeli.Vector})">
            <summary>
            Laskee keskiarvon komponenteittain.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.ListHelpers.ConvertAll``2(System.Collections.Generic.IEnumerable{``0},System.Converter{``0,``1})">
            <summary>
            Muuntaa kokoelman tietyn tyyppisiä olioita kokoelmaksi toisen tyyppisiä olioita.
            </summary>
            <typeparam name="TInput">Lähtötyyppi</typeparam>
            <typeparam name="TOutput">Kohdetyyppi</typeparam>
            <param name="items">Muunnettava kokoelma</param>
            <param name="converter">Muunnosmetodi yhdelle oliolle</param>
            <returns>Muunnettu kokoelma</returns>
        </member>
        <member name="T:Jypeli.ObjectHelper">
            <summary>
            Apuluokka kaikille olioille
            </summary>
        </member>
        <member name="M:Jypeli.ObjectHelper.GetHashCode(System.Object[])">
            <summary>
            Palauttaa hajautuskoodin usean olion kokoelmalle.
            </summary>
            <param name="objects"></param>
            <returns></returns>
        </member>
        <member name="T:Jypeli.ReturnHelper">
            <summary>
            Apuluokka palautusarvoille.
            </summary>
        </member>
        <member name="M:Jypeli.ReturnHelper.ReturnFirstNotNull``1(``0[])">
            <summary>
            Palauttaa listasta ensimmäisen olion, joka ei ole null.
            </summary>
            <typeparam name="T">Olioiden tyyppi</typeparam>
            <param name="list">Lista olioista</param>
            <returns>Ensimmäinen ei-null listasta, tai null jos mikään ei täsmää</returns>
        </member>
        <member name="T:Jypeli.StreamHelpers">
            <summary>
            Apufunktioita virtojen käyttöön.
            </summary>
        </member>
        <member name="M:Jypeli.StreamHelpers.CopyStreamTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Kopioi virran sisällön toiseen virtaan.
            Sama kuin Stream.CopyTo (C# ver 4), mutta toimii myös vanhemmilla versioilla.
            </summary>
            <param name="input">Mistä kopioidaan</param>
            <param name="output">Mihin kopioidaan</param>
        </member>
        <member name="M:Jypeli.StringHelpers.StringEquals(System.Object,System.Object)">
            <summary>
            Vertaa kahta oliota, jotka ovat joko merkkijonoja tai StringBuildereita, merkki kerrallaan.
            </summary>
            <param name="o1"></param>
            <param name="o2"></param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.StringHelpers.RemoveLast(System.Text.StringBuilder,System.Int32)">
            <summary>
            Poistaa merkkijonon lopusta tietyn määrän merkkejä.
            Jos merkkijono on lyhyempi kuin poistettava määrä, poistetaan mitä pystytään.
            </summary>
            <param name="builder">StringBuilder-olio</param>
            <param name="chars">Poistettavien merkkien määrä</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.StringHelpers.Substring(System.Text.StringBuilder,System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Kirjoittaa osamerkkijonon toiseen StringBuilderiin.
            </summary>
            <param name="src">StringBuilder josta luetaan</param>
            <param name="dest">StringBuilder johon kirjoitetaan</param>
            <param name="start">Ensimmäinen merkki osajonosta</param>
            <param name="length">Osajonon pituus</param>
        </member>
        <member name="M:Jypeli.StringHelpers.Substring(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Palauttaa osamerkkijonon toisena StringBuilderina.
            </summary>
            <param name="builder">StringBuilder-instanssi</param>
            <param name="start">Ensimmäinen merkki osajonosta</param>
            <param name="length">Osajonon pituus</param>
            <returns>Osamerkkijono-StringBuilder</returns>
        </member>
        <member name="M:Jypeli.StringHelpers.PutTo(System.Text.StringBuilder,System.Text.StringBuilder)">
            <summary>
            Poistaa koko StringBuilderin sisällön ja kirjoittaa sen toiseen StringBuilderiin.
            </summary>
            <param name="src">StringBuilder josta otetaan</param>
            <param name="dest">StringBuilder johon kirjoitetaan</param>
        </member>
        <member name="M:Jypeli.StringHelpers.PutTo(System.Text.StringBuilder,System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Poistaa osamerkkijonon ja kirjoittaa sen toiseen StringBuilderiin.
            </summary>
            <param name="src">StringBuilder josta otetaan</param>
            <param name="dest">StringBuilder johon kirjoitetaan</param>
            <param name="start">Ensimmäinen merkki osajonosta</param>
            <param name="length">Osajonon pituus</param>
        </member>
        <member name="M:Jypeli.StringHelpers.PutTo(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Poistaa osamerkkijonon ja palauttaa sen toisena StringBuilderina..
            </summary>
            <param name="builder">StringBuilder-instanssi</param>
            <param name="start">Ensimmäinen merkki osajonosta</param>
            <param name="length">Osajonon pituus</param>
            <returns>Osamerkkijono-StringBuilder</returns>
        </member>
        <member name="M:Jypeli.StringHelpers.Repeat(System.String,System.Int32)">
            <summary>
            Toistaa merkkijonon annetun määrän verran.
            </summary>
            <param name="s">Toistettava merkkijono</param>
            <param name="times">Kuinka monta kertaa toistetaan</param>
            <returns>Toistettu merkkijono</returns>
        </member>
        <member name="T:Jypeli.ColorTileMap">
            <summary>
            Ruutukartta, jonka avulla olioita voidaan helposti asettaa tasavälein ruudukkoon.
            Ruutukartta koostuu kirjoitusmerkeistä (<c>char</c>), joihin voi liittää
            aliohjelman, joka luo merkkiä vastaavan olion.
            </summary>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.SetTileMethod(`0,Jypeli.AbstractTileMap{`0}.TileMethod)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <param name="tileSymbol">Merkki</param>
            <param name="f">Aliohjelma muotoa void LuoOlio(Vector paikka, double leveys, double korkeus)</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.SetTileMethod``1(`0,Jypeli.AbstractTileMap{`0}.TileMethod{``0},``0)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <typeparam name="T1">Parametrin tyyppi</typeparam>
            <param name="tileSymbol">Merkki</param>
            <param name="f">Aliohjelma muotoa void LuoOlio(Vector paikka, double leveys, double korkeus)</param>
            <param name="p1">Parametri</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.SetTileMethod``2(`0,Jypeli.AbstractTileMap{`0}.TileMethod{``0,``1},``0,``1)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <typeparam name="T1">Ensimmäisen parametrin tyyppi</typeparam>
            <typeparam name="T2">Toisen parametrin tyyppi</typeparam>
            <param name="tileSymbol">Merkki</param>
            <param name="f">Aliohjelma muotoa void LuoOlio(Vector paikka, double leveys, double korkeus)</param>
            <param name="p1">Ensimmäinen parametri</param>
            <param name="p2">Toinen parametri</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.SetTileMethod``3(`0,Jypeli.AbstractTileMap{`0}.TileMethod{``0,``1,``2},``0,``1,``2)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <typeparam name="T1">Ensimmäisen parametrin tyyppi</typeparam>
            <typeparam name="T2">Toisen parametrin tyyppi</typeparam>
            <param name="tileSymbol">Merkki</param>
            <param name="f">Aliohjelma muotoa void LuoOlio(Vector paikka, double leveys, double korkeus)</param>
            <param name="p1">Ensimmäinen parametri</param>
            <param name="p2">Toinen parametri</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.SetRouteMethod(Jypeli.AbstractTileMap{`0}.RouteMethod,`0[])">
            <summary>
            Kokoaa reitin useammasta ruutukentän symbolista.
            
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <param name="f">Aliohjelma, muotoa void LuoReittiolio(List&lt;Vector&gt; reitti, double leveys, double korkeus)</param>
            <param name="tileSymbols">Ruutukentän symbolit tiedostossa joista reitti muodostuu</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.Execute">
            <summary>
            Käy kentän kaikki merkit läpi ja kutsuu <c>SetTileMethod</c>-metodilla annettuja
            aliohjelmia kunkin merkin kohdalla.
            </summary>
            <remarks>
            Aliohjelmassa voi esimerkiksi luoda olion ruudun kohdalle.
            </remarks>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.Execute(System.Double,System.Double)">
            <summary>
            Käy kentän kaikki merkit läpi ja kutsuu <c>SetTileMethod</c>-metodilla annettuja
            aliohjelmia kunkin merkin kohdalla.
            </summary>
            <remarks>
            Aliohjelmassa voi esimerkiksi luoda olion ruudun kohdalle.
            </remarks>
            <param name="tileWidth">Yhden ruudun leveys.</param>
            <param name="tileHeight">Yhden ruudun korkeus.</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.Optimize(`0[])">
            <summary>
            Optimoi annetut ruudut niin, että useammat vierekkäiset oliot yhdistetään
            isommiksi olioiksi. Älä käytä esim. kerättäville esineille.
            </summary>
            <param name="symbols">Optimoitavat symbolit</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.Optimize(`0)">
            <summary>
            Optimoi annetut ruudut niin, että useammat vierekkäiset oliot yhdistetään
            isommiksi olioiksi. Älä käytä esim. kerättäville esineille.
            </summary>
            <param name="sym">Optimoitava symboli</param>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.GetLength(System.Int32)">
            <summary>
            Palauttaa annetun dimension pituuden (merkkeinä, ei pikseleinä).
            </summary>
            <param name="dimension">Dimensio. 0 antaa kentän korkeuden, 1 leveyden.</param>
            <returns>Annetun dimension koko</returns>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.GetTile(System.Int32,System.Int32)">
            <summary>
            Palauttaa ruudussa olevan symbolin.
            </summary>
            <param name="row">Rivi</param>
            <param name="col">Sarake</param>
            <returns>symbolin</returns>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.SetTile(System.Int32,System.Int32,`0)">
            <summary>
            Asettaa ruudussa olevan symbolin.
            </summary>
            <param name="row">Rivi</param>
            <param name="col">Sarake</param>
            <param name="c">Uusi merkki</param>
            <returns>symbolin</returns>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.ChangeSize(Jypeli.AbstractTileMap{`0}.TileMethod,System.Double,System.Double)">
            <summary>
            Muuttaa luontialiohjelman tekemän olion kokoa.
            </summary>
            <param name="m">Luontialiohjelma</param>
            <param name="newWidth">Uusi leveys oliolle</param>
            <param name="newHeight">Uusi korkeus oliolle</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.AbstractTileMap`1.ChangeSizeMultiplier(Jypeli.AbstractTileMap{`0}.TileMethod,System.Double,System.Double)">
            <summary>
            Muuttaa luontialiohjelman tekemän olion kokoa tietyllä kertoimilla.
            </summary>
            <param name="m">Luontialiohjelma</param>
            <param name="widthMultiplier">Kerroin alkuperäiselle leveydelle</param>
            <param name="heightMultiplier">Kerroin alkuperäiselle korkeudelle</param>
            <returns></returns>
        </member>
        <member name="P:Jypeli.AbstractTileMap`1.RowCount">
            <summary>
            Rivien määrä kentässä (pystysuoraan).
            </summary>
        </member>
        <member name="P:Jypeli.AbstractTileMap`1.ColumnCount">
            <summary>
            Sarakkeiden määrä kentässä (vaakasuoraan).
            </summary>
        </member>
        <member name="M:Jypeli.ColorTileMap.#ctor(Jypeli.Image)">
            <summary>
            Luo uuden ruutukartan.
            </summary>
            <param name="img">Kuva, jossa jokainen pikseli vastaa oliota.</param>
        </member>
        <member name="M:Jypeli.ColorTileMap.#ctor(System.String)">
            <summary>
            Luo uuden ruutukartan.
            </summary>
            <param name="assetName">Kuvatiedoston nimi.</param>
        </member>
        <member name="M:Jypeli.ColorTileMap.FromLevelAsset(System.String)">
            <summary>
            Lukee ruutukentän Content-projektin kuvatiedostosta.
            </summary>
            <param name="assetName">Tiedoston nimi</param>        
        </member>
        <member name="M:Jypeli.ColorTileMap.SetTileMethod(System.String,Jypeli.AbstractTileMap{Jypeli.Color}.TileMethod)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <param name="hexCode">Heksakoodi värille</param>
            <param name="method">Aliohjelma</param>
        </member>
        <member name="M:Jypeli.ColorTileMap.SetTileMethod``1(System.String,Jypeli.AbstractTileMap{Jypeli.Color}.TileMethod{``0},``0)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <param name="hexCode">Heksakoodi värille</param>
            <param name="method">Aliohjelma</param>
            <param name="p1">Parametri</param>
        </member>
        <member name="M:Jypeli.ColorTileMap.SetTileMethod``2(System.String,Jypeli.AbstractTileMap{Jypeli.Color}.TileMethod{``0,``1},``0,``1)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <param name="hexCode">Heksakoodi värille</param>
            <param name="method">Aliohjelma</param>
            <param name="p1">Parametri</param>
            <param name="p2">Parametri</param>
        </member>
        <member name="M:Jypeli.ColorTileMap.SetTileMethod``3(System.String,Jypeli.AbstractTileMap{Jypeli.Color}.TileMethod{``0,``1,``2},``0,``1,``2)">
            <summary>
            Määrittää, että tietyn ruutukentän symbolin (<c>tileSymbol</c>) kohdalla
            kutsutaan aliohjelmaa <c>f</c>. Huom! Käytä tämän aliohjelman kanssa metodia
            Execute.
            </summary>
            <param name="hexCode">Heksakoodi värille</param>
            <param name="method">Aliohjelma</param>
            <param name="p1">Parametri</param>
            <param name="p2">Parametri</param>
            <param name="p3">Parametri</param>
        </member>
        <member name="P:Jypeli.ColorTileMap.ColorTolerance">
            <summary>
            Väritoleranssi. Mitä pienempi toleranssi, sitä tarkemmin eri värit erotellaan toisistaan.
            Nollatoleranssilla värit on annettava tarkkoina rgb-koodeina, suuremmilla toleransseilla
            riittää "sinne päin".
            </summary>
        </member>
        <member name="T:Jypeli.Angle">
            <summary>
            Suuntakulma (rajoitettu -180 ja 180 asteen välille) asteina ja radiaaneina.
            Tietoja kulmasta: http://en.wikipedia.org/wiki/File:Degree-Radian_Conversion.svg
            </summary>
        </member>
        <member name="F:Jypeli.Angle.Zero">
            <summary>
            Nollakulma.
            </summary>
        </member>
        <member name="F:Jypeli.Angle.RightAngle">
            <summary>
            Suora kulma (90 astetta).
            </summary>
        </member>
        <member name="F:Jypeli.Angle.StraightAngle">
            <summary>
            Oikokulma (180 astetta).
            </summary>
        </member>
        <member name="F:Jypeli.Angle.FullAngle">
            <summary>
            Täysikulma (360 astetta).
            </summary>
        </member>
        <member name="M:Jypeli.Angle.op_Addition(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Laskee kaksi kulmaa yhteen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Kulmien summa.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_Subtraction(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Vähentää jälkimmäisen kulman ensimmäisestä.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Kulmien erotus.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_UnaryNegation(Jypeli.Angle)">
            <summary>
            Ottaa kulman vastakulman.
            </summary>
            <param name="a">Kulma.</param>
        </member>
        <member name="M:Jypeli.Angle.op_Multiply(System.Double,Jypeli.Angle)">
            <summary>
            Kertoo kulman reaaliluvulla.
            </summary>
            <param name="a">Reaaliluku.</param>
            <param name="b">Kulma.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_Multiply(Jypeli.Angle,System.Double)">
            <summary>
            Kertoo kulman reaaliluvulla.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Reaaliluku.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_Division(Jypeli.Angle,System.Double)">
            <summary>
            Jakaa kulman reaaliluvulla.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Reaaliluku.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_Equality(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Vertaa kahden kulman yhtäsuuruutta.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Yhtäsuuruus.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_Inequality(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Vertaa kahden kulman erisuuruutta.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns>Erisuuruus.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_LessThan(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Vertaa ensimmäisen kulman suuremmuutta toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos suurempi, <c>false</c> jos pienempi tai yhtäsuuri.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_LessThanOrEqual(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Vertaa ensimmäisen kulman suuremmuutta/yhtäsuuruutta toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos suurempi tai yhtäsuuri, <c>false</c> jos pienempi.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_GreaterThan(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Vertaa ensimmäisen kulman pienemmyyttä toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos pienempi, <c>false</c> jos suurempi tai yhtäsuuri.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_GreaterThanOrEqual(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Vertaa ensimmäisen kulman pienemmyyttä/yhtäsuuruutta toiseen.
            </summary>
            <param name="a">Kulma.</param>
            <param name="b">Kulma.</param>
            <returns><c>true</c> jos pienempi tai yhtäsuuri, <c>false</c> jos suurempi.</returns>
        </member>
        <member name="M:Jypeli.Angle.op_Explicit(Jypeli.Angle)~Jypeli.UnlimitedAngle">
            <summary>
            Poistaa kulman rajoituksen tyyppimuunnoksena.
            </summary>
            <param name="angle">Rajoitettu kulma</param>
            <returns>Rajoittamaton kulma</returns>
        </member>
        <member name="M:Jypeli.Angle.Sum(Jypeli.UnlimitedAngle,Jypeli.Angle)">
            <summary>
            Laskee yhteen rajoittamattoman ja rajoitetun kulman, palauttaen rajoitetun kulman.
            </summary>
            <param name="a">Rajoittamaton kulma</param>
            <param name="b">Rajoitettu kulma</param>
            <returns>Rajoitettu kulma</returns>
        </member>
        <member name="M:Jypeli.Angle.Sum(Jypeli.Angle,Jypeli.UnlimitedAngle)">
            <summary>
            Laskee yhteen rajoitetun ja rajoittamattoman kulman, palauttaen rajoitetun kulman.
            </summary>
            <param name="a">Rajoitettu kulma</param>
            <param name="b">Rajoittamaton kulma</param>
            <returns>Rajoitettu kulma</returns>
        </member>
        <member name="M:Jypeli.Angle.Unlimit">
            <summary>
            Palauttaa vastaavan rajoittamattoman kulman.
            </summary>
        </member>
        <member name="M:Jypeli.Angle.FromRadians(System.Double)">
            <summary>
            Luo kulman annettujen radiaanien mukaan.
            </summary>
            <param name="radian">Radiaanit.</param>
        </member>
        <member name="M:Jypeli.Angle.FromDegrees(System.Double)">
            <summary>
            Luo kulman annettujen asteiden mukaan.
            </summary>
            <param name="degree">Asteet.</param>
        </member>
        <member name="M:Jypeli.Angle.DegreeToRadian(System.Double)">
            <summary>
            Muuttaa asteet radiaaneiksi.
            </summary>
            <param name="degree">Asteet.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Angle.RadianToDegree(System.Double)">
            <summary>
            Muuttaa radiaanit asteiksi.
            </summary>
            <param name="radian">Radiaanit.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Angle.Complement(Jypeli.Angle)">
            <summary>
            Laskee komplementtikulman (90 asteen kulman toinen puoli)
            </summary>
            <param name="a">Kulma.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Angle.Supplement(Jypeli.Angle)">
            <summary>
            Laskee suplementtikulman (180 asteen kulman toinen puoli)
            </summary>
            <param name="a">Kulma.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Angle.Explement(Jypeli.Angle)">
            <summary>
            Laskee eksplementtikulman (360 asteen kulman toinen puoli)
            </summary>
            <param name="a">Kulma.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Angle.GetHashCode">
            <summary>
            Palauttaa kulmaa yksilöivän luvun, tässä tapauksessa kulman asteluvun.
            </summary>
            <returns>
            Kokonaisluku.
            </returns>
        </member>
        <member name="M:Jypeli.Angle.Equals(System.Object)">
            <summary>
            Tarkistaa kahden kulman yhtäsuuruuden. Jos parametrinä annetaan jotain muuta kuin kulma, tulos on aina epätosi.
            </summary>
            <param name="obj">Toinen kulma.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Angle.GetPositiveRadians">
            <summary>
            Palauttaa kulman radiaaneina siten, että se on aina positiivinen.
            Hyödyllinen esimerkiksi ympyrän kaarien käsittelyssä.
            </summary>
            <returns>]0,2pi]</returns>
        </member>
        <member name="M:Jypeli.Angle.GetPositiveDegrees">
            <summary>
            Palauttaa kulman asteina siten, että se on aina positiivinen.
            Hyödyllinen esimerkiksi ympyrän kaarien käsittelyssä.
            </summary>
            <returns>]0,360]</returns>
        </member>
        <member name="M:Jypeli.Angle.ArcSin(System.Double)">
            <summary>
            Palauttaa kulman joka vastaa d:n arcus-sini.
            </summary>
            <param name="d">Lukuarvo välillä 0-1.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.Angle.ArcCos(System.Double)">
            <summary>
            Palauttaa kulman joka vastaa d:n arcuskosini.
            </summary>
            <param name="d">Lukuarvo välillä 0-1.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.Angle.ArcTan(System.Double)">
            <summary>
            Palauttaa kulman joka vastaa d:n arcus-tangentti.
            </summary>
            <param name="d">Lukuarvo.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="P:Jypeli.Angle.Degrees">
            <summary>
            Palauttaa tai asettaa kulman asteina.
            </summary>
            <value>Asteet.</value>
        </member>
        <member name="P:Jypeli.Angle.Radians">
            <summary>
            Palauttaa tai asettaa kulman radiaaneina.
            </summary>
            <value>Radiaanit.</value>
        </member>
        <member name="P:Jypeli.Angle.MainDirection">
            <summary>
            Kulmaa vastaava pääilmansuunta.
            </summary>
        </member>
        <member name="P:Jypeli.Angle.Sin">
            <summary>
            Kulman sini.
            </summary>
        </member>
        <member name="P:Jypeli.Angle.Cos">
            <summary>
            Kulman kosini.
            </summary>
        </member>
        <member name="P:Jypeli.Angle.Tan">
            <summary>
            Kulman tangentti.
            </summary>
        </member>
        <member name="T:Jypeli.Time">
            <summary>
            Sisältää tiedon ajasta, joka on kulunut pelin alusta ja viime päivityksestä.
            </summary>
        </member>
        <member name="M:Jypeli.Time.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Rakentaa ajan kahdesta TimeSpan-oliosta.
            </summary>
            <param name="fromUpdate">Päivityksestä kulunut aika</param>
            <param name="fromStart">Pelin alusta kulunut aika</param>
        </member>
        <member name="M:Jypeli.Time.#ctor(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Rakentaa ajan XNA:n GameTimestä.
            </summary>
            <param name="gameTime">XNA:n vastaava olio</param>
        </member>
        <member name="P:Jypeli.Time.SinceLastUpdate">
            <summary>
            Aika joka on kulunut viime päivityksestä.
            </summary>
        </member>
        <member name="P:Jypeli.Time.SinceStartOfGame">
            <summary>
            Aika joka on kulunut pelin alusta.
            </summary>
        </member>
        <member name="T:Jypeli.Vector">
            <summary>
            2D-vektori.
            </summary>
        </member>
        <member name="F:Jypeli.Vector.Zero">
            <summary>
            Nollavektori.
            </summary>
        </member>
        <member name="F:Jypeli.Vector.UnitX">
            <summary>
            Vaakasuuntainen yksikkövektori (pituus 1, suunta oikealle).
            </summary>
        </member>
        <member name="F:Jypeli.Vector.UnitY">
            <summary>
            Pystysuuntainen yksikkövektori (pituus 1, suunta ylös).
            </summary>
        </member>
        <member name="F:Jypeli.Vector.Diagonal">
            <summary>
            Diagonaalivektori (1,1)
            </summary>
        </member>
        <member name="M:Jypeli.Vector.FromLengthAndAngle(System.Double,System.Double)">
            <summary>
            Luo vektorin pituuden ja kulman perusteella.
            </summary>
            <param name="length">Pituus.</param>
            <param name="angle">Kulma radiaaneina.</param>
        </member>
        <member name="M:Jypeli.Vector.FromLengthAndAngle(System.Double,Jypeli.Angle)">
            <summary>
            Luo vektorin pituuden ja kulman perusteella.
            </summary>
        </member>
        <member name="M:Jypeli.Vector.FromAngle(Jypeli.Angle)">
            <summary>
            Luo vektorin kulman perusteella yksikköpituudella.
            </summary>
        </member>
        <member name="M:Jypeli.Vector.Distance(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Etäisyys kahden pisteen välillä.
            </summary>
        </member>
        <member name="M:Jypeli.Vector.DotProduct(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Pistetulo.
            </summary>
            <param name="left">Vasen vektori</param>
            <param name="right">Oikea vektori</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Vector.CrossProduct(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Ristitulo.
            Palauttaa kohtisuoraan vektoreita vastaan olevan uuden vektorin pituuden.
            Tuloksen merkki kertoo kumpaan suuntaan vektori osoittaa.
            </summary>
            <param name="left">Vasen vektori</param>
            <param name="right">Oikea vektori</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Vector.ComponentProduct(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Kertoo kaksi vektoria komponenteittain.
            </summary>
            <param name="a">Vektori</param>
            <param name="b">Vektori</param>
            <returns>Tulovektori</returns>
        </member>
        <member name="M:Jypeli.Vector.Normalize">
            <summary>
            Palauttaa uuden vektorin, jonka suunta pysyy samana, mutta pituudeksi tulee 1.0.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Vector.Min(Jypeli.Vector[])">
            <summary>
            Palauttaa lyhimmän vektorin.
            </summary>
            <param name="vectors">Vektorit</param>
            <returns>Lyhin vektori.</returns>
        </member>
        <member name="M:Jypeli.Vector.Max(Jypeli.Vector[])">
            <summary>
            Palauttaa pisimmän vektorin.
            </summary>
            <param name="vectors">Vektorit</param>
            <returns>Pisin vektori.</returns>
        </member>
        <member name="M:Jypeli.Vector.Average(System.Collections.Generic.IEnumerable{Jypeli.Vector})">
            <summary>
            Palauttaa kahden tai useamman vektorin keskiarvon.
            </summary>
            <param name="vectors">Vektorit</param>
            <returns>Keskiarvovektori</returns>
        </member>
        <member name="M:Jypeli.Vector.Average(Jypeli.Vector[])">
            <summary>
            Palauttaa kahden tai useamman vektorin keskiarvon.
            </summary>
            <param name="vectors">Vektorit</param>
            <returns>Keskiarvovektori</returns>
        </member>
        <member name="M:Jypeli.Vector.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden vektorin komponenteista.
            </summary>
            <param name="X">X-komponentti</param>
            <param name="Y">Y-komponentti</param>
        </member>
        <member name="M:Jypeli.Vector.ToString">
            <summary>
            Vektori merkkijonona muodossa (x,y)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Jypeli.Vector.LeftNormal">
            <summary>
            Vasen normaali.
            </summary>
        </member>
        <member name="P:Jypeli.Vector.RightNormal">
            <summary>
            Oikea normaali.
            </summary>
        </member>
        <member name="P:Jypeli.Vector.Magnitude">
            <summary>
            Vektorin pituus.
            </summary>
        </member>
        <member name="P:Jypeli.Vector.MagnitudeSquared">
            <summary>
            Vektorin pituuden neliö.
            </summary>
        </member>
        <member name="P:Jypeli.Vector.Angle">
            <summary>
            Kulma radiaaneina.
            </summary>
        </member>
        <member name="T:Jypeli.CustomDrawable">
            <summary>
            Rajapinta olioille, joilla on oma Draw-metodi.
            </summary>
        </member>
        <member name="T:Jypeli.HorizontalLayout">
            <summary>
            Asettelee widgetit riviin vaakasuunnassa.
            </summary>
        </member>
        <member name="T:Jypeli.ILayout">
            <summary>
            Rajapinta asettelijalle. Asettelija asettelee widgetin
            lapsioliot siten, että ne mahtuvat widgetin sisälle. Asettelija
            muuttaa lapsiolioiden kokoa sekä paikkaa. Asettelussa käytetään
            hyväksi lapsiolioiden ominaisuuksia <c>PreferredSize</c>,
            <c>HorizontalSizing</c> sekä <c>VerticalSizing</c>.
            </summary>
        </member>
        <member name="P:Jypeli.ILayout.TopPadding">
            <summary>
            Yläreunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.ILayout.BottomPadding">
            <summary>
            Alareunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.ILayout.LeftPadding">
            <summary>
            Vasempaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.ILayout.RightPadding">
            <summary>
            Oikeaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="M:Jypeli.HorizontalLayout.#ctor">
            <summary>
            Luo uuden asettelijan.
            </summary>
        </member>
        <member name="P:Jypeli.HorizontalLayout.Spacing">
            <summary>
            Olioiden väliin jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.HorizontalLayout.TopPadding">
            <summary>
            Yläreunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.HorizontalLayout.BottomPadding">
            <summary>
            Alareunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.HorizontalLayout.LeftPadding">
            <summary>
            Vasempaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.HorizontalLayout.RightPadding">
            <summary>
            Oikeaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="T:Jypeli.Sizing">
            <summary>
            Olion koon asettaminen asettelijan sisällä.
            </summary>
        </member>
        <member name="F:Jypeli.Sizing.FixedSize">
            <summary>
            Olio ei kasva suuremmaksi kuin sen <c>PreferredSize</c>.
            </summary>
        </member>
        <member name="F:Jypeli.Sizing.Expanding">
            <summary>
            Olio käyttää kaiken vapaana olevan tilan ja kutistuu, jos tilaa ei ole tarpeeksi.
            </summary>
        </member>
        <member name="T:Jypeli.CollisionShapeParameters">
            <summary>
            Törmäyskuvion laatuun vaikuttavat parametrit.
            </summary>
        </member>
        <member name="T:Jypeli.CollisionShapeQuality">
            <summary>
            Kappaleen kuvion laatu törmäyksentunnistuksessa.
            </summary>
        </member>
        <member name="F:Jypeli.CollisionShapeQuality.Value">
            <summary>
            Laatuarvo.
            </summary>
        </member>
        <member name="M:Jypeli.CollisionShapeQuality.FromValue(System.Double)">
            <summary>
            Alustaa uuden laatuattribuutin.
            </summary>
            <param name="value">Lukuarvo välillä <c>0.0</c> (huonoin) ja <c>1.0</c> (paras).</param>
        </member>
        <member name="F:Jypeli.CollisionShapeQuality.Worst">
            <summary>
            Huonoin mahdollinen laatu, nopea mutta epätarkka.
            </summary>
        </member>
        <member name="F:Jypeli.CollisionShapeQuality.Tolerable">
            <summary>
            Välttävä laatu.
            </summary>
        </member>
        <member name="F:Jypeli.CollisionShapeQuality.Good">
            <summary>
            Hyvä laatu.
            </summary>
        </member>
        <member name="F:Jypeli.CollisionShapeQuality.Best">
            <summary>
            Paras mahdollinen laatu, tarkka mutta hidas.
            </summary>
        </member>
        <member name="M:Jypeli.Force.Destroy">
            <summary>
            Lopettaa voiman vaikutuksen.
            </summary>
        </member>
        <member name="P:Jypeli.Force.Value">
            <summary>
            Voiman suunta ja suuruus.
            </summary>
        </member>
        <member name="P:Jypeli.Force.CreationTime">
            <summary>
            Voiman luomisaika.
            </summary>
        </member>
        <member name="P:Jypeli.Force.Lifetime">
            <summary>
            Elinaika. Lasketaan siitä lähtien, kun voima luodaan.
            </summary>
        </member>
        <member name="P:Jypeli.Force.MaximumLifetime">
            <summary>
            Suurin mahdollinen elinaika.
            Kun <c>Lifetime</c> on suurempi kuin tämä, voima lopettaa vaikuttamasta.
            </summary>
        </member>
        <member name="T:Jypeli.CollisionHandler`2">
            <summary>
            Törmäystapahtumiin liitettävän metodin tyyppi. Törmäyksen käsittelevällä
            metodilla ei ole paluuarvoa ja se ottaa yhden <code>Collision</code>-tyyppisen
            parametrin.
            </summary>
        </member>
        <member name="T:Jypeli.VerticalLayout">
            <summary>
            Asettelee widgetit päällekäin, järjestyksessä ylhäältä alas.
            </summary>
        </member>
        <member name="M:Jypeli.VerticalLayout.#ctor">
            <summary>
            Luo uuden asettelijan.
            </summary>
        </member>
        <member name="P:Jypeli.VerticalLayout.Spacing">
            <summary>
            Olioiden väliin jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.VerticalLayout.TopPadding">
            <summary>
            Yläreunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.VerticalLayout.BottomPadding">
            <summary>
            Alareunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.VerticalLayout.LeftPadding">
            <summary>
            Vasempaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.VerticalLayout.RightPadding">
            <summary>
            Oikeaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="T:Jypeli.Widget">
            <summary>
            Käyttöliittymän komponentti.
            </summary>
        </member>
        <member name="M:Jypeli.Widget.#ctor(Jypeli.Animation)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="animation"></param>
        </member>
        <member name="M:Jypeli.Widget.#ctor(Jypeli.ILayout)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Jypeli.Widget.#ctor(System.Double,System.Double,Jypeli.Shape)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Jypeli.Widget.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:Jypeli.Widget.BorderColor">
            <summary>
            Reunojen väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widget.IsModal">
            <summary>
            Jos <c>true</c>, pelin sekä ikkunan alla olevien widgettien
            ohjaimet eivät ole käytössä kun ikkuna on näkyvissä.
            </summary>
        </member>
        <member name="T:Jypeli.RowLayout">
            <summary>
            Asettelee widgetit riveihin. <c>TargetWidth</c> määrittää
            kuinka leveä yhden rivin tulisi olla. Kun yksi rivi tulee
            täyteen, jatketaan seuraavalle riville.
            </summary>
        </member>
        <member name="P:Jypeli.RowLayout.HorizontalSpacing">
            <summary>
            Olioiden väliin vaakasuunnassa jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.RowLayout.TopPadding">
            <summary>
            Yläreunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.RowLayout.BottomPadding">
            <summary>
            Alareunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.RowLayout.LeftPadding">
            <summary>
            Vasempaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.RowLayout.RightPadding">
            <summary>
            Oikeaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.RowLayout.TargetWidth">
            <summary>
            Kuinka leveitä rivien tulisi korkeintaan olla.
            </summary>
        </member>
        <member name="T:Jypeli.Surface">
            <summary>
            Tasainen tai epätasainen pinta.
            </summary>
        </member>
        <member name="M:Jypeli.Surface.#ctor(System.Double,System.Double[],System.Double)">
            <summary>
            Helppo tapa lisätä kenttään epätasainen pinta.
            Pinta kuvataan luettelemalla Y-koordinaatteja vasemmalta oikealle lukien. Kahden Y-koordinaatin
            väli on aina sama.
            </summary>
            <param name="width">Pinnan leveys</param>
            <param name="heights">Y-koordinaatit lueteltuna vasemmalta oikealle.</param>
            <param name="scale">Vakio, jolla jokainen Y-koordinaatti kerrotaan. Hyödyllinen,
            jos halutaan muuttaa koko pinnan korkeutta muuttamatta jokaista pistettä yksitellen.
            Tavallisesti arvoksi kelpaa 1.0.</param>
            <remarks>
            Huomaa, että pinnassa ei voi olla kahta pistettä päällekkäin.
            </remarks>
        </member>
        <member name="M:Jypeli.Surface.#ctor(System.Double,System.Double)">
            <summary>
            Luo tasaisen pinnan.
            </summary>
            <param name="width">Pinnan leveys</param>
            <param name="height">Pinnan korkeus</param>
        </member>
        <member name="M:Jypeli.Surface.#ctor(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Luo satunnaisen pinnan.
            </summary>
            <param name="width">Pinnan leveys</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Surface.#ctor(System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Luo satunnaisen pinnan.
            </summary>
            <param name="width">Pinnan leveys</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="maxchange">Suurin sallittu erotus kahden pisteen välillä.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Surface.Create(Jypeli.Level,Jypeli.Direction)">
            <summary>
            Luo kentälle tasaisen reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="direction">Mikä reuna luodaan.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.Create(Jypeli.Level,Jypeli.Direction,System.Double,System.Double,System.Int32)">
            <summary>
            Luo kentälle epätasaisen reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="direction">Mikä reuna luodaan.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.Create(Jypeli.Level,Jypeli.Direction,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Luo kentälle epätasaisen reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="maxchange">Suurin sallittu erotus kahden pisteen välillä.</param>
            <param name="direction">Mikä reuna luodaan.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateLeft(Jypeli.Level)">
            <summary>
            Luo kentälle tasaisen vasemman reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateLeft(Jypeli.Level,System.Double,System.Double,System.Int32)">
            <summary>
            Luo kentälle epätasaisen vasemman reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateLeft(Jypeli.Level,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Luo kentälle epätasaisen vasemman reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="maxchange">Suurin sallittu erotus kahden pisteen välillä.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateRight(Jypeli.Level)">
            <summary>
            Luo kentälle tasaisen oikean reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateRight(Jypeli.Level,System.Double,System.Double,System.Int32)">
            <summary>
            Luo kentälle epätasaisen oikean reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="level">Kenttä</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateRight(Jypeli.Level,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Luo kentälle epätasaisen oikean reunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="level">Kenttä</param>
            <param name="maxchange">Suurin sallittu erotus kahden pisteen välillä.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateTop(Jypeli.Level)">
            <summary>
            Luo kentälle tasaisen yläreunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateTop(Jypeli.Level,System.Double,System.Double,System.Int32)">
            <summary>
            Luo kentälle epätasaisen yläreunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateTop(Jypeli.Level,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Luo kentälle epätasaisen yläreunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="maxchange">Suurin sallittu erotus kahden pisteen välillä.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateBottom(Jypeli.Level)">
            <summary>
            Luo kentälle tasaisen alareunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateBottom(Jypeli.Level,System.Double,System.Double,System.Int32)">
            <summary>
            Luo kentälle epätasaisen alareunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="M:Jypeli.Surface.CreateBottom(Jypeli.Level,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Luo kentälle epätasaisen alareunan.
            Ei lisää reunaa automaattisesti kenttään.
            </summary>
            <param name="level">Kenttä</param>
            <param name="min">Matalin kohta.</param>
            <param name="max">Korkein kohta.</param>
            <param name="points">Pisteiden määrä.</param>
            <param name="maxchange">Suurin sallittu erotus kahden pisteen välillä.</param>
            <returns>Reunaolio</returns>
        </member>
        <member name="T:Jypeli.PhysicsStructure">
            <summary>
            Rakenne, joka pitää fysiikkaoliot kiinteän matkan päässä toisistaan.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsStructure.#ctor">
            <summary>
            Luo uuden tyhjän rakenteen.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsStructure.#ctor(Jypeli.PhysicsObject[])">
            <summary>
            Luo uuden rakenteen ja varustaa sen fysiikkaolioilla.
            </summary>
            <param name="objs">Fysiikkaoliot</param>
        </member>
        <member name="M:Jypeli.PhysicsStructure.OnAddedToGame">
            <summary>
            Kutsutaan kun olio lisätään peliin.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsStructure.OnCollided(Jypeli.IPhysicsObject,Jypeli.IPhysicsObject)">
            <summary>
            Kutsutaan kun törmätään.
            </summary>
        </member>
        <member name="M:Jypeli.PhysicsStructure.Add(Jypeli.GameObject)">
            <summary>
            Lisää olion rakenteeseen.
            </summary>
            <param name="obj">Lisättävä olio</param>
        </member>
        <member name="P:Jypeli.PhysicsStructure.IsAddedToGame">
            <summary>
            Onko rakenne lisätty peliin.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsStructure.Objects">
            <summary>
            Rakenteeseen kuuluvat oliot.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsStructure.Joints">
            <summary>
            Rakenteeseen kuuluvat liitokset.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsStructure.Softness">
            <summary>
            Olioiden välisten liitosten pehmeys.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsStructure.Position">
            <summary>
            Rakenteen paikka pelimaailmassa.
            </summary>
        </member>
        <member name="E:Jypeli.PhysicsStructure.Collided">
            <summary>
            Tapahtuu kun olio törmää toiseen.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsStructure.ParentStructure">
            <summary>
            Rakenneolio, johon tämä olio kuuluu.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsStructure.CanRotate">
            <summary>
            Jos <c>false</c>, olio ei voi pyöriä.
            </summary>
        </member>
        <member name="P:Jypeli.PhysicsStructure.IsDestroying">
            <summary>
            Onko olio tuhoutumassa.
            </summary>
        </member>
        <member name="E:Jypeli.PhysicsStructure.Destroying">
            <summary>
            Tapahtuu, kun olion tuhoaminen alkaa.
            </summary> 
        </member>
        <member name="T:Jypeli.Surfaces">
            <summary>
            Kentän reunat.
            </summary>
        </member>
        <member name="M:Jypeli.Surfaces.GetEnumerator">
            <summary>
            Enumeraattori pinnoille.
            Mahdollistaa foreach-lauseen käytön.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Surfaces.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumeraattori pinnoille.
            Mahdollistaa foreach-lauseen käytön.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Surfaces.Get(Jypeli.Direction[])">
            <summary>
            Valikoiva enumeraattori pinnoille.
            </summary>
            <param name="directions">Mukaan laskettavien reunojen suunnat</param>
            <returns></returns>
        </member>
        <member name="P:Jypeli.Surfaces.Left">
            <summary>
            Vasen reuna.
            </summary>
        </member>
        <member name="P:Jypeli.Surfaces.Right">
            <summary>
            Oikea reuna.
            </summary>
        </member>
        <member name="P:Jypeli.Surfaces.Top">
            <summary>
            Yläreuna.
            </summary>
        </member>
        <member name="P:Jypeli.Surfaces.Bottom">
            <summary>
            Alareuna.
            </summary>
        </member>
        <member name="T:Jypeli.GameObjects.VerticalScrollLayout">
            <summary>
            Asettelee widgetit päällekäin, järjestyksessä ylhäältä alas.
            Jos widgeteille ei ole tarpeeksi tilaa, vain osa niistä asetellaan
            paikalleen. Ensimmäisen näkyvän widgetin indeksi asetetaan <c>Update</c>:ssa
            propertyyn <c>StartIndex</c> ja viimeisen jälkeisen indeksi propertyyn
            <c>EndIndex</c>.
            </summary>
        </member>
        <member name="M:Jypeli.GameObjects.VerticalScrollLayout.Scroll(System.Collections.Generic.IList{Jypeli.GameObject},System.Double)">
            <summary>
            Listan portaaton vieritys.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.VerticalScrollLayout.Spacing">
            <summary>
            Olioiden väliin jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.VerticalScrollLayout.TopPadding">
            <summary>
            Yläreunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.VerticalScrollLayout.BottomPadding">
            <summary>
            Alareunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.VerticalScrollLayout.LeftPadding">
            <summary>
            Vasempaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.VerticalScrollLayout.RightPadding">
            <summary>
            Oikeaan reunaan jäävä tyhjä tila.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.VerticalScrollLayout.StartIndex">
            <summary>
            Ylhäältä lukien ensimmäisen piirtoalueen sisällä olevan widgetin indeksi.
            </summary>
        </member>
        <member name="P:Jypeli.GameObjects.VerticalScrollLayout.EndIndex">
            <summary>
            Viimeisen piirtoalueella olevan widgetin jälkeinen indeksi.
            </summary>
        </member>
        <member name="T:Jypeli.Animation">
            <summary>
            Sarja kuvia, jotka vaihtuvat halutulla nopeudella. 
            Yksi animaatio koostuu yhdestä tai useammasta kuvasta.
            </summary>
            <remarks>
            Eri peliolioille kannattaa yleensä tehdä oma animaatio-olio,
            jotta niiden animaatiot voivat edetä eri tahtiin. Jos animaatioilla
            on kuitenkin samat kuvat, kannattaa samaa kuvataulukkoa käyttää
            molemmille.
            <example>
            Image[] kuvat = LoadImages("kuva1", "kuva2", "kuva3");
            
            void LuoKentta()
            {
                // ...
                o1.Animation = new animation(kuvat);
                o2.Animation = new Animation(kuvat);
            }
            </example>
            </remarks>
        </member>
        <member name="M:Jypeli.Animation.#ctor(Jypeli.Image[])">
            <summary>
            Luo uuden animaation.
            </summary>
            <param name="frames">Animaation ruudut.</param>
        </member>
        <member name="M:Jypeli.Animation.op_Implicit(Jypeli.Image)~Jypeli.Animation">
            <summary>
            Luo uuden animaation kuvasta.
            </summary>
            <param name="image">Kuva.</param>
        </member>
        <member name="M:Jypeli.Animation.#ctor(Jypeli.Animation)">
            <summary>
            Luo kopion jo tunnetusta animaatiosta.
            </summary>
            <param name="src">Kopioitava animaatio.</param>
        </member>
        <member name="M:Jypeli.Animation.Apply(Jypeli.Animation,System.Converter{Jypeli.Image,Jypeli.Image})">
            <summary>
            Käyttää haluttua metodia kaikkiin animaation ruutuihin.
            </summary>
            <param name="anim">Animaatio</param>
            <param name="method">Metodi, joka ottaa parametriksi kuvan ja palauttaa kuvan</param>
            <returns>Uusi animaatio</returns>
        </member>
        <member name="M:Jypeli.Animation.Mirror(Jypeli.Animation)">
            <summary>
            Peilaa animaation X-suunnasssa.
            </summary>
            <param name="anim">Animaatio</param>
            <returns>Peilattu animaatio</returns>
        </member>
        <member name="M:Jypeli.Animation.Flip(Jypeli.Animation)">
            <summary>
            Peilaa animaation Y-suunnasssa.
            </summary>
            <param name="anim">Animaatio</param>
            <returns>Peilattu animaatio</returns>
        </member>
        <member name="M:Jypeli.Animation.Reverse(Jypeli.Animation)">
            <summary>
            Palauttaa animaation, joka toistuu lopusta alkuun.
            </summary>
            <param name="anim">Animaatio</param>
            <returns>Käännetty animaatio</returns>
        </member>
        <member name="M:Jypeli.Animation.Start">
            <summary>
            Käynnistää animaation alusta.
            </summary>
        </member>
        <member name="M:Jypeli.Animation.Start(System.Int32)">
            <summary>
            Käynnistää animaation alusta.
            </summary>
            <param name="repeatCount">Kuinka monta kertaa animaatio suoritetaan.</param>
        </member>
        <member name="M:Jypeli.Animation.Resume">
            <summary>
            Jatkaa animaatiota siitä, mihin viimeksi jäätiin.
            </summary>
        </member>
        <member name="M:Jypeli.Animation.Stop">
            <summary>
            Pysäyttää animaation asettaen sen ensimmäiseen ruutuun.
            </summary>
        </member>
        <member name="M:Jypeli.Animation.Step(System.Int32)">
            <summary>
            Etenee animaatiossa halutun määrän ruutuja. Käytä negatiivisia arvoja, jos haluat
            kulkea taaksepäin.
            </summary>
            <param name="numberOfFrames">Edettävä määrä ruutuja.</param>
        </member>
        <member name="M:Jypeli.Animation.Step">
            <summary>
            Etenee animaatiossa yhden ruudun eteenpäin.
            </summary>
        </member>
        <member name="P:Jypeli.Animation.FrameCount">
            <summary>
            Ruutujen määrä.
            </summary>
        </member>
        <member name="P:Jypeli.Animation.CurrentFrameIndex">
            <summary>
            Aktiivisen animaatioruudun indeksi (alkaa nollasta).
            </summary>
        </member>
        <member name="P:Jypeli.Animation.FPS">
            <summary>
            Animaation päivitysnopeus ruutuina sekunnissa (frames per second).
            </summary>
        </member>
        <member name="P:Jypeli.Animation.CurrentFrame">
            <summary>
            Tällä hetkellä näkyvä ruutu animaatiosta.
            </summary>
        </member>
        <member name="P:Jypeli.Animation.StopOnLastFrame">
            <summary>
            Jos <c>true</c>, animaatio ei pysähtyessä palaa ensimmäiseen
            ruutuun.
            </summary>
        </member>
        <member name="P:Jypeli.Animation.Width">
            <summary>
            Animaation leveys. Nolla, jos animaatiossa ei ole yhtään ruutua.
            </summary>
        </member>
        <member name="P:Jypeli.Animation.Height">
            <summary>
            Animaation korkeus. Nolla, jos animaatiossa ei ole yhtään ruutua.
            </summary>
        </member>
        <member name="P:Jypeli.Animation.Size">
            <summary>
            Animaation koko. Vector.Zero, jos animaatiossa ei ole yhtään ruutua.
            </summary>
        </member>
        <member name="E:Jypeli.Animation.Played">
            <summary>
            Tapahtuma, joka tapahtuu kun animaatio on suoritettu.
            </summary>
        </member>
        <member name="T:Jypeli.Canvas">
            <summary>
            Piirtoalusta.
            </summary>
        </member>
        <member name="M:Jypeli.Canvas.DrawLine(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Piirtää janan.
            </summary>
            <param name="startPoint">Alkupiste</param>
            <param name="endPoint">Loppupiste</param>
        </member>
        <member name="M:Jypeli.Canvas.DrawLine(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Piirtää janan.
            </summary>
            <param name="x1">Alkupisteen x-koordinaatti</param>
            <param name="y1">Alkupisteen y-koordinaatti</param>
            <param name="x2">Loppupisteen x-koordinaatti</param>
            <param name="y2">Loppupisteen y-koordinaatti</param>
        </member>
        <member name="P:Jypeli.Canvas.Left">
            <summary>
            Vasen reuna.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.Right">
            <summary>
            Oikea reuna.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.Bottom">
            <summary>
            Alareuna.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.Top">
            <summary>
            Yläreuna.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.TopLeft">
            <summary>
            Vasen ylänurkka.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.TopRight">
            <summary>
            Oikea ylänurkka.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.BottomLeft">
            <summary>
            Vasen alanurkka.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.BottomRight">
            <summary>
            Oikea alanurkka.
            </summary>
        </member>
        <member name="P:Jypeli.Canvas.BrushColor">
            <summary>
            Pensselin väri.
            </summary>
        </member>
        <member name="T:Jypeli.Color">
            <summary>
            Väri.
            </summary>
        </member>
        <member name="F:Jypeli.Color.RedComponent">
            <summary>
            Punainen värikomponentti välillä 0-255
            </summary>
        </member>
        <member name="F:Jypeli.Color.GreenComponent">
            <summary>
            Vihreä värikomponentti välillä 0-255
            </summary>
        </member>
        <member name="F:Jypeli.Color.BlueComponent">
            <summary>
            Sininen värikomponentti välillä 0-255
            </summary>
        </member>
        <member name="F:Jypeli.Color.AlphaComponent">
            <summary>
            Läpinäkymättömyys välillä 0-255
            </summary>
        </member>
        <member name="M:Jypeli.Color.PackRGB(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Pakkaa kolme kokonaislukua väriä vastaavaksi kokonaisluvuksi
            </summary>
            <param name="r">värin punainen osuus (0-255)</param>
            <param name="g">värin vihreä osuus (0-255)</param>
            <param name="b">värin sininen osuus (0-255)</param>
            <param name="a">alpha-arvo (0-255)</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.PackRGB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Pakkaa kolme kokonaislukua väriä vastaavaksi kokonaisluvuksi
            </summary>
            <param name="r">värin punainen osuus (0-255)</param>
            <param name="g">värin vihreä osuus (0-255)</param>
            <param name="b">värin sininen osuus (0-255)</param>
            <param name="a">alpha-arvo (0-255)</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.FromHexCode(System.String)">
            <summary>
            Palauttaa heksakoodia vastaavan värin.
            </summary>
            <param name="hexString">Heksakoodi</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.FromPaintDotNet(System.Int32,System.Int32)">
            <summary>
            Antaa värin Paint.net -ohjelman paletista.
            </summary>
            <param name="row">Rivi (0-1)</param>
            <param name="col">Sarake (0-15)</param>
            <returns>Väri</returns>
        </member>
        <member name="M:Jypeli.Color.GetAlpha(System.UInt32)">
            <summary>
            Ottaa kokonaisluvusta alpha-arvon
            </summary>
            <param name="c">luku josta otetaan</param>
            <returns>Alpha-arvo</returns>
        </member>
        <member name="M:Jypeli.Color.GetAlpha(System.Int32)">
            <summary>
            Ottaa kokonaisluvusta alpha-arvon
            </summary>
            <param name="c">luku josta otetaan</param>
            <returns>Alpha-arvo</returns>
        </member>
        <member name="M:Jypeli.Color.GetRed(System.UInt32)">
            <summary>
            Ottaa kokonaisluvusta punaisen värin
            </summary>
            <param name="c">luku josta otetaan</param>
            <returns>punaisen osuus</returns>
        </member>
        <member name="M:Jypeli.Color.GetGreen(System.UInt32)">
            <summary>
            Ottaa kokonaisluvusta vihreän värin
            </summary>
            <param name="c">luku josta otetaan</param>
            <returns>vihreän osuus</returns>
        </member>
        <member name="M:Jypeli.Color.GetBlue(System.UInt32)">
            <summary>
            Ottaa kokonaisluvusta sinisen värin
            </summary>
            <param name="c">luku josta otetaan</param>
            <returns>sinisen osuus</returns>
        </member>
        <member name="M:Jypeli.Color.IntToColor(System.Int32)">
            <summary>
            Tekee kokonaisluvusta värin
            </summary>
            <param name="c">ARGB-arvon sisältävä kokonaisluku</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.UIntToColor(System.UInt32)">
            <summary>
            Tekee kokonaisluvusta värin
            </summary>
            <param name="c">ARGB-arvon sisältävä kokonaisluku</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.Distance(Jypeli.Color,Jypeli.Color)">
            <summary>
            Laskee kahden värin (euklidisen) etäisyyden RGB-väriavaruudessa.
            Värikomponentit ovat välillä 0-255 joten suurin mahdollinen etäisyys
            (musta ja valkoinen) on noin 441,68.
            </summary>
            <returns>Etäisyys</returns>
        </member>
        <member name="M:Jypeli.Color.Distance(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Laskee kahden värin (euklidisen) etäisyyden RGB-väriavaruudessa.
            Värikomponentit ovat välillä 0-255 joten suurin mahdollinen etäisyys
            (musta ja valkoinen) on noin 441,68.
            </summary>
            <returns>Etäisyys</returns>
        </member>
        <member name="M:Jypeli.Color.ToInt">
            <summary>
            Muuttaa värin ARGB-kokonaisluvuksi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.ToIntRGB">
            <summary>
            Muuttaa värin RGB-kokonaisluvuksi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.ToUInt">
            <summary>
            Muuttaa värin ARGB-kokonaisluvuksi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.ToString">
            <summary>
            Palautetaan väri heksamerkkijonona
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.ToString(System.Boolean)">
            <summary>
            Palautetaan väri heksamerkkijonona.
            </summary>
            <param name="alpha">Otetaanko läpinäkyvyys mukaan (8 merkin heksakoodi)</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Color.Darker(Jypeli.Color,System.Int32)">
            <summary>
            Antaa tummemman värin. Vähentaa jokaista kolmea osaväriä arvon <c>howMuch</c>
            verran.
            </summary>
            <param name="c">Alkuperäinen väri.</param>
            <param name="howMuch">Kuinka paljon tummempi (positiivinen luku).</param>
            <returns>Tummempi väri.</returns>
        </member>
        <member name="M:Jypeli.Color.Lighter(Jypeli.Color,System.Int32)">
            <summary>
            Antaa kirkkaamman värin. Kasvattaa jokaista kolmea osaväriä arvon <c>howMuch</c>
            verran.
            </summary>
            <param name="c">Alkuperäinen väri.</param>
            <param name="howMuch">Kuinka paljon vaaleampi.</param>
            <returns>Vaaleampi väri.</returns>
        </member>
        <member name="F:Jypeli.Color.AshGray">
            <summary>
            Tuhkanharmaa.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Aqua">
            <summary>
            Vedensininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Aquamarine">
            <summary>
            Akvamariini.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Azure">
            <summary>
            Asuurinsininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Beige">
            <summary>
            Beessi.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Black">
            <summary>
            Musta.
            </summary>
        </member>
        <member name="F:Jypeli.Color.BloodRed">
            <summary>
            Verenpunainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Blue">
            <summary>
            Sininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.BlueGray">
            <summary>
            Siniharmaa.
            </summary>
        </member>
        <member name="F:Jypeli.Color.BrightGreen">
            <summary>
            Kirkkaan vihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Brown">
            <summary>
            Ruskea.
            </summary>
        </member>
        <member name="F:Jypeli.Color.BrownGreen">
            <summary>
            Ruskeanvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Crimson">
            <summary>
            Karmiininpunainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Cyan">
            <summary>
            Syaani.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Charcoal">
            <summary>
            Hiilenmusta.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkAzure">
            <summary>
            Tumma asuuri.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkBrown">
            <summary>
            Tumma ruskea.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkBlue">
            <summary>
            Tumma sininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkCyan">
            <summary>
            Tumma syaani.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkForestGreen">
            <summary>
            Tumma metsänvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkGray">
            <summary>
            Tumma harmaa.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkGreen">
            <summary>
            Tumma vihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkJungleGreen">
            <summary>
            Tumma viidakonvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkMagenta">
            <summary>
            Tumma magenta (purppura).
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkOrange">
            <summary>
            Tumma oranssi / ruskea.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkRed">
            <summary>
            Tumma punainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkTurquoise">
            <summary>
            Tumma turkoosi.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkViolet">
            <summary>
            Tumma violetti.
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkYellow">
            <summary>
            Tumma keltainen (oliivi).
            </summary>
        </member>
        <member name="F:Jypeli.Color.DarkYellowGreen">
            <summary>
            Tumma keltavihreä (ruskeanvihreä).
            </summary>
        </member>
        <member name="F:Jypeli.Color.Emerald">
            <summary>
            Smaragdinvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.ForestGreen">
            <summary>
            Metsänvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Fuchsia">
            <summary>
            Fuksia (pinkki)
            </summary>
        </member>
        <member name="F:Jypeli.Color.Gold">
            <summary>
            Kulta.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Gray">
            <summary>
            Harmaa.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Green">
            <summary>
            Vihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.GreenYellow">
            <summary>
            Keltavihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.HanPurple">
            <summary>
            Sinipurppurainen väri Han-dynastian ajoilta.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Harlequin">
            <summary>
            Harlekiini (hieman keltaisella sävytetty kirkas vihreä).
            </summary>
        </member>
        <member name="F:Jypeli.Color.HotPink">
            <summary>
            Pinkki.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Ivory">
            <summary>
            Norsunluu.
            </summary>
        </member>
        <member name="F:Jypeli.Color.JungleGreen">
            <summary>
            Viidakonvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Lavender">
            <summary>
            Laventeli.
            </summary>
        </member>
        <member name="F:Jypeli.Color.LightBlue">
            <summary>
            Vaalea sininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.LightCyan">
            <summary>
            Vaalea syaani.
            </summary>
        </member>
        <member name="F:Jypeli.Color.LightGray">
            <summary>
            Vaalea harmaa.
            </summary>
        </member>
        <member name="F:Jypeli.Color.LightGreen">
            <summary>
            Vaalea vihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.LightPink">
            <summary>
            Vaalea vaaleanpunainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.LightYellow">
            <summary>
            Vaalea keltainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Lime">
            <summary>
            Limetti.
            </summary>
        </member>
        <member name="F:Jypeli.Color.LimeGreen">
            <summary>
            Limetinvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Magenta">
            <summary>
            Magenta (pinkki)
            </summary>
        </member>
        <member name="F:Jypeli.Color.Maroon">
            <summary>
            Viininpunainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.MediumBlue">
            <summary>
            Tummahko sininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.MediumPurple">
            <summary>
            Tummahko purppura.
            </summary>
        </member>
        <member name="F:Jypeli.Color.MediumTurquoise">
            <summary>
            Tummahko turkoosi.
            </summary>
        </member>
        <member name="F:Jypeli.Color.MediumVioletRed">
            <summary>
            Tummahko punavioletti.
            </summary>
        </member>
        <member name="F:Jypeli.Color.MidnightBlue">
            <summary>
            Keskiyön sininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Mint">
            <summary>
            Mintunvihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Navy">
            <summary>
            Laivastonsininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Olive">
            <summary>
            Oliivi (tumma keltainen).
            </summary>
        </member>
        <member name="F:Jypeli.Color.Orange">
            <summary>
            Oranssi.
            </summary>
        </member>
        <member name="F:Jypeli.Color.OrangeRed">
            <summary>
            Punaoranssi.
            </summary>
        </member>
        <member name="F:Jypeli.Color.PaintDotNetBlue">
            <summary>
            Paint.NETin sininen väri.
            </summary>
        </member>
        <member name="F:Jypeli.Color.PaintDotNetMagenta">
            <summary>
            Paint.NETin magenta (pinkki) väri.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Pink">
            <summary>
            Vaaleanpunainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Purple">
            <summary>
            Purppura.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Red">
            <summary>
            Punainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Rose">
            <summary>
            Rose (punainen).
            </summary>
        </member>
        <member name="F:Jypeli.Color.RosePink">
            <summary>
            Rose-pinkki.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Ruby">
            <summary>
            Rubiininpunainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Salmon">
            <summary>
            Lohenpunainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.SeaGreen">
            <summary>
            Merensininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Silver">
            <summary>
            Hopea.
            </summary>
        </member>
        <member name="F:Jypeli.Color.SkyBlue">
            <summary>
            Taivaansininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.SlateBlue">
            <summary>
            Saviliuskeensininen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.SlateGray">
            <summary>
            Saviliuskeenharmaa.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Snow">
            <summary>
            Lumenvalkoinen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.SpringGreen">
            <summary>
            Kevään vihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Teal">
            <summary>
            Sinivihreä.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Transparent">
            <summary>
            Läpinäkyvä väri.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Turquoise">
            <summary>
            Turkoosi.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Ultramarine">
            <summary>
            Ultramariini (tumma sininen).
            </summary>
        </member>
        <member name="F:Jypeli.Color.Violet">
            <summary>
            Violetti.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Wheat">
            <summary>
            Luonnonvalkoinen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.White">
            <summary>
            Valkoinen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.Yellow">
            <summary>
            Keltainen.
            </summary>
        </member>
        <member name="F:Jypeli.Color.YellowGreen">
            <summary>
            Keltavihreä.
            </summary>
        </member>
        <member name="T:Jypeli.Graphics">
            <summary>
            Contains graphics resources.
            </summary>
        </member>
        <member name="T:Jypeli.Image">
            <summary>
            Kuva.
            </summary>
        </member>
        <member name="M:Jypeli.Image.GetData(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Kuvan pikselit Color-taulukkona
            </summary>
            <param name="ox">siirtymä x-suunnassa vasemmasta ylänurkasta</param>
            <param name="oy">siirtymä y-suunnassa vasemmasta ylänurkasta</param>
            <param name="w">alueen leveys joka kopioidaan</param>
            <param name="h">lueen korkaus joka kopioidaan</param>
            <returns>pikselit Color-taulukkona</returns>
        </member>
        <member name="M:Jypeli.Image.SetData(Jypeli.Color[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Asettaa kuvan pikselit Color-taulukosta
            </summary>
            <param name="bmp">taulukko josta pikseleitä otetaan</param>
            <param name="ox">siirtymä x-suunnassa vasemmasta ylänurkasta</param>
            <param name="oy">siirtymä y-suunnassa vasemmasta ylänurkasta</param>
            <param name="w">alueen leveys johon kopioidaan</param>
            <param name="h">lueen korkaus johon kopioidaan</param>
            <returns>pikselit Color-taulukkona</returns>
        </member>
        <member name="M:Jypeli.Image.GetDataUInt(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Palalutetaan kuvan pikselit ARGB-uint[,] -taulukkona
            </summary>
            <param name="ox">siirtymä x-suunnassa vasemmasta ylänurkasta</param>
            <param name="oy">siirtymä y-suunnassa vasemmasta ylänurkasta</param>
            <param name="w">alueen leveys joka kopioidaan</param>
            <param name="h">lueen korkaus joka kopioidaan</param>
            <returns>Kuvan pikselit ARGB-taulukkona</returns>
        </member>
        <member name="M:Jypeli.Image.GetDataUIntAA(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Palalutetaan kuvan pikselit ARGB-uint[][] -taulukkona
            </summary>
            <param name="ox">siirtymä x-suunnassa vasemmasta ylänurkasta</param>
            <param name="oy">siirtymä y-suunnassa vasemmasta ylänurkasta</param>
            <param name="w">alueen leveys joka kopioidaan</param>
            <param name="h">lueen korkaus joka kopioidaan</param>
            <returns>Kuvan pikselit ARGB-taulukkona</returns>
        </member>
        <member name="M:Jypeli.Image.SetData(System.UInt32[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Asetetaan kuvan pikselit ARGB-uint taulukosta
            </summary>
            <param name="bmp">taulukko josta pikselit otetaan</param>
            <param name="ox">siirtymä x-suunnassa vasemmasta ylänurkasta</param>
            <param name="oy">siirtymä y-suunnassa vasemmasta ylänurkasta</param>
            <param name="w">alueen leveys johon kopioidaan</param>
            <param name="h">alueen korkeus johon kopioidaan</param>
        </member>
        <member name="M:Jypeli.Image.SetData(System.UInt32[][],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Asetetaan kuvan pikselit ARGB-uint taulukosta
            </summary>
            <param name="bmp">taulukko josta pikselit otetaan</param>
            <param name="ox">siirtymä x-suunnassa vasemmasta ylänurkasta</param>
            <param name="oy">siirtymä y-suunnassa vasemmasta ylänurkasta</param>
            <param name="w">alueen leveys johon kopioidaan</param>
            <param name="h">alueen korkeus johon kopioidaan</param>
        </member>
        <member name="M:Jypeli.Image.#ctor(System.Int32,System.Int32,Jypeli.Color)">
            <summary>
            Luo uuden kuvan.
            </summary>
            <param name="width">Kuvan leveys</param>
            <param name="height">Kuvan korkeus</param>
            <param name="backColor">Kuvan taustaväri</param>
        </member>
        <member name="M:Jypeli.Image.#ctor(System.Double,System.Double,Jypeli.Color)">
            <summary>
            Luo uuden kuvan.
            </summary>
            <param name="width">Kuvan leveys</param>
            <param name="height">Kuvan korkeus</param>
            <param name="backColor">Kuvan taustaväri</param>
        </member>
        <member name="M:Jypeli.Image.ApplyPixelOperation(System.Converter{Jypeli.Color,Jypeli.Color})">
            <summary>
            Suorittaa annetun pikselioperaation koko kuvalle.
            </summary>
            <param name="operation">Aliohjelma, joka ottaa värin ja palauttaa värin</param>
        </member>
        <member name="M:Jypeli.Image.ApplyPixelOperation(System.Converter{Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color})">
            <summary>
            Suorittaa annetun pikselioperaation koko kuvalle.
            </summary>
            <param name="operation">Aliohjelma, joka ottaa värin ja palauttaa värin</param>
        </member>
        <member name="M:Jypeli.Image.InvalidateAsset">
            <summary>
            Tekee uuden lokaalin instanssin kuvan tekstuurista ja poistaa
            viitteen assettiin josta kuva on luotu.
            Kutsu tätä metodia aina kun kuvan dataa muutetaan.
            </summary>
        </member>
        <member name="M:Jypeli.Image.FromFile(System.String)">
            <summary>
            Lataa kuvan tiedostosta. Kuvan ei tarvitse olla lisättynä
            Content-projektiin.
            </summary>
            <param name="path">Tiedoston polku.</param>
        </member>
        <member name="M:Jypeli.Image.FromFile(Jypeli.StorageFile)">
            <summary>
            Lataa kuvan tiedostosta. Kuvan ei tarvitse olla lisättynä
            Content-projektiin.
            </summary>
            <param name="path">Tiedosto.</param>
        </member>
        <member name="M:Jypeli.Image.FromStream(System.IO.Stream)">
            <summary>
            Lataa kuvan tiedostovirrasta.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Image.FromURL(System.String)">
            <summary> 
            Lataa kuvan Internetistä. 
            </summary> 
            <param name="url">Kuvan URL-osoite</param> 
            <returns>Kuva</returns> 
        </member>
        <member name="M:Jypeli.Image.CreateStarSky(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Luo tähtitaivaskuvan.
            </summary>
            <param name="width">Tekstuurin leveys.</param>
            <param name="height">Tekstuurin korkeus.</param>
            <param name="stars">Tähtien määrä.</param>
            <param name="transparent">Onko tausta läpinäkyvä vai ei (jolloin siitä tulee täysin musta)</param>
            <returns>Tekstuuri.</returns>
        </member>
        <member name="M:Jypeli.Image.FromText(System.String,Jypeli.Font,Jypeli.Color,Jypeli.Color)">
            <summary>
            Luo kuvan tekstistä.
            </summary>
            <param name="text">Teksti josta kuva luodaan</param>
            <param name="font">Fontti</param>
            <param name="textColor">Tekstin väri</param>
            <param name="backgroundColor">Tekstin taustaväri</param>
            <returns>Teksti kuvana</returns>
        </member>
        <member name="M:Jypeli.Image.DrawTextOnImage(Jypeli.Image,System.String,Jypeli.Vector,Jypeli.Font,Jypeli.Color,Jypeli.Color)">
            <summary>
            Piirtää tekstiä kuvan päälle.
            </summary>
            <param name="img">Kuva jonka päälle piirretään</param>
            <param name="text">Piirrettävä teksti</param>
            <param name="position">Piirtokohta (origo keskellä kuvaa)</param>
            <param name="font">Fontti</param>
            <param name="textColor">Tekstin väri</param>
            <param name="backgroundColor">Tekstin taustaväri</param>
            <returns>Kuva tekstin kanssa</returns>
        </member>
        <member name="M:Jypeli.Image.DrawTextOnImage(Jypeli.Image,System.String,Jypeli.Font,Jypeli.Color)">
            <summary>
            Piirtää tekstiä kuvan päälle keskelle kuvaa.
            </summary>
            <param name="img">Kuva jonka päälle piirretään</param>
            <param name="text">Piirrettävä teksti</param>
            <param name="font">Fontti</param>
            <param name="textColor">Tekstin väri</param>
            <returns>Kuva tekstin kanssa</returns>
        </member>
        <member name="M:Jypeli.Image.FromGradient(System.Int32,System.Int32,Jypeli.Color,Jypeli.Color)">
            <summary>
            Luo pystysuuntaisen liukuväritetyn kuvan.
            </summary>
            <param name="imageWidth">kuvan leveys.</param>
            <param name="imageHeight">kuvan korkeus.</param>
            <param name="lowerColor">Alareunassa käytettävä väri.</param>
            <param name="upperColor">Yläreunassa käytettävä väri.</param>
            <returns>Väritetty kuva.</returns>
        </member>
        <member name="M:Jypeli.Image.FromColor(System.Int32,System.Int32,Jypeli.Color)">
            <summary>
            Luo yksivärisen kuvan.
            </summary>
            <param name="imageWidth">Kuvan leveys.</param>
            <param name="imageHeight">Kuvan korkeus.</param>
            <param name="color">Kuvan väri.</param>
            <returns>Väritetty kuva.</returns>
        </member>
        <member name="M:Jypeli.Image.Mirror(Jypeli.Image)">
            <summary>
            Peilaa kuvan X-suunnassa.
            </summary>
            <param name="image">Peilattava kuva.</param>
            <returns>Peilattu kuva.</returns>
        </member>
        <member name="M:Jypeli.Image.Mirror(Jypeli.Image[])">
            <summary>
            Peilaa kuvat X-suunnassa.
            </summary>
            <param name="images">Peilattavat kuvat.</param>
            <returns>Peilatut kuvat.</returns>
        </member>
        <member name="M:Jypeli.Image.Flip(Jypeli.Image)">
            <summary>
            Peilaa kuvan Y-suunnassa.
            </summary>
            <param name="image">Peilattava kuva.</param>
            <returns>Peilattu kuva.</returns>
        </member>
        <member name="M:Jypeli.Image.Flip(Jypeli.Image[])">
            <summary>
            Peilaa kuvat Y-suunnassa.
            </summary>
            <param name="images">Peilattavat kuvat.</param>
            <returns>Peilatut kuvat.</returns>
        </member>
        <member name="M:Jypeli.Image.Color(Jypeli.Image,Jypeli.Color)">
            <summary>
            Värittää kuvan.
            </summary>
            <param name="image">Väritettävä kuva.</param>
            <param name="color">Väri, jolla väritetään.</param>
            <returns>Väritetty kuva.</returns>
        </member>
        <member name="M:Jypeli.Image.Color(Jypeli.Image[],Jypeli.Color)">
            <summary>
            Värittää kuvat.
            </summary>
            <param name="images">Väritettävät kuvat.</param>
            <param name="color">Väri, jolla väritetään.</param>
            <returns>Väritetyt kuvat.</returns>
        </member>
        <member name="M:Jypeli.Image.ReplaceColor(Jypeli.Color,Jypeli.Color,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Korvaa värin toisella värillä.
            </summary>
            <param name="src">Korvattava väri.</param>
            <param name="dest">Väri jolla korvataan.</param>
            <param name="tolerance">Kuinka paljon korvattava väri voi poiketa annetusta.</param>
            <param name="blend">Sävytetäänkö korvattavaa väriä sen mukaan kuinka kaukana se on alkuperäisestä väristä</param>
            <param name="blendAlpha">Vaaditaanko täsmälleen sama läpinäkyvyys ennen kuin korvataan</param>
        </member>
        <member name="M:Jypeli.Image.ReplaceColor(Jypeli.Color,Jypeli.Color)">
            <summary>
            Korvaa värin toisella värillä.
            </summary>
            <param name="src">Korvattava väri</param>
            <param name="dest">Väri jolla korvataan</param>
        </member>
        <member name="M:Jypeli.Image.AsJpeg">
            <summary>
            Palauttaa kuvan jpeg-muodossa, jossa se voidaan esimerkiksi tallentaa
            DataStorage.Export -metodilla.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Image.AsPng">
            <summary>
            Palauttaa kuvan png-muodossa, jossa se voidaan esimerkiksi tallentaa
            DataStorage.Export -metodilla.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Jypeli.Image.Width">
            <summary>
            Leveys pikseleinä.
            </summary>
        </member>
        <member name="P:Jypeli.Image.Height">
            <summary>
            Korkeus pikseleinä.
            </summary>
        </member>
        <member name="P:Jypeli.Image.Name">
            <summary>
            Nimi.
            </summary>
        </member>
        <member name="T:Jypeli.ImageBatch">
            <summary>
            Draws images efficiently.
            Draw() calls should be made only between Begin() and End() calls.
            Other drawing operations can be done between Begin() and
            End().
            </summary>
            <remarks>
            The positions of images are added to a buffer. Only when
            the buffer is full, a draw call is made to the graphics device.
            </remarks>
        </member>
        <member name="T:Jypeli.Renderer">
            <summary>
            Luokka, joka sisältää metodeita kuvioiden ja tekstuurien piirtämiseen 2D-tasossa.
            </summary>
            <remarks>
            Toteutus on yksinkertainen ja siten hidas. Jos on paljon samankaltaisia piirrettäviä
            kohteita, niin käytä mielummin Batch-luokkia.
            </remarks>
        </member>
        <member name="F:Jypeli.Renderer.textureVertices">
            <summary>
            Vertices that form a rectangle on which to draw textures.
            </summary>
        </member>
        <member name="F:Jypeli.Renderer.textureTriangleIndices">
            <summary>
            Indices that form two triangles from the vertex array.
            </summary>
        </member>
        <member name="M:Jypeli.Renderer.BeginDrawingInsideShape(Jypeli.Shape,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Makes all the subsequent draw calls until <c>EndDrawingInsideShape</c> limit the
            drawing inside <c>shape</c> (transformed by the matrix).
            </summary>
            <remarks>
            The draw calls between Begin and End must not change the DepthStencilState of the graphics device.
            If drawing is done with a sprite batch, the <c>spritebatch.Begin</c> call must be given the
            DepthStencilState that can be obtained from <c>currentStencilState</c> variable.
            </remarks>
        </member>
        <member name="M:Jypeli.Renderer.DrawText(System.String,Microsoft.Xna.Framework.Matrix@,Jypeli.Font,Jypeli.Color)">
            <summary>
            Piirtää tekstiä ruudulle. Varoitus: käyttää XNA:n ruutukoordinaatistoa, jossa
            origo on vasemmassa yläreunassa ja y-akseli kasvaa alaspäin!
            </summary>
            <param name="text">Teksti</param>
            <param name="transformation">Transformaatio</param>
            <param name="font">Fontti</param>
            <param name="color">Tekstin väri</param>
        </member>
        <member name="M:Jypeli.Renderer.DrawShape(Jypeli.Shape,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Jypeli.Image,Jypeli.Vector,Jypeli.Color)">
            <summary>
            Piirtää kuvion niin, että tekstuuri täyttää sen.
            </summary>
        </member>
        <member name="M:Jypeli.Renderer.DrawRectangle(Microsoft.Xna.Framework.Matrix@,Jypeli.Color)">
            <summary>
            Piirtää suorakulmion.
            </summary>
        </member>
        <member name="T:Jypeli.ShapeBatch">
            <summary>
            Draws simple shapes efficiently.
            Draw() calls should be made only between Begin() and End() calls.
            Other drawing operations can be done between Begin() and
            End().
            </summary>
            <remarks>
            The shapes are added to a buffer. Only when
            the buffer is full, a draw call is made to the graphics device.
            </remarks>
        </member>
        <member name="F:Jypeli.ShapeBatch.indexBuffer">
            <summary>
            Buffer for index values to the vertex buffer.
            </summary>
            <remarks>
            Since some low-end graphics cards don't support 32-bit indices,
            16-bit indices must be used. Which is fine, as it means less traffic
            to the graphics card. We just have to make sure that the buffer size
            isn't larger than 16000.
            </remarks>
        </member>
        <member name="T:Jypeli.AxleJoint">
            <summary>
            Saranaliitos kahden olion välille.
            </summary>
        </member>
        <member name="M:Jypeli.AxleJoint.#ctor(Jypeli.PhysicsObject)">
            <summary>
            Kiinnittää olion akselilla pelikenttään.
            </summary>
            <param name="obj">Olio</param>
        </member>
        <member name="M:Jypeli.AxleJoint.#ctor(Jypeli.PhysicsObject,Jypeli.Vector)">
            <summary>
            Luo uuden akseliliitoksen olion ja pisteen välille.
            </summary>
            <param name="obj">Ensimmäinen olio</param>
            <param name="axlePosition">Liitoksen akselin paikka</param>
        </member>
        <member name="M:Jypeli.AxleJoint.#ctor(Jypeli.PhysicsObject,Jypeli.PhysicsObject,Jypeli.Vector)">
            <summary>
            Luo uuden akseliliitoksen kahden olion välille.
            </summary>
            <param name="firstObject">Ensimmäinen olio</param>
            <param name="secondObject">Toinen olio</param>
            <param name="axlePosition">Liitoksen akselin paikka</param>
        </member>
        <member name="M:Jypeli.AxleJoint.#ctor(Jypeli.PhysicsObject,Jypeli.PhysicsObject)">
            <summary>
            Luo uuden akseliliitoksen kahden olion välille.
            Liitos sijoitetaan toisen olion keskipisteeseen.
            </summary>
            <param name="firstObject">Ensimmäinen olio</param>
            <param name="secondObject">Toinen olio</param>
        </member>
        <member name="M:Jypeli.AxleJoint.Destroy">
            <summary>
            Tuhoaa liitoksen.
            </summary>
        </member>
        <member name="P:Jypeli.AxleJoint.Object1">
            <summary>
            Ensimmäinen olio.
            </summary>
        </member>
        <member name="P:Jypeli.AxleJoint.Object2">
            <summary>
            Toinen olio (null jos ensimmäinen olio on sidottu pisteeseen)
            </summary>
        </member>
        <member name="P:Jypeli.AxleJoint.AxlePoint">
            <summary>
            Pyörimisakselin (tämänhetkiset) koordinaatit.
            </summary>
        </member>
        <member name="P:Jypeli.AxleJoint.Softness">
            <summary>
            Liitoksen pehmeys eli kuinka paljon sillä on liikkumavaraa.
            </summary>
        </member>
        <member name="P:Jypeli.AxleJoint.IsDestroyed">
            <summary>
            Onko liitos tuhottu.
            </summary>
        </member>
        <member name="E:Jypeli.AxleJoint.Destroyed">
            <summary>
            Tapahtuu kun liitos on tuhottu.
            </summary>
        </member>
        <member name="T:Jypeli.TileMap">
            <summary>
            Ruutukartta, jonka avulla olioita voidaan helposti asettaa tasavälein ruudukkoon.
            Ruutukartta koostuu kirjoitusmerkeistä (<c>char</c>), joihin voi liittää
            aliohjelman, joka luo merkkiä vastaavan olion.
            </summary>
        </member>
        <member name="M:Jypeli.TileMap.#ctor(System.Char[0:,0:])">
            <summary>
            Luo uuden ruutukartan.
            </summary>
            <param name="tiles">Kaksiulotteinen taulukko merkeistä.</param>
        </member>
        <member name="M:Jypeli.TileMap.FromFile(System.String)">
            <summary>
            Lukee ruutukentän tiedostosta.
            </summary>
            <param name="path">Tiedoston polku.</param>
        </member>
        <member name="M:Jypeli.TileMap.FromStringArray(System.String[])">
            <summary>
            Lukee ruutukentän merkkijonotaulukosta.
            </summary>
            <param name="lines">Merkkijonotaulukko</param>        
        </member>
        <member name="M:Jypeli.TileMap.FromLevelAsset(System.String)">
            <summary>
            Lukee ruutukentän Content-projektin tekstitiedostosta.
            </summary>
            <param name="assetName">Tiedoston nimi</param>        
        </member>
        <member name="M:Jypeli.TileMap.Insert">
            <summary>
            Asettaa oliot kenttään aiemmin annettujen merkkien perusteella.
            </summary>
        </member>
        <member name="M:Jypeli.TileMap.Insert(System.Double,System.Double)">
            <summary>
            Asettaa oliot kenttään aiemmin annettujen merkkien perusteella.
            </summary>
            <remarks>
            Huom! Tiilien asettaminen muuttaa kentän kokoa. Jos lisäät kenttään reunat
            tai zoomaat kameraa, tee se vasta tämän aliohjelman kutsun jälkeen.
            </remarks>
            <param name="tileWidth">Ruudun leveys.</param>
            <param name="tileHeight">Ruudun korkeus.</param>
        </member>
        <member name="M:Jypeli.TileMap.ReadFromFile(System.String)">
            <summary>
            Lukee kentän ruudut tiedostosta.
            </summary>
            <param name="path">Tiedoston polku</param>
            <returns>Kentän ruudut kaksiulotteisessa taulukossa</returns>
        </member>
        <member name="P:Jypeli.TileMap.Item(System.Char)">
            <summary>
            Asettaa merkin vastaamaan aliohjelmaa, joka luo olion. Huom! Käytä tämän
            syntaksin kanssa metodia <c>Insert</c>.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.DataTypes.LinkedList2`1">
            <summary>
            Custom linked list that allows more liberal insertion of nodes
            unlike the one provided by .net framework 4.5
            </summary>
        </member>
        <member name="T:Jypeli.MediaPlayer">
            <summary>
            Mediasoitin, jolla voi soittaa musiikkikappaleita.
            </summary>
        </member>
        <member name="M:Jypeli.MediaPlayer.Play(System.String)">
            <summary>
            Soittaa kappaleen.
            </summary>
            <param name="songName">Kappaleen nimi.</param>
        </member>
        <member name="M:Jypeli.MediaPlayer.PlayFromFile(System.String)">
            <summary>
            Soittaa kappaleen tiedostosta.
            </summary>
            <param name="fileName">Tiedoston nimi.</param>
        </member>
        <member name="M:Jypeli.MediaPlayer.PlayFromURL(System.String)">
            <summary>
            Soittaa kappaleen nettiosoitteesta.
            </summary>
            <param name="url">Nettiosoite (URL).</param>
        </member>
        <member name="M:Jypeli.MediaPlayer.Pause">
            <summary>
            Pysäyttää soiton.
            </summary>
        </member>
        <member name="M:Jypeli.MediaPlayer.Resume">
            <summary>
            Jatkaa pysäytettyä kappaletta.
            </summary>
        </member>
        <member name="M:Jypeli.MediaPlayer.Stop">
            <summary>
            Keskeyttää soiton.
            </summary>
        </member>
        <member name="P:Jypeli.MediaPlayer.Volume">
            <summary>
            Äänenvoimakkuus välillä 0.0 - 1.0.
            </summary>
        </member>
        <member name="P:Jypeli.MediaPlayer.IsMuted">
            <summary>
            Onko mediasoitin hiljaisella vai ei.
            </summary>
        </member>
        <member name="P:Jypeli.MediaPlayer.IsRepeating">
            <summary>
            Toistetaanko kappaleita alusta.
            </summary>
        </member>
        <member name="P:Jypeli.MediaPlayer.IsPlaying">
            <summary>
            Soitetaanko tällä hetkellä mitään.
            </summary>
        </member>
        <member name="M:Jypeli.FileManager.ChDir(System.String)">
            <summary>
            Vaihtaa nykyistä hakemistoa.
            </summary>
            <param name="path">Hakemistopolku</param>
            <returns>Vaihdettiinko hakemistoa</returns>
        </member>
        <member name="M:Jypeli.FileManager.MkDir(System.String)">
            <summary>
            Luo uuden hakemiston.
            </summary>
            <param name="path">Luotavan hakemiston nimi.</param>
        </member>
        <member name="M:Jypeli.FileManager.RmDir(System.String)">
            <summary>
            Poistaa hakemiston.
            </summary>
            <param name="path">Poistettavan hakemiston nimi.</param>
        </member>
        <member name="M:Jypeli.FileManager.PushDir(System.String)">
            <summary>
            Vaihtaa työhakemistoa jättäen edellisen hakemiston muistiin.
            Kutsu PopDir kun haluat palauttaa työhakemiston edelliseen arvoonsa.
            </summary>
            <param name="dir"></param>
        </member>
        <member name="M:Jypeli.FileManager.PopDir">
            <summary>
            Palauttaa edellisen työhakemiston.
            Jos edellistä työhakemistoa ei ole tallennettu, säilytetään nykyinen.
            </summary>
        </member>
        <member name="M:Jypeli.FileManager.DoWith(System.String,System.Action{Jypeli.StorageFile})">
            <summary>
            Avaa tiedoston (lukua varten) ja tekee sillä jotain.
            </summary>
            <param name="fileName">Tiedoston nimi</param>
            <param name="callback">Mitä tehdään (aliohjelman nimi)</param>
            <example>
            {
               DoWith( "kuva.png", AsetaKuva );
            }
            
            void AsetaKuva( StorageFile kuva )
            {
               olio.Image = new Image( kuva );
            }
            </example>
        </member>
        <member name="M:Jypeli.FileManager.DoWithURL(System.String,System.Action{Jypeli.StorageFile})">
            <summary>
            Avaa tiedoston netistä (lukua varten) ja tekee sillä jotain.
            </summary>
            <param name="url">Nettiosoite</param>
            <param name="callback">Mitä tehdään (aliohjelman nimi)</param>
            <example>
            {
               DoWith( "http://www.google.fi/images/srpr/logo3w.png", AsetaKuva );
            }
            
            void AsetaKuva( StorageFile kuva )
            {
               olio.Image = new Image( kuva );
            }
            </example>
        </member>
        <member name="M:Jypeli.FileManager.DoWithURL(System.String,System.TimeSpan,System.Action{Jypeli.StorageFile})">
            <summary>
            Avaa tiedoston netistä (lukua varten) ja tekee sillä jotain.
            </summary>
            <param name="url">Nettiosoite</param>
            <param name="callback">Mitä tehdään (aliohjelman nimi)</param>
            <example>
            {
               DoWith( "http://www.google.fi/images/srpr/logo3w.png", AsetaKuva );
            }
            
            void AsetaKuva( StorageFile kuva )
            {
               olio.Image = new Image( kuva );
            }
            </example>
        </member>
        <member name="M:Jypeli.FileManager.TriggerOnComplete(System.Action,Jypeli.FileManager.AsyncOperation[])">
            <summary>
            Laukaisee aliohjelman kun annetut operaatiot on suoritettu.
            </summary>
            <param name="callback">Aliohjelma</param>
            <param name="actions">Operaatiot</param>
        </member>
        <member name="M:Jypeli.FileManager.TriggerOnComplete(System.Action,System.TimeSpan,Jypeli.FileManager.AsyncOperation[])">
            <summary>
            Laukaisee aliohjelman kun annetut operaatiot on suoritettu.
            </summary>
            <param name="callback">Aliohjelma</param>
            <param name="timeout">Kuinka pitkään odotetaan yksittäistä operaatiota ennen kuin luovutetaan</param>
            <param name="actions">Operaatiot</param>
        </member>
        <member name="M:Jypeli.FileManager.Export(System.IO.Stream,System.String)">
            <summary>
            Vie virran sisällön tiedostoon.
            </summary>
            <param name="objStream">Virta</param>
            <param name="fileName">Tiedoston nimi</param>
        </member>
        <member name="P:Jypeli.FileManager.CurrentDirectory">
            <summary>
            Nykyinen työhakemisto.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.Background">
            <summary>
            Taustakuva
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Background.FitToLevel">
            <summary>
            Sovittaa taustakuvan kentän kokoiseksi.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Background.TileToLevel">
            <summary>
            Toistaa kuvaa vaaka- ja pystysuunnassa niin että kuvio peittää koko kentän.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Background.ScaleToLevel">
            <summary>
            Sovittaa taustakuvan kentän kokoiseksi pitäen kuvasuhteen.
            Kuva sovitetaan niin, että se ei ylitä kentän rajoja.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Background.ScaleToLevelFull">
            <summary>
            Sovittaa taustakuvan kentän kokoiseksi pitäen kuvasuhteen.
            Kuva sovitetaan niin, että se täyttää koko kentän ja osa rajautuu kentän ulkopuolelle.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Background.ScaleToLevelByWidth">
            <summary>
            Sovittaa taustakuvan kentän kokoiseksi pitäen kuvasuhteen.
            Kuva sovitetaan niin, että se täyttää kentän vaakasuunnassa.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Background.ScaleToLevelByHeight">
            <summary>
            Sovittaa taustakuvan kentän kokoiseksi pitäen kuvasuhteen.
            Kuva sovitetaan niin, että se täyttää kentän pystysuunnassa.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Background.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden taustakuvan.
            </summary>
            <param name="width">Taustakuvan leveys.</param>
            /// <param name="height">Taustakuvan korkeus.</param>
        </member>
        <member name="M:Jypeli.Widgets.Background.#ctor(Jypeli.Vector)">
            <summary>
            Luo uuden taustakuvan.
            </summary>
            <param name="size">Taustakuvan koko.</param>
        </member>
        <member name="M:Jypeli.Widgets.Background.CreateStars(System.Int32)">
            <summary>
            Luo avaruustaustakuvan.
            </summary>
            <param name="amount">Tähtien määrä.</param>
            <returns>Kuva.</returns>
        </member>
        <member name="M:Jypeli.Widgets.Background.CreateStars">
            <summary>
            Luo avaruustaustakuvan.
            </summary>
            <returns>Kuva.</returns>
        </member>
        <member name="M:Jypeli.Widgets.Background.CreateGradient(Jypeli.Color,Jypeli.Color)">
            <summary>
            Luo liukuväritaustan taustakuvaksi.
            </summary>
            <param name="lowerColor">Alempi väri.</param>
            <param name="upperColor">Ylempi väri.</param>
            <returns>Kuva.</returns>
        </member>
        <member name="P:Jypeli.Widgets.Background.MovesWithCamera">
            <summary>
            Liikkuuko taustakuva kameran mukana vai ei.
            </summary>
            <value><c>true</c> jos liikkuu; muuten <c>false</c>.</value>
        </member>
        <member name="P:Jypeli.Widgets.Background.Scale">
            <summary>
            Taustakuvan skaala.
            <example>
            Jos halutaan kaksinkertainen kuva, niin laitetaan skaalaksi 2, puolet pienemmän kuvan skaala on vastaavasti 0.5.
            </example>
            </summary>
            <value>The scale.</value>
        </member>
        <member name="T:Jypeli.Widgets.BarGauge">
            <summary>
            Palkki, jonka korkeutta voi säätää.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.BarGauge.#ctor(System.Double,System.Double)">
            <summary>
            Palkin rakentaja.
            </summary>
            <param name="width">Palkin leveys</param>
            <param name="height">Palkin korkeus</param>
        </member>
        <member name="M:Jypeli.Widgets.BarGauge.#ctor(System.Double,System.Double,Jypeli.Meter)">
            <summary>
            Palkin rakentaja. Sitoo palkin arvon mittarin arvoon.
            </summary>
            <param name="width">Palkin leveys</param>
            <param name="height">Palkin korkeus</param>
            <param name="meter">Mittari</param>
        </member>
        <member name="M:Jypeli.Widgets.BarGauge.BindTo(Jypeli.Meter)">
            <summary>
            Asettaa palkin näyttämään <c>meter</c>-olion arvoa.
            Palkin maksimiarvoksi tulee olion <c>meter</c> maksimiarvo.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.BarGauge.Direction">
            <summary>
            Liun suunta pystyyn vai vaakaan ja mihin suuntaa.
            Älä käytä yhdessä Anglen kanssa.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.BarGauge.BarColor">
            <summary>
            Palkin väri.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.BarGauge.BarDirection">
            <summary>
            Mihin suuntaa liut piirretään
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.BarGauge.BarDirection.BarVerticalUp">
            <summary>
            Liuku liikuu pystysuuntaan ylös
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.BarGauge.BarDirection.BarHorizontalRight">
            <summary>
            Liuku liikkuu vaakasuuntaan oikealle
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.BarGauge.BarDirection.BarVerticalDown">
            <summary>
            Liuku liikuu pystysuuntaan alas
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.BarGauge.BarDirection.BarHorizontalLeft">
            <summary>
            Liuku liikkuu vaakasuuntaan vasemmalle
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.BindableWidget">
            <summary>
            Widget, joka voidaan asettaa näyttämään halutun mittarin arvoa.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.#ctor(Jypeli.Animation)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="animation"></param>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.#ctor(System.Double,System.Double,Jypeli.Shape)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.#ctor(Jypeli.ILayout)">
            <summary>
            Alustaa widgetin.
            </summary>
            <param name="layout"></param>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.SetChangedEvent">
            <summary>
            Asettaa tapahtuman, joka reagoi Meter.Value muutokseen kutsumalla UpdateValue-metodia.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.UnsetChangedEvent">
            <summary>
            Poistaa käytöstä tapahtuman, joka reagoi Meter.Value muutokseen kutsumalla UpdateValue-metodia.
            Käytä tätä, kun haluat asettaa mittarin arvon kontrollin sisällä.
            Älä unohda kutsua SetChangedEvent muutoksen jälkeen!
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.BindTo(Jypeli.Meter)">
            <summary>
            Asettaa kontrollin seuraamaan mittarin arvoa.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.Unbind">
            <summary>
            Lopettaa mittarin arvon seuraamisen.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.BindableWidget.UpdateValue">
            <summary>
            Kutsutaan automaattisesti, kun mittarin arvo on muuttunut.
            Ylikirjoita tämä koodilla, joka muuttaa widgetin ulkonäköä asianmukaisesti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.BindableWidget.Meter">
            <summary>
            Mittari, jonka arvoa kontrolli seuraa.
            Jos kontrollia ei ole kiinnitetty mittariin, se käyttää omaa sisäistä mittariaan.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.BindableWidget.Bound">
            <summary>
            Onko komponentti sidottu mittariin.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.Window">
            <summary>
            Ikkuna.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Window.#ctor">
            <summary>
            Alustaa uuden ikkunan.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Window.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden ikkunan.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
        </member>
        <member name="M:Jypeli.Widgets.Window.GetMaximumSize">
            <summary>
            Ikkunalla maksimikoko on siten, että se mahtuu näytölle.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Window.Close">
            <summary>
            Sulkee ikkunan.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Window.Color">
            <summary>
            Ikkunan väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Window.ActiveColor">
            <summary>
            Ikkunan väri, kun ikkuna on aktiivinen.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Window.InactiveColor">
            <summary>
            Ikkunan väri, kun ikkuna ei ole aktiivinen.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.Window.Closed">
            <summary>
            Tapahtuu kun ikkuna suljetaan.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.Window.WindowHandler">
            <summary>
            Ikkunatapahtumien käsittelijä.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.CustomQueryWindow`1.#ctor(System.String)">
            <summary>
            Alustaa uuden kyselyikkunan.
            </summary>
            <param name="message">Viesti tai kysymys</param>
        </member>
        <member name="M:Jypeli.Widgets.CustomQueryWindow`1.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Alustaa uuden kyselyikkunan kiinteän kokoiseksi.
            </summary>
            <param name="width">Ikkunan leveys</param>
            <param name="height">Ikkunan korkeus</param>
            <param name="message">Viesti tai kysymys</param>
        </member>
        <member name="P:Jypeli.Widgets.CustomQueryWindow`1.Message">
            <summary>
            Viesti tai kysymys.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.CustomQueryWindow`1.QueryWidget">
            <summary>
            Kysymyskomponentti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.CustomQueryWindow`1.OKButton">
            <summary>
            OK-painike
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.EasyHighScore">
            <summary>
            Helpompikäyttöinen parhaiden pisteiden lista.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.EasyHighScore.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan.
            </summary>
            <param name="fileName">Tiedoston nimi</param>
            <param name="places">Pistesijojen lukumäärä</param>
            <param name="defaultName">Oletusnimi tyhjille paikoille.</param>
        </member>
        <member name="M:Jypeli.Widgets.EasyHighScore.#ctor(System.String,System.Int32)">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan.
            </summary>
            <param name="fileName">Tiedoston nimi</param>
            <param name="places">Pistesijojen lukumäärä</param>
        </member>
        <member name="M:Jypeli.Widgets.EasyHighScore.#ctor(System.Int32)">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan.
            </summary>
            <param name="places">Pistesijojen lukumäärä</param>
        </member>
        <member name="M:Jypeli.Widgets.EasyHighScore.#ctor">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan kymmenellä pistesijalla.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.EasyHighScore.Show">
            <summary>
            Näyttää parhaat pisteet.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.EasyHighScore.Clear">
            <summary>
            Tyhjentää parhaat pisteet.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.EasyHighScore.EnterAndShow(System.Double)">
            <summary>
            Näyttää parhaat pisteet, ja jos annetut pisteet riittävät, antaa syöttää nimen listalle.
            Lista tallennetaan automaattisesti.
            </summary>
            <param name="newScore"></param>
        </member>
        <member name="P:Jypeli.Widgets.EasyHighScore.HighScoreWindow">
            <summary>
            Listaikkuna.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.EasyHighScore.NameInputWindow">
            <summary>
            Nimensyöttöikkuna.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.EasyHighScore.MaxNameLength">
            <summary>
            Pisin sallittu nimen pituus.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.EasyHighScore.Text">
            <summary>
            Pisteikkunan teksti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.EasyHighScore.EnterText">
            <summary>
            Nimensyöttöikkunan teksti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.EasyHighScore.Color">
            <summary>
            Listaikkunan väri.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.HighScoreWindow">
            <summary>
            Parhaiden pisteiden ikkuna.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.HighScoreWindow.#ctor(System.String,Jypeli.ScoreList)">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan.
            </summary>
            <param name="message">Viesti</param>
            <param name="list">Lista</param>
        </member>
        <member name="M:Jypeli.Widgets.HighScoreWindow.#ctor(System.Double,System.Double,System.String,Jypeli.ScoreList)">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan.
            </summary>
            <param name="width">Leveys</param>
            <param name="height">Korkeus</param>
            <param name="message">Viesti</param>
            <param name="list">Lista</param>
        </member>
        <member name="M:Jypeli.Widgets.HighScoreWindow.#ctor(System.String,System.String,Jypeli.ScoreList,System.Double)">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan.
            Tämä versio antaa pelaajan kirjoittaa nimensä listalle jos tulos
            on tarpeeksi hyvä.
            </summary>
            <param name="normalMessage">Normaalisti näytettävä viesti</param>
            <param name="nameMessage">Viesti joka näytetään kun pelaaja pääsee listalle</param>
            <param name="list">Lista</param>
            <param name="newScore">Viimeisimmän pelin pistemäärä</param>
        </member>
        <member name="M:Jypeli.Widgets.HighScoreWindow.#ctor(System.Double,System.Double,System.String,System.String,Jypeli.ScoreList,System.Double)">
            <summary>
            Luo uuden parhaiden pisteiden ikkunan.
            Tämä versio antaa pelaajan kirjoittaa nimensä listalle jos tulos
            on tarpeeksi hyvä.
            </summary>
            <param name="width">Leveys</param>
            <param name="height">Korkeus</param>
            <param name="normalMessage">Normaalisti näytettävä viesti</param>
            <param name="nameMessage">Viesti joka näytetään kun pelaaja pääsee listalle</param>
            <param name="list">Lista</param>
            <param name="newScore">Viimeisimmän pelin pistemäärä</param>
        </member>
        <member name="M:Jypeli.Widgets.HighScoreWindow.ShowNameInput(System.Double)">
            <summary>
            Näyttää nimensyöttöikkunan.
            </summary>
            <param name="newScore"></param>
        </member>
        <member name="P:Jypeli.Widgets.HighScoreWindow.Message">
            <summary>
            Viesti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.HighScoreWindow.NameInputWindow">
            <summary>
            Nimensyöttöikkuna.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.HighScoreWindow.List">
            <summary>
            Listakomponentti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.HighScoreWindow.MaxNameLength">
            <summary>
            Pisin mahdollinen nimi, jonka listaan voi syöttää.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.InputBox">
            <summary>
            Laatikko, johon käyttäjä voi syöttää tekstiä.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.Label">
            <summary>
            Tekstikenttä.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Label.#ctor">
            <summary>
            Luo uuden tekstikentän. Asettaa
            koon tekstin mukaan.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Label.#ctor(System.String)">
            <summary>
            Luo uuden tekstikentän annetulla tekstillä. Asettaa
            koon tekstin mukaan.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Label.#ctor(Jypeli.Meter)">
            <summary>
            Lue uuden tekstikentän ja sitoo sen mittarin arvoon.
            </summary>
            <param name="meter">Mittari</param>
        </member>
        <member name="M:Jypeli.Widgets.Label.#ctor(Jypeli.Animation)">
            <summary>
            Luo uuden tekstikentän animaatiolla.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Label.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden tekstikentän.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
        </member>
        <member name="M:Jypeli.Widgets.Label.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Luo uuden tekstikentän.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
            <param name="text">Teksti.</param>
        </member>
        <member name="M:Jypeli.Widgets.Label.updateSize">
            <summary>
            Päivittää tekstikentän/tekstin koon ja rivittää tekstin.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.Text">
            <summary>
            Teksti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.IsTruncated">
            <summary>
            Onko tekstiä katkaistu
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.TextScale">
            <summary>
            Tekstin skaalaus. Oletus (1,1) ; isompi suurempi.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.DecimalPlaces">
            <summary>
            Kuinka monta desimaalia näytetään, kun tekstikenttä on
            sidottu näyttämään desimaalilukua.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.DoubleFormatString">
            <summary>
            Millä tavalla desimaalinumerot muotoillaan
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.IntFormatString">
            <summary>
            Millä tavalla int numerot muotoillaan.
            </summary>
            <example>
              "{0:D3}" näyttää numeron 5 muodossa 005.
              teksti = "Laskuri:"; naytto.IntFormatString = " " + teksti + " {0:D2} ";  
                    näyttää numeron 5 muodossa " Laskuri: 05 "; // huomaa vielä tyhjää ympärillä
            </example>
        </member>
        <member name="P:Jypeli.Widgets.Label.Title">
            <summary>
            Voidaan käyttää tekstin helpompaan asettamiseen.
            Asettaa IntFormatStringin ja DoubleFormatStringin.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.SizeMode">
            <summary>
            Kuinka tekstikentän koko määräytyy.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.TextSize">
            <summary>
            Näytettävän tekstin koko.
            Ei välttämättä sama kuin <c>Size</c>.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.TextColor">
            <summary>
            Tekstin väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.Font">
            <summary>
            Tekstin fontti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.HorizontalAlignment">
            <summary>
            Tekstin sijoitus vaakasuunnassa.
            Vaikuttaa vain, jos tekstikentän koko on suurempi kuin tekstin koko
            ja <c>SizeMode</c> ei ole <c>SizeMode.AutoSize</c>.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.VerticalAlignment">
            <summary>
            Tekstin sijoitus pystysuunnassa.
            Vaikuttaa vain, jos tekstikentän koko on suurempi kuin tekstin koko
            ja <c>SizeMode</c> ei ole <c>SizeMode.AutoSize</c>.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.XMargin">
            <summary>
            Marginaali vasemmasta/oikeasta reunasta.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.YMargin">
            <summary>
            Marginaali ylä-/alareunasta.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Label.Size">
            <summary>
            Tekstikentän koko.
            Jos SizeMode on SizeMode.StretchText, teksti
            venytetään kentän koon mukaiseksi.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.InputBox.#ctor(System.Int32)">
            <summary>
            Alustaa uuden syöttökentän.
            </summary>
            <param name="characters">
            Kentän leveys merkkeinä. Tämä ei rajoita kirjoitettavan tekstin pituutta.
            <see cref="P:Jypeli.Widgets.InputBox.MaxCharacters"/>
            </param>
        </member>
        <member name="M:Jypeli.Widgets.InputBox.#ctor">
            <summary>
            Alustaa uuden syöttökentän.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.InputBox.WidthInCharacters">
            <summary>
            Tekstilaatikon pituus kirjaimissa.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.InputBox.MaxCharacters">
            <summary>
            Suurin määrä merkkejä joita tekstilaatikkoon voi kirjoittaa.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.InputBox.Cursor">
            <summary>
            Kursori.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.InputBox.TextChanged">
            <summary>
            Tapahtuma tekstin muuttumiselle.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.InputWindow">
            <summary>
            Ikkuna, joka sisältää käyttäjän määrittelemän kysymyksen, tekstinsyöttökentän ja
            OK-painikkeen. Ikkunan koko määräytyy automaattisesti tekstin ja ruudun koon mukaan.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.InputWindow.#ctor(System.String)">
            <summary>
            Alustaa uuden tekstinkyselyikkunan.
            </summary>
            <param name="question">Kysymys</param>
        </member>
        <member name="M:Jypeli.Widgets.InputWindow.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Alustaa uuden tekstinkyselyikkunan.
            </summary>
            <param name="width">Ikkunan leveys</param>
            <param name="height">Ikkunan korkeus</param>
            <param name="question">Kysymys</param>
        </member>
        <member name="P:Jypeli.Widgets.InputWindow.MaxCharacters">
            <summary>
            Suurin määrä merkkejä joita tekstilaatikkoon voi kirjoittaa.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.InputWindow.InputBox">
            <summary>
            Vastauslaatikko.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.InputWindow.ShowWindowOnPhone">
            <summary>
            Näytetäänkö ikkuna puhelimella. Oletuksena false, jolloin näytetään vain
            puhelimen oma tekstinsyöttöikkuna.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.InputWindow.TextEntered">
            <summary>
            Tapahtuu kun käyttäjä on syöttänyt tekstin ja painanut OK / sulkenut ikkunan.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.InputWindow.InputWindowHandler">
            <summary>
            Syöttöikkunatapahtumien käsittelijä.
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.TextSizeMode.None">
            <summary>
            Tekstikentän koko on käyttäjän asettama.
            Ylipitkä teksti katkaistaan.
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.TextSizeMode.AutoSize">
            <summary>
            Tekstikentän koko asetetaan tekstin koon mukaan.
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.TextSizeMode.StretchText">
            <summary>
            Tekstin koko asetetaan tekstikentän koon mukaan.
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.TextSizeMode.Wrapped">
            <summary>
            Teksti rivitetään tekstikentän leveyden mukaan.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.ListWidget`2">
            <summary>
            Listakomponentti. Voidaan liittää listaan, joka
            toteuttaa <c>INotifyList</c>-rajapinnan. Tällöin
            listaan tehdyt muutokset päivittyvät komponenttiin.
            Listaa voi vierittää, jos kaikki rivit eivät mahdu
            kerralla sen sisälle.
            </summary>
            <typeparam name="T">Listan alkion tyyppi.</typeparam>
            <typeparam name="O">Listan riviä esittävän olion tyyppi.</typeparam>
        </member>
        <member name="M:Jypeli.Widgets.ListWidget`2.CreateWidget(`0)">
            <summary>
            Luo annettua alkiota vastaavan listan rivin.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.ListWidget`2.Bind(Jypeli.INotifyList{`0})">
            <summary>
            Sitoo olemassaolevan listan tähän näyttöön.
            Kun listaa muutetaan, näytetyt arvot päivittyvät automaattisesti.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.ListWidget`2.Unbind">
            <summary>
            Poistaa yhteyden olemassaolevaan listaan.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.ListWidget`2.Items">
            <summary>
            Listan alkiot.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.MessageDisplay.#ctor">
            <summary>
            Luo uuden viestinäytön.
            </summary>
            <param name="font">Fontti.</param>
        </member>
        <member name="M:Jypeli.Widgets.MessageDisplay.Add(System.String)">
            <summary>
            Lisää uuden viestin näkymään.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.MessageDisplay.Add(System.String,Jypeli.Color)">
            <summary>
            Lisää uuden viestin näkymään.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.MessageDisplay.Clear">
            <summary>
            Poistaa kaikki lisätyt viestit.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MessageDisplay.MaxMessageCount">
            <summary>
            Kuinka monta viestiä kerrallaan näytetään.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MessageDisplay.MessageTime">
            <summary>
            Kuinka pitkään yksi viesti näkyy.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MessageDisplay.Font">
            <summary>
            Käytettävä fontti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MessageDisplay.TextColor">
            <summary>
            Tekstin väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MessageDisplay.BackgroundColor">
            <summary>
            Tekstin taustaväri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MessageDisplay.RealTime">
            <summary>
            Onko näyttö reaaliaikainen (oletuksena ei)
            Jos on, vanhin viesti poistetaan heti jos viestien maksimimäärä
            tulee täyteen. Jos ei, viesti jää jonoon odottamaan kunnes
            vanhimman viestin näyttöaika tulee täyteen.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.MessageWindow">
            <summary>
            Ikkuna, joka sisältää käyttäjän määrittelemän viestin ja OK-painikkeen.
            Ikkunan koko määräytyy automaattisesti tekstin ja ruudun koon mukaan.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.MessageWindow.#ctor(System.String)">
            <summary>
            Alustaa uuden viesti-ikkunan.
            </summary>
            <param name="question">Kysymys</param>
        </member>
        <member name="P:Jypeli.Widgets.MessageWindow.Message">
            <summary>
            Viesti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MessageWindow.OKButton">
            <summary>
            OK-painike
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.MultiSelectWindow">
            <summary>
            Ikkuna, joka antaa käyttäjän valita yhden annetuista vaihtoehdoista.
            </summary>
        </member>
        <member name="F:Jypeli.Widgets.MultiSelectWindow.QuestionLabel">
            <summary>
            Kysymys.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.MultiSelectWindow.#ctor(System.String,System.String[])">
            <summary>
            Luo uuden monivalintaikkunan.
            </summary>
            <param name="question">Kysymys.</param>
            <param name="buttonTexts">Nappien tekstit merkkijonoina.</param>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.Buttons">
            <summary>
            Painonappulat järjestyksessä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.Font">
            <summary>
            Fontti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.DefaultCancel">
            <summary>
            Mitä valitaan kun käyttäjä painaa esc tai takaisin-näppäintä.
            Laittomalla arvolla (esim. negatiivinen) em. näppäimistä ei tapahdu mitään.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.SelectedIndex">
            <summary>
            Kuinka mones nappula on valittuna (alkaa nollasta)
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.SelectedButton">
            <summary>
            Valittu nappula.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.Color">
            <summary>
            Nappulan oletusväri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.SelectionColor">
            <summary>
            Valitun nappulan väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.MultiSelectWindow.RememberSelection">
            <summary>
            Muistetaanko missä kohtaa kursori oli viime kerralla kun ikkuna näytettiin.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.MultiSelectWindow.ItemSelected">
            <summary>
            Tapahtuma joka tapahtuu kun nappia painetaan.
            Ottaa parametrikseen painonapin indeksin (alkaen nollasta).
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.ProgressBar">
            <summary>
            Palkki, jolla voidaan ilmaista mittarin arvoa graafisesti.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.ProgressBar.#ctor(System.Double,System.Double)">
            <summary>
            Palkin rakentaja.
            </summary>
            <param name="width">Palkin leveys</param>
            <param name="height">Palkin korkeus</param>
        </member>
        <member name="M:Jypeli.Widgets.ProgressBar.#ctor(System.Double,System.Double,Jypeli.Meter)">
            <summary>
            Palkin rakentaja. Sitoo palkin arvon mittarin arvoon.
            </summary>
            <param name="width">Palkin leveys</param>
            <param name="height">Palkin korkeus</param>
            <param name="meter">Mittari</param>
        </member>
        <member name="P:Jypeli.Widgets.ProgressBar.BarImage">
            <summary>
            Palkin kuva.
            Jos erisuuri kuin null, piirretään värin (BarColor) sijasta.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.ProgressBar.BarColor">
            <summary>
            Palkin väri.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.PushButton">
            <summary>
            Painonappi.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.PushButton.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden painonapin.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
        </member>
        <member name="M:Jypeli.Widgets.PushButton.#ctor(System.Double,System.Double,Jypeli.Image)">
            <summary>
            Luo uuden painonapin omalla kuvalla.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
            <param name="image">Kuva.</param>
        </member>
        <member name="M:Jypeli.Widgets.PushButton.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Luo uuden painonapin.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
            <param name="text">Teksti.</param>
        </member>
        <member name="M:Jypeli.Widgets.PushButton.AddShortcut(Jypeli.Key)">
            <summary>
            Lisää pikanäppäimen napille.
            </summary>
            <param name="key">Näppäin</param>
        </member>
        <member name="M:Jypeli.Widgets.PushButton.AddShortcut(Jypeli.Button)">
            <summary>
            Lisää pikanäppäimen kaikille ohjaimille.
            </summary>
            <param name="key">Näppäin</param>
        </member>
        <member name="M:Jypeli.Widgets.PushButton.AddShortcut(System.Int32,Jypeli.Button)">
            <summary>
            Lisää pikanäppäimen yhdelle ohjaimelle.
            </summary>
            <param name="player">Peliohjaimen indeksi 0-3</param>
            <param name="key">Näppäin</param>
        </member>
        <member name="P:Jypeli.Widgets.PushButton.ImageReleased">
            <summary>
            Kuva kun nappi on vapautettu.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.PushButton.ImagePressed">
            <summary>
            Kuva kun nappi on alaspainettuna.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.PushButton.ImageHover">
            <summary>
            Kuva kun hiiren kursori on napin päällä.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.PushButton.Clicked">
            <summary>
            Tapahtuu kun nappia on painettu.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.PushButton.RightClicked">
            <summary>
            Tapahtuu kun nappia on painettu oikealla hiirenpainikkeella.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.ScoreListWidget">
            <summary>
            Käyttöliittymäkomponentti, joka näyttää parhaat pisteet.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.ScoreListWidget.#ctor(Jypeli.ScoreList)">
            <summary>
            Luo uuden ruudulla näytettävän parhaiden pisteiden listan.
            </summary>
            <param name="list">Olemassaoleva lista.</param>
        </member>
        <member name="P:Jypeli.Widgets.ScoreListWidget.Font">
            <summary>
            Tekstifontti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.ScoreListWidget.PositionColor">
            <summary>
            Sijoitusten väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.ScoreListWidget.NameColor">
            <summary>
            Nimien väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.ScoreListWidget.ScoreColor">
            <summary>
            Pisteiden väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.ScoreListWidget.ScoreFormat">
            <summary>
            Pisteiden muoto (oletus on {0})
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.ScoreListWidget.InfinityMarker">
            <summary>
            Äärettömän pistemäärän merkki. Oletus '-'
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.Slider">
            <summary>
            Liukusäädin
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.Slider.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden liukusäätimen.
            </summary>
            <param name="width">Säätimen leveys.</param>
            <param name="height">Säätimen korkeus.</param>
        </member>
        <member name="M:Jypeli.Widgets.Slider.#ctor(System.Double,System.Double,Jypeli.Meter)">
            <summary>
            Luo uuden liukusäätimen.
            Sitoo liukusäätimen arvon mittarin arvoon.
            </summary>
            <param name="width">Säätimen leveys.</param>
            <param name="height">Säätimen korkeus.</param>
            <param name="meter">Mittari</param>
        </member>
        <member name="P:Jypeli.Widgets.Slider.Knob">
            <summary>
            Liukuva nuppi.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Slider.ActiveColor">
            <summary>
            Nupin väri kun hiiri on nupin päällä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Slider.InactiveColor">
            <summary>
            Nupin väri kun hiiri ei ole nupin päällä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.Slider.Track">
            <summary>
            Ura, jossa liukusäädin liukuu.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.SplashScreen">
            <summary>
            Aloitusruutu, joka voidaan näyttää ennen pelin käynnistämistä.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.SplashScreen.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Alustaa aloitusruudun.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.SplashScreen.NameLabel">
            <summary>
            Pelin nimen näyttävä tekstikenttä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.SplashScreen.CopyrightLabel">
            <summary>
            Pelin tekijänoikeudet näyttävä tekstikenttä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.SplashScreen.AuthorsLabel">
            <summary>
            Pelin tekijät näyttävä tekstikenttä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.SplashScreen.TextBody">
            <summary>
            Päätekstikenttä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.SplashScreen.StartLabel">
            <summary>
            Aloita peli painamalla... -tekstin näyttävä tekstikenttä.
            Käytä ominaisuuksia ControlHelp ja LoadingText jos haluat muuttaa itse tekstiä.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.SplashScreen.ControlHelp">
            <summary>
            Kontrolliohje (Aloita peli painamalla Enter / Xbox A).
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.SplashScreen.LoadingText">
            <summary>
            Latausteksti.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.SplashScreen.GameStarted">
            <summary>
            Tapahtuu kun ruudusta poistutaan.
            Tee varsinaiset pelin alustukset tämän tapahtuman käsittelijässä.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.StringListWidget">
            <summary>
            Käyttöliittymäkomponentti, joka näyttää listan merkkijonoja.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.StringListWidget.#ctor(Jypeli.StringList)">
            <summary>
            Luo uuden (tyhjän) merkkijonolistakomponentin, joka on sidottu olemassaolevaan
            listaan.
            </summary>
            <param name="list">Olemassaoleva lista.</param>
        </member>
        <member name="M:Jypeli.Widgets.StringListWidget.#ctor">
            <summary>
            Luo uuden (tyhjän) merkkijonolistakomponentin.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.StringListWidget.Font">
            <summary>
            Tekstifontti.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.StringListWidget.TextColor">
            <summary>
            Tekstin väri.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.StringListWidget.ItemAligment">
            <summary>
            Listan alkioiden sijoitus vaakasuunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.Widgets.StringListWidget.Text">
            <summary>
            Kaikki listan alkiot rivinvaihdoilla erotettuna.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.StringListWindow">
            <summary>
            Ikkuna, joka sisältää listan merkkijonoja.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.StringListWindow.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Luo uuden merkkijonolistaikkunan ja asettaa sille kiinteän koon.
            </summary>
            <param name="question">Kysymys</param>
        </member>
        <member name="P:Jypeli.Widgets.StringListWindow.List">
            <summary>
            Listakomponentti.
            </summary>
        </member>
        <member name="T:Jypeli.Widgets.YesNoWindow">
            <summary>
            Ikkuna, joka kysyy käyttäjältä kyllä tai ei -kysymyksen.
            </summary>
        </member>
        <member name="M:Jypeli.Widgets.YesNoWindow.#ctor(System.String)">
            <summary>
            Luo uuden kyselyikkunan.
            </summary>
            <param name="question">Kysymys</param>
        </member>
        <member name="E:Jypeli.Widgets.YesNoWindow.Yes">
            <summary>
            Tapahtuu kun käyttäjä valitsee "kyllä"-vaihtoehdon.
            </summary>
        </member>
        <member name="E:Jypeli.Widgets.YesNoWindow.No">
            <summary>
            Tapahtuu kun käyttäjä valitsee "ei"-vaihtoehdon.
            </summary>
        </member>
        <member name="T:Jypeli.Operation">
            <summary>
            Käynnissä oleva tehtävä
            </summary>
        </member>
        <member name="M:Jypeli.Operation.Stop">
            <summary>
            Pysäyttää tehtävän.
            </summary>
        </member>
        <member name="P:Jypeli.Operation.Active">
            <summary>
            Onko tehtävä käynnissä.
            </summary>
        </member>
        <member name="E:Jypeli.Operation.Finished">
            <summary>
            Tapahtuu kun tehtävä valmistuu.
            Ei tapahdu, jos tehtävä keskeytetään Stop-aliohjelmalla.
            </summary>
        </member>
        <member name="E:Jypeli.Operation.Stopped">
            <summary>
            Tapahtuu kun tehtävä pysäytetään Stop-metodilla.
            </summary>
        </member>
        <member name="T:Jypeli.IntMeterAddOperation">
            <summary>
            Tehtävä mittarin arvon kasvattamiselle.
            </summary>
        </member>
        <member name="T:Jypeli.DoubleMeterAddOperation">
            <summary>
            Tehtävä mittarin arvon kasvattamiselle.
            </summary>
        </member>
        <member name="T:Jypeli.SynchronousList`1">
            <summary>
            Synkroninen lista, eli lista joka päivittyy vasta kun sen Update-metodia kutsutaan.
            Jos listalle lisätään IUpdatable-rajapinnan toteuttavia olioita, kutsutaan myös niiden
            Update-metodeja samalla.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Jypeli.SynchronousList`1.#ctor(System.Int32)">
            <summary>
            Luo uuden synkronisen listan.
            </summary>
            <param name="firstIndex">Ensimmäisen elementin indeksi.</param>
        </member>
        <member name="M:Jypeli.SynchronousList`1.#ctor">
            <summary>
            Luo uuden synkronisen listan.
            </summary>
        </member>
        <member name="M:Jypeli.SynchronousList`1.UpdateChanges">
            <summary>
            Lisää ja poistaa jonossa olevat elementit, mutta ei kutsu
            elementtien Update-metodia.
            </summary>
            <returns>Muutettiinko listaa</returns>
        </member>
        <member name="M:Jypeli.SynchronousList`1.Update(Jypeli.Time)">
            <summary>
            Lisää ja poistaa jonossa olevat elementit sekä kutsuu niiden
            Update-metodia.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Jypeli.SynchronousList`1.Update(Jypeli.Time,System.Predicate{`0})">
            <summary>
            Lisää ja poistaa jonossa olevat elementit sekä kutsuu niiden
            Update-metodia tietyllä ehdolla.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Jypeli.SynchronousList`1.ForEach(System.Action{`0})">
            <summary>
            Suorittaa annetun toimenpiteen kaikille (nykyisille) listan alkioille.
            </summary>
            <param name="action">Toiminto</param>
        </member>
        <member name="M:Jypeli.SynchronousList`1.ForEach``1(System.Action{`0,``0},``0)">
            <summary>
            Suorittaa annetun toimenpiteen kaikille (nykyisille) listan alkioille.
            </summary>
            <typeparam name="T1">Toisen parametrin tyyppi</typeparam>
            <param name="action">Toiminto</param>
            <param name="p1">Toinen parametri</param>
        </member>
        <member name="P:Jypeli.SynchronousList`1.Item(System.Int32)">
            <summary>
            Indeksointioperaattori.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Jypeli.SynchronousList`1.FirstIndex">
            <summary>
            Ensimmäisen elementin indeksi. Muutettavissa.
            </summary>
        </member>
        <member name="P:Jypeli.SynchronousList`1.LastIndex">
            <summary>
            Viimeisen elementin indeksi.
            </summary>
        </member>
        <member name="P:Jypeli.SynchronousList`1.Count">
            <summary>
            Kuinka monta elementtiä listassa nyt on.
            Ei laske mukaan samalla päivityskierroksella tehtyjä muutoksia.
            </summary>
        </member>
        <member name="E:Jypeli.SynchronousList`1.ItemAdded">
            <summary>
            Tapahtuu kun uusi elementti on lisätty listaan.
            </summary>
        </member>
        <member name="E:Jypeli.SynchronousList`1.ItemRemoved">
            <summary>
            Tapahtuu kun elementti on poistettu listasta.
            </summary>
        </member>
        <member name="E:Jypeli.SynchronousList`1.Changed">
            <summary>
            Tapahtuu kun lista on muuttunut.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.AccelerometerDirection">
            <summary>
            Suunta/ele joka tunnistetaan.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerDirection.Any">
            <summary>
            kallistetaan mihin tahansa suuntaan.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerDirection.Left">
            <summary>
            Kallistetaan vasemalle.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerDirection.Right">
            <summary>
            Kallistetaan oikealle.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerDirection.Up">
            <summary>
            Kallistetaan ylös.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerDirection.Down">
            <summary>
            Kallistetaan alas.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerDirection.Shake">
            <summary>
            Puhelimen ravistusele.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerDirection.Tap">
            <summary>
            Puhelimen "nopea liike"-ele, esim. näpäytys tai tärähdys.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.AccelerometerSensitivity">
            <summary>
            Herkkyys jolla kallistus/ele halutaan tunnistaa.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerSensitivity.Realtime">
            <summary>
            Kallistus/ele tunnistetaan nopeasti.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerSensitivity.High">
            <summary>
            Kallistus/ele tunnistetaan melko nopeasti.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerSensitivity.Medium">
            <summary>
            Kallistus/ele tunnistetaan melko myöhään.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerSensitivity.Low">
            <summary>
            Kallistus/ele tunnistetaan myöhään.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.AccelerometerCalibration">
            <summary>
            Kalibrointi puhelimen kallistuksen nollakohdalle.
            (Asento missä puhelinta ei ole kallistettu yhtään)
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerCalibration.ZeroAngle">
            <summary>
            Puhelin on vaakatasossa näyttö ylöspäin.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerCalibration.HalfRightAngle">
            <summary>
            Puhelin on 45-asteen kulmassa.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.AccelerometerCalibration.RightAngle">
            <summary>
            Puhelin on pystysuorassa.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.Accelerometer">
            <summary>
            Puhelimen kiihtyvyysanturi.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Controller`1">
            <summary>
            Yleinen peliohjainluokka tilatiedoilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Controller">
            <summary>
            Yleinen peliohjainluokka.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controller.AddHelpText(Jypeli.Controls.Handler,System.String)">
            <summary>
            Lisää ohjeteksti, joka on sama kaikille näppäimille tai muille ohjaimille,
            jotka käyttävät samaa aliohjelmaa ohjaintapahtuman käsittelyyn.
            </summary>
            <param name="controlHandler">Ohjaintapahtuman käsittelevä aliohjelma.</param>
            <param name="text">Ohjeteksti.</param>
        </member>
        <member name="M:Jypeli.Controls.Controller.GetControlText(Jypeli.Controls.Listener)">
            <summary>
            Returns a name for the key, button, or whatever control that is assigned to the
            given listener.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controller.Disable(System.Predicate{Jypeli.Controls.Listener})">
            <summary>
            Poistaa tietyt kuuntelutapahtumat käytöstä.
            </summary>
            <param name="predicate">Ehto, jonka tapahtuman on toteutettava.</param>
        </member>
        <member name="M:Jypeli.Controls.Controller.Enable(System.Predicate{Jypeli.Controls.Listener})">
            <summary>
            Ottaa käytöstä poistetun kontrollin takaisin käyttöön.
            </summary>
            <param name="predicate">Ehto, jonka tapahtuman on toteutettava.</param>
        </member>
        <member name="M:Jypeli.Controls.Controller.EnableAll">
            <summary>
            Ottaa takaisin käyttöön kaikki <c>Disable</c>-metodilla poistetut kontrollit.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controller.DisableAll">
            <summary>
            Poistaa kaikki kontrollit käytöstä.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controller.Clear">
            <summary>
            Poistaa tämän ohjaimen kaikki kuuntelijat.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controller.IsBufferEmpty">
            <summary>
            Tarkistaa, onko ohjainpuskuri tyhjä.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controller.PurgeBuffer">
            <summary>
            Tyhjentää ohjainpuskurin.
            Huomaa, että puskuri ei tyhjenny automaattisesti kutsun jälkeen
            (kutsu <c>IsBufferEmpty</c> tarkastaaksesi)
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controller.BufferPurging">
            <summary>
            Onko puskuri parhaillaan tyhjentymässä.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controller.Enabled">
            <summary>
            Kuunnellaanko ohjainta.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.Accelerometer.memoryState">
            <summary>
            Tämänhetkinen, synkronoimaton tila.
            </summary>
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.Start">
            <summary>
            Käynnistää kiihtyvyysanturin.
            </summary>
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.Stop">
            <summary>
            Pysäyttää kiihtyvyysanturin.
            </summary>
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.PauseForDuration(System.Double)">
            <summary>
            Pysäyttää kiihtyvyysanturin annetuksi ajaksi.
            </summary>
            <param name="seconds">Aika sekunteina</param>
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.SetDefaultSensitivity(System.Double)">
            <summary>
            Asettaa vakioherkkyydeksi annetun arvon.
            </summary>
            <param name="sensitivity">Herkkyys</param>        
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.SetDefaultSensitivity(Jypeli.WP7.AccelerometerSensitivity)">
            <summary>
            Asettaa vakioherkkyydeksi annetun arvon.
            </summary>
            <param name="sensitivity">Herkkyys</param>        
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.SetDefaultAnalogSensitivity(System.Double)">
            <summary>
            Asettaa vakioherkkyydeksi (analoginen) annetun arvon.
            </summary>
            <param name="sensitivity">Herkkyys</param>        
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.SetDefaultAnalogSensitivity(Jypeli.WP7.AccelerometerSensitivity)">
            <summary>
            Asettaa vakioherkkyydeksi (analoginen) annetun arvon.
            </summary>
            <param name="sensitivity">Herkkyys</param>        
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.EnableAnalog">
            <summary>
            Ottaa käytöstä poistetun kiihtyvyyskontrollin analogikontrollit <c>k</c> takaisin käyttöön.
            </summary>
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.DisableAnalog">
            <summary>
            Poistaa kiihtyvyysanturin analogikontrollit <c>k</c> käytöstä.
            </summary>
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.Enable(Jypeli.WP7.AccelerometerDirection)">
            <summary>
            Ottaa käytöstä poistetun kiihtyvyyskontrollin <c>k</c> takaisin käyttöön.
            </summary>
            <param name="direction">Kiihtyvyyssuunta</param>
        </member>
        <member name="M:Jypeli.WP7.Accelerometer.Disable(Jypeli.WP7.AccelerometerDirection)">
            <summary>
            Poistaa kiihtyvyyskontrollin <c>k</c> käytöstä.
            </summary>
            <param name="direction">Kiihtyvyyssuunta</param>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.Reading">
            <summary>
            Puhelimen kallistuksen tämänhetkinen suunta.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.State">
            <summary>
            Kiihtyvyysanturin koko suuntavektori.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.Calibration">
            <summary>
            Puhelimen kallistuksen nollakohta.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.DisplayOrientation">
            <summary>
            Näytön suunta.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.DefaultSensitivity">
            <summary>
            Herkkyys jos kuunnellaan suuntia ja eleitä ilman erikseen annettua herkkyyttä.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.DefaultAnalogSensitivity">
            <summary>
            Herkkyys jos kuunnellaan suuntia analogisesti ilman erikseen annettua herkkyyttä.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.GesturesEnabled">
            <summary>
            Määrittää onko Shake ja Tap käytössä.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.TimeBetweenTaps">
            <summary>
            Aika millisekunteina joka pitää kulua napautusten välissä.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Accelerometer.TimeBetweenShakes">
            <summary>
            Aika millisekunteina joka pitää kulua ravistusten välissä.
            </summary>
        </member>
        <member name="T:AdvanceMath.Clamped">
            <summary>
            A class that keeps a value clamped.
            </summary>
        </member>
        <member name="M:AdvanceMath.Clamped.#ctor">
            <summary>
            Creates a new Clamped instance all values being zero.
            </summary>
        </member>
        <member name="M:AdvanceMath.Clamped.#ctor(System.Double)">
            <summary>
            Creates a new Clamped instance with zero being either the max or min.
            </summary>
            <param name="value">The min or max and the current value.</param>
        </member>
        <member name="M:AdvanceMath.Clamped.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new Clamped instance.
            </summary>
            <param name="value">The current value.</param>
            <param name="min">The minimum possible value.</param>
            <param name="max">The maximum possible value.</param>
        </member>
        <member name="M:AdvanceMath.Clamped.Maximize">
            <summary>
            Sets it to its maximum value;
            </summary>
        </member>
        <member name="M:AdvanceMath.Clamped.Minimize">
            <summary>
            Sets it to its minimum value;
            </summary>
        </member>
        <member name="M:AdvanceMath.Clamped.Add(System.Double)">
            <summary>
            Adds a value to the clamped vaule and returns the overflow/underflow.
            </summary>
            <param name="value">The Value to add.</param>
            <returns>The overflow/underflow.</returns>
        </member>
        <member name="M:AdvanceMath.Clamped.Add(System.Double@,System.Double@)">
            <summary>
            Adds a value to the clamped vaule and returns the overflow/underflow.
            </summary>
            <param name="value">The Value to add.</param>
            <param name="result">The overflow/underflow.</param>
        </member>
        <member name="M:AdvanceMath.Clamped.SetValues(System.Double,System.Double,System.Double)">
            <summary>
            Sets all the values at once.
            </summary>
            <param name="value">The current value.</param>
            <param name="min">The minimum possible value.</param>
            <param name="max">The maximum possible value.</param>
        </member>
        <member name="P:AdvanceMath.Clamped.Value">
            <summary>
            Gets and Sets the current value.
            </summary>
        </member>
        <member name="P:AdvanceMath.Clamped.Min">
            <summary>
            Gets and Sets the minimum value.
            </summary>
        </member>
        <member name="P:AdvanceMath.Clamped.Max">
            <summary>
            Gets and Sets the maximum value.
            </summary>
        </member>
        <member name="P:AdvanceMath.Clamped.Percent">
            <summary>
            Gets and Sets the percent with Min being 0 (0%) and Max being 1 (100%)
            </summary>
        </member>
        <member name="P:AdvanceMath.Clamped.IsMax">
            <summary>
            Gets if the value is at its maximum value;
            </summary>
        </member>
        <member name="P:AdvanceMath.Clamped.IsMin">
            <summary>
            Gets if the value is at its minimum value;
            </summary>
        </member>
        <member name="M:AdvanceMath.Design.AdvBrowsableOrderAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="order">"CSV list"</param>
        </member>
        <member name="M:AdvanceMath.Design.InstanceConstructorAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="order">"CSV list"</param>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingPolygon.GetCentroid(AdvanceMath.Vector2D[])">
            <summary>
            Calculates the Centroid of a polygon.
            </summary>
            <param name="vertexes">The vertexes of the polygon.</param>
            <returns>The Centroid of a polygon.</returns>
            <remarks>
            This is Also known as Center of Gravity/Mass.
            </remarks>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingPolygon.GetCentroid(AdvanceMath.Vector2D[],AdvanceMath.Vector2D@)">
            <summary>
            Calculates the Centroid of a polygon.
            </summary>
            <param name="vertexes">The vertexes of the polygon.</param>
            <param name="centroid">The Centroid of a polygon.</param>
            <remarks>
            This is Also known as Center of Gravity/Mass.
            </remarks>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingPolygon.GetArea(AdvanceMath.Vector2D[])">
            <summary>
            Calculates the area of a polygon.
            </summary>
            <param name="vertexes">The vertexes of the polygon.</param>
            <returns>the area.</returns>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingPolygon.GetArea(AdvanceMath.Vector2D[],System.Double@)">
            <summary>
            Calculates the area of a polygon.
            </summary>
            <param name="vertexes">The vertexes of the polygon.</param>
            <param name="result">the area.</param>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingRectangle.FromVectors(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Creates a new BoundingRectangle Instance from 2 Vector2Ds.
            </summary>
            <param name="first">the first Vector2D.</param>
            <param name="second">the second Vector2D.</param>
            <returns>a new BoundingRectangle</returns>
            <remarks>The Max and Min values are automatically determined.</remarks>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingRectangle.FromVectors(AdvanceMath.Vector2D[])">
            <summary>
            Creates a new BoundingRectangle Instance from multiple Vector2Ds.
            </summary>
            <param name="vectors">the list of vectors</param>
            <returns>a new BoundingRectangle</returns>
            <remarks>The Max and Min values are automatically determined.</remarks>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingRectangle.FromUnion(AdvanceMath.Geometry2D.BoundingRectangle,AdvanceMath.Geometry2D.BoundingRectangle)">
            <summary>
            Makes a BoundingRectangle that can contain the 2 BoundingRectangles passed.
            </summary>
            <param name="first">The First BoundingRectangle.</param>
            <param name="second">The Second BoundingRectangle.</param>
            <returns>The BoundingRectangle that can contain the 2 BoundingRectangles passed.</returns>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingRectangle.FromIntersection(AdvanceMath.Geometry2D.BoundingRectangle,AdvanceMath.Geometry2D.BoundingRectangle)">
            <summary>
            Makes a BoundingRectangle that contains the area where the BoundingRectangles Intersect.
            </summary>
            <param name="first">The First BoundingRectangle.</param>
            <param name="second">The Second BoundingRectangle.</param>
            <returns>The BoundingRectangle that can contain the 2 BoundingRectangles passed.</returns>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new BoundingRectangle Instance.
            </summary>
            <param name="minX">The Lower Bound on the XAxis.</param>
            <param name="minY">The Lower Bound on the YAxis.</param>
            <param name="maxX">The Upper Bound on the XAxis.</param>
            <param name="maxY">The Upper Bound on the YAxis.</param>
        </member>
        <member name="M:AdvanceMath.Geometry2D.BoundingRectangle.#ctor(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Creates a new BoundingRectangle Instance from 2 Vector2Ds.
            </summary>
            <param name="min">The Lower Vector2D.</param>
            <param name="max">The Upper Vector2D.</param>
        </member>
        <member name="M:AdvanceMath.IAdvanceValueType.ToArray">
            <summary>
            Copies the elements of the IAdvanceValueType to a new array of <see cref="T:System.Double"/> . 
            </summary>
            <returns>An array containing copies of the elements of the IAdvanceValueType.</returns>
        </member>
        <member name="M:AdvanceMath.IAdvanceValueType.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies all the elements of the IAdvanceValueType to the specified one-dimensional Array of <see cref="T:System.Double"/>. 
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from the IAdvanceValueType.</param>
            <param name="index">A 32-bit integer that represents the index in array at which copying begins.</param>
        </member>
        <member name="M:AdvanceMath.IAdvanceValueType.CopyFrom(System.Double[],System.Int32)">
            <summary>
            Copies all the elements, up to the <see cref="!:Length"/> of the IAdvanceValueType, of the specified one-dimensional Array to the IAdvanceValueType. 
            </summary>
            <param name="array">The one-dimensional Array that is the source of the elements copied to the IAdvanceValueType.</param>
            <param name="index">A 32-bit integer that represents the index in array at which copying begins.</param>
        </member>
        <member name="M:AdvanceMath.IAdvanceValueType.ToString(System.String)">
            <summary>
            turns the object into a string representation of itself with a special format for each Scaler in it.
            </summary>
            <param name="format">the format to be applied to each Scalar </param>
            <returns>a string with every Scalar formated with the provided format.  </returns>
        </member>
        <member name="P:AdvanceMath.IAdvanceValueType.Count">
            <summary>
            Gets a 32-bit integer that represents the total number of elements in all the dimensions of IAdvanceValueType. 
            </summary>
        </member>
        <member name="P:AdvanceMath.IVector`1.Magnitude">
            <summary>
            Gets or Sets the Magnitude (Length of a Vector).
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Length_of_a_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.IVector`1.MagnitudeSq">
            <summary>
            Gets the Squared Magnitude (IE Magnitude*Magnitude).
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Length_of_a_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.IVector`1.Normalized">
            <summary>
            Gets the Normalized Vector. (Unit Vector)
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="M:AdvanceMath.IMatrix.ToMatrixArray">
            <summary>
            Copies the elements of the IMatrix to a new 2-dimensional array of <see cref="T:System.Double"/>s. 
            </summary>
            <returns>A 2-dimensional array containing copies of the elements of the IMatrix.</returns>
        </member>
        <member name="M:AdvanceMath.IMatrix.ToTransposedArray">
            <returns></returns>
            <summary>
            Copies the elements, in a Transposed order, of the IMatrix to a new array of <see cref="T:System.Double"/>. 
            </summary>
            <returns>An array containing copies of the elements, in a Transposed order, of the IAdvanceValueType.</returns>
            <remarks>
            This is the Format Accepted by OpenGL.
            </remarks>
        </member>
        <member name="M:AdvanceMath.IMatrix.CopyTransposedTo(System.Double[],System.Int32)">
            <summary>
            Copies all the elements, in a Transposed order, of the IAdvanceValueType to the specified one-dimensional Array of <see cref="T:System.Double"/>. 
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from the IAdvanceValueType.</param>
            <param name="index">A 32-bit integer that represents the index in array at which copying begins.</param>
        </member>
        <member name="M:AdvanceMath.IMatrix.CopyTransposedFrom(System.Double[],System.Int32)">
            <summary>
            Copies all the elements, in a Transposed order, up to the <see cref="!:IAdvanceValueType.Length"/> of the IAdvanceValueType, of the specified one-dimensional Array to the IAdvanceValueType. 
            </summary>
            <param name="array">The one-dimensional Array that is the source of the elements copied to the IAdvanceValueType.</param>
            <param name="index">A 32-bit integer that represents the index in array at which copying begins.</param>
        </member>
        <member name="P:AdvanceMath.IMatrix.RowCount">
            <summary>
            Gets a 32-bit integer that represents the total number of Rows in the IMatrix. 
            </summary>
        </member>
        <member name="P:AdvanceMath.IMatrix.ColumnCount">
            <summary>
            Gets a 32-bit integer that represents the total number of Columns in the IMatrix. 
            </summary>
        </member>
        <member name="P:AdvanceMath.IMatrix.Determinant">
            <summary>
            Gets the Determinant of the IMatrix
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Determinant"/></remarks>
        </member>
        <member name="M:AdvanceMath.IMatrix`3.GetColumn(System.Int32)">
            <summary>
            Gets the <typeparamref name="V"/> at the specified Column.
            </summary>
            <param name="column">The zero-based index of the Column of the <typeparamref name="V"/> to get.</param>
            <returns>The <typeparamref name="V"/> at the specified Column.</returns>
        </member>
        <member name="M:AdvanceMath.IMatrix`3.SetColumn(System.Int32,`1)">
            <summary>
            Sets the <typeparamref name="V"/>  at the specified Column.
            </summary>
            <param name="column">The zero-based index of the Column of the <typeparamref name="V"/> to set.</param>
            <param name="value">The <typeparamref name="V"/> to set at the specified Column.</param>
        </member>
        <member name="M:AdvanceMath.IMatrix`3.GetRow(System.Int32)">
            <summary>
            Gets the <typeparamref name="V"/> at the specified Row.
            </summary>
            <param name="row">The zero-based index of the Row of the <typeparamref name="V"/> to get.</param>
            <returns>The <typeparamref name="V"/> at the specified Row.</returns>
        </member>
        <member name="M:AdvanceMath.IMatrix`3.SetRow(System.Int32,`2)">
            <summary>
            Sets the <typeparamref name="V"/> at the specified Row.
            </summary>
            <param name="row">The zero-based index of the Row of the <typeparamref name="V"/> to set.</param>
            <param name="value">The <typeparamref name="V"/> to set at the specified Row.</param>
        </member>
        <member name="P:AdvanceMath.IMatrix`3.Inverted">
            <summary>
            Gets the Inverse of the IMatrix
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Invertible_matrix"/></remarks>
        </member>
        <member name="P:AdvanceMath.IMatrix`3.Transposed">
            <summary>
            Gets the Transpose of the IMatrix
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Transpose"/></remarks>
        </member>
        <member name="P:AdvanceMath.IMatrix`3.Adjoint">
            <summary>
            Gets the Adjoint (Conjugate Transpose) of the IMatrix
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Conjugate_transpose"/></remarks>
        </member>
        <member name="P:AdvanceMath.IMatrix`3.Cofactor">
            <summary>
            Gets the Cofactor (The Transpose of the Adjoint) of the IMatrix
            </summary>
        </member>
        <member name="M:AdvanceMath.MathHelper.WrapClamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamps a value between 2 values, but wraps the value around. So that one plus max would result in one plus min.
            </summary>
            <param name="value">the value to clamp</param>
            <param name="min">the minimum value</param>
            <param name="max">the maximum value</param>
            <returns>the clamped result</returns>
        </member>
        <member name="M:AdvanceMath.MathHelper.WrapClamp(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Clamps a value between 2 values, but wraps the value around. So that one plus max would result in one plus min.
            </summary>
            <param name="value">the value to clamp</param>
            <param name="min">the minimum value</param>
            <param name="max">the maximum value</param>
            <param name="result">the clamped result</param>
        </member>
        <member name="M:AdvanceMath.MathHelper.TrySolveQuadratic(System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Trys to Solve for x in the equation: (a * (x * x) + b * x + c == 0)
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="plus">The result of (b + Math.Sqrt((b * b) - (4 * a * c))) / (2 * a)</param>
            <param name="minus">The result of (b - Math.Sqrt((b * b) - (4 * a * c))) / (2 * a)</param>
            <returns><see langword="false" /> if an error would have been thrown; otherwise <see langword="true" />.</returns>
        </member>
        <member name="M:AdvanceMath.MathHelper.ToRadians(System.Double)">
            <summary>
            	Converts degrees to radians.
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.MathHelper.ToDegrees(System.Double)">
            <summary>
            	Converts radians to degrees.
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="T:AdvanceMath.Matrix2x2">
            <summary>
            A 2x2 matrix which can represent rotations for 2D vectors.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x2.RowCount">
            <summary>
            The number of rows.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x2.ColumnCount">
            <summary>
            The number of columns.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x2.Count">
            <summary>
            The number of Scalar values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x2.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.Multiply(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x2)">
            <summary>
            	Used to multiply (concatenate) two Matrix4x4s.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.Multiply(AdvanceMath.Matrix2x2,System.Double)">
            <summary>
            	Used to multiply a Matrix2x2 object by a scalar value..
            </summary>
            <param name="left"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.Add(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x2)">
            <summary>
            	Used to add two matrices together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.Subtract(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x2)">
            <summary>
            	Used to subtract two matrices.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.Negate(AdvanceMath.Matrix2x2)">
            <summary>
            Negates a Matrix2x2.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            	Creates a new Matrix3 with all the specified parameters.
            </summary>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.#ctor(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Create a new Matrix from 3 Vertex3 objects.
            </summary>
            <param name="xAxis"></param>
            <param name="yAxis"></param>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.op_Multiply(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x2)">
            <summary>
            Multiply (concatenate) two Matrix3 instances together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.op_Addition(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x2)">
            <summary>
            	Used to add two matrices together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.op_Subtraction(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x2)">
            <summary>
            	Used to subtract two matrices.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.op_Multiply(AdvanceMath.Matrix2x2,System.Double)">
            <summary>
            Multiplies all the items in the Matrix3 by a scalar value.
            </summary>
            <param name="matrix"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.op_Multiply(System.Double,AdvanceMath.Matrix2x2)">
            <summary>
            Multiplies all the items in the Matrix3 by a scalar value.
            </summary>
            <param name="matrix"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.op_UnaryNegation(AdvanceMath.Matrix2x2)">
            <summary>
            Negates all the items in the Matrix.
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x2.op_Equality(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x2)">
            <summary>
            	Test two matrices for (value) equality
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:AdvanceMath.Matrix2x2.Rx">
            <summary>
            The X Row or row zero.
            </summary>
        </member>
        <member name="P:AdvanceMath.Matrix2x2.Ry">
            <summary>
            The Y Row or row one.
            </summary>
        </member>
        <member name="P:AdvanceMath.Matrix2x2.Transposed">
            <summary>
            Swap the rows of the matrix with the columns.
            </summary>
            <returns>A transposed Matrix.</returns>
        </member>
        <member name="T:AdvanceMath.Matrix2x3">
            <summary>
            A 2x3 matrix which can represent rotations around axes.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x3.RowCount">
            <summary>
            The number of rows.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x3.ColumnCount">
            <summary>
            The number of columns.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x3.Count">
            <summary>
            The number of Scalar values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix2x3.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.Multiply(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x3)">
            <summary>
            Used to multiply (concatenate) two Matrix4x4s.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.Multiply(AdvanceMath.Matrix2x3,System.Double)">
            <summary>
            Used to multiply a Matrix2x3 object by a scalar value..
            </summary>
            <param name="left"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.Multiply(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x2)">
            <summary>
            Used to multiply (concatenate) a Matrix2x3 and a Matrix2x2.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.Multiply(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x3)">
            <summary>
            Used to multiply (concatenate) a Matrix2x3 and a Matrix2x2.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.Add(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x3)">
            <summary>
            Used to add two matrices together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.Subtract(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x3)">
            <summary>
            Used to subtract two matrices.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.Negate(AdvanceMath.Matrix2x3)">
            <summary>
            Negates a Matrix2x3.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new Matrix3 with all the specified parameters.
            </summary>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.#ctor(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Create a new Matrix from 3 Vertex3 objects.
            </summary>
            <param name="xAxis"></param>
            <param name="yAxis"></param>
            <param name="zAxis"></param>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Multiply(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x3)">
            <summary>
            Multiply (concatenate) two Matrix3 instances together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Multiply(AdvanceMath.Matrix2x2,AdvanceMath.Matrix2x3)">
            <summary>
            Multiply (concatenate) a Matrix2x3 and a Matrix2x2
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Multiply(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x2)">
            <summary>
            Multiply (concatenate) a Matrix2x3 and a Matrix2x2
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Multiply(AdvanceMath.Matrix2x3,System.Double)">
            <summary>
            Multiplies all the items in the Matrix3 by a scalar value.
            </summary>
            <param name="matrix"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Multiply(System.Double,AdvanceMath.Matrix2x3)">
            <summary>
            Multiplies all the items in the Matrix3 by a scalar value.
            </summary>
            <param name="matrix"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Addition(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x3)">
            <summary>
            Used to add two matrices together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Subtraction(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x3)">
            <summary>
            Used to subtract two matrices.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_UnaryNegation(AdvanceMath.Matrix2x3)">
            <summary>
            Negates all the items in the Matrix.
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix2x3.op_Equality(AdvanceMath.Matrix2x3,AdvanceMath.Matrix2x3)">
            <summary>
            Test two matrices for (value) equality
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:AdvanceMath.Matrix2x3.Transposed">
            <summary>
            Swap the rows of the matrix with the columns.
            </summary>
            <returns>A transposed Matrix.</returns>
        </member>
        <member name="T:AdvanceMath.Matrix3x3">
            <summary>
            A 3x3 matrix which can represent rotations around axes.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix3x3.RowCount">
            <summary>
            The number of rows.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix3x3.ColumnCount">
            <summary>
            The number of columns.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix3x3.Count">
            <summary>
            The number of Scalar values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix3x3.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.Multiply(AdvanceMath.Matrix3x3,AdvanceMath.Matrix3x3)">
            <summary>
            Used to multiply (concatenate) two Matrix4x4s.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.Multiply(AdvanceMath.Matrix3x3,System.Double)">
            <summary>
            Used to multiply a Matrix3x3 object by a scalar value..
            </summary>
            <param name="left"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.Multiply(AdvanceMath.Matrix3x3,AdvanceMath.Matrix2x2)">
            <summary>
            Used to multiply (concatenate) a Matrix3x3 and a Matrix2x2.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.Multiply(AdvanceMath.Matrix2x2,AdvanceMath.Matrix3x3)">
            <summary>
            Used to multiply (concatenate) a Matrix3x3 and a Matrix2x2.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.Add(AdvanceMath.Matrix3x3,AdvanceMath.Matrix3x3)">
            <summary>
            Used to add two matrices together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.Subtract(AdvanceMath.Matrix3x3,AdvanceMath.Matrix3x3)">
            <summary>
            Used to subtract two matrices.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.Negate(AdvanceMath.Matrix3x3)">
            <summary>
            Negates a Matrix3x3.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.FromEulerAnglesXYZ(System.Double,System.Double,System.Double)">
            <summary>
            Constructs this Matrix from 3 euler angles, in degrees.
            </summary>
            <param name="yaw"></param>
            <param name="pitch"></param>
            <param name="roll"></param>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new Matrix3 with all the specified parameters.
            </summary>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.#ctor(AdvanceMath.Vector3D,AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Create a new Matrix from 3 Vertex3 objects.
            </summary>
            <param name="xAxis"></param>
            <param name="yAxis"></param>
            <param name="zAxis"></param>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Multiply(AdvanceMath.Matrix3x3,AdvanceMath.Matrix3x3)">
            <summary>
            Multiply (concatenate) two Matrix3 instances together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Multiply(AdvanceMath.Matrix2x2,AdvanceMath.Matrix3x3)">
            <summary>
            Multiply (concatenate) a Matrix3x3 and a Matrix2x2
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Multiply(AdvanceMath.Matrix3x3,AdvanceMath.Matrix2x2)">
            <summary>
            Multiply (concatenate) a Matrix3x3 and a Matrix2x2
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Multiply(AdvanceMath.Matrix3x3,System.Double)">
            <summary>
            Multiplies all the items in the Matrix3 by a scalar value.
            </summary>
            <param name="matrix"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Multiply(System.Double,AdvanceMath.Matrix3x3)">
            <summary>
            Multiplies all the items in the Matrix3 by a scalar value.
            </summary>
            <param name="matrix"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Addition(AdvanceMath.Matrix3x3,AdvanceMath.Matrix3x3)">
            <summary>
            Used to add two matrices together.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Subtraction(AdvanceMath.Matrix3x3,AdvanceMath.Matrix3x3)">
            <summary>
            Used to subtract two matrices.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_UnaryNegation(AdvanceMath.Matrix3x3)">
            <summary>
            Negates all the items in the Matrix.
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Matrix3x3.op_Equality(AdvanceMath.Matrix3x3,AdvanceMath.Matrix3x3)">
            <summary>
            Test two matrices for (value) equality
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:AdvanceMath.Matrix3x3.Transposed">
            <summary>
            Swap the rows of the matrix with the columns.
            </summary>
            <returns>A transposed Matrix.</returns>
        </member>
        <member name="F:AdvanceMath.Matrix4x4.RowCount">
            <summary>
            The number of rows.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix4x4.ColumnCount">
            <summary>
            The number of columns.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix4x4.Count">
            <summary>
            The number of Scalar values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Matrix4x4.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="P:AdvanceMath.Matrix4x4.Determinant">
            <summary>
            Gets the determinant of this matrix.
            </summary>
        </member>
        <member name="P:AdvanceMath.Matrix4x4.Transposed">
            <summary>
            Swap the rows of the matrix with the columns.
            </summary>
            <returns>A transposed Matrix.</returns>
        </member>
        <member name="P:AdvanceMath.Matrix4x4.Cofactor">
            <summary>
            Used to generate the Cofactor of this matrix.
            </summary>
            <returns>The Cofactor matrix of the current instance.</returns>
        </member>
        <member name="P:AdvanceMath.Matrix4x4.Adjoint">
            <summary>
            Used to generate the adjoint of this matrix..
            </summary>
            <returns>The adjoint matrix of the current instance.</returns>
        </member>
        <member name="P:AdvanceMath.Matrix4x4.Inverted">
            <summary>
            Returns an inverted 4d matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AdvanceMath.Point2D">
            <summary>
            This is the Vector Class.
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29"/></remarks>
        </member>
        <member name="F:AdvanceMath.Point2D.Count">
            <summary>
            The number of int values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Point2D.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="F:AdvanceMath.Point2D.Zero">
            <summary>
            Point(0,0)
            </summary>
        </member>
        <member name="M:AdvanceMath.Point2D.Add(AdvanceMath.Point2D,AdvanceMath.Point2D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Point operand.</param>
            <param name="right">The right Point operand.</param>
            <returns>The Sum of the 2 Points.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Point2D.Subtract(AdvanceMath.Point2D,AdvanceMath.Point2D)">
            <summary>
            Subtracts 2 Points.
            </summary>
            <param name="left">The left Point operand.</param>
            <param name="right">The right Point operand.</param>
            <returns>The Difference of the 2 Points.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Point2D.Multiply(AdvanceMath.Point2D,System.Int32)">
            <summary>
            Does Scaler Multiplication on a Point.
            </summary>
            <param name="scalar">The scalar value that will multiply the Point.</param>
            <param name="source">The Point to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#int_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Point2D.Negate(AdvanceMath.Point2D)">
            <summary>
            Negates a Point.
            </summary>
            <param name="source">The Point to be Negated.</param>
            <returns>The Negated Point.</returns>
        </member>
        <member name="F:AdvanceMath.Point2D.X">
            <summary>
            This is the X value. (Usually represents a horizontal position or direction.)
            </summary>
        </member>
        <member name="F:AdvanceMath.Point2D.Y">
            <summary>
            This is the Y value. (Usually represents a vertical position or direction.)
            </summary>
        </member>
        <member name="M:AdvanceMath.Point2D.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a New Point Instance on the Stack.
            </summary>
            <param name="X">The X value.</param>
            <param name="Y">The Y value.</param>
        </member>
        <member name="M:AdvanceMath.Point2D.op_Addition(AdvanceMath.Point2D,AdvanceMath.Point2D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Point operand.</param>
            <param name="right">The right Point operand.</param>
            <returns>The Sum of the 2 Points.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Point2D.op_Subtraction(AdvanceMath.Point2D,AdvanceMath.Point2D)">
            <summary>
            Subtracts 2 Points.
            </summary>
            <param name="left">The left Point operand.</param>
            <param name="right">The right Point operand.</param>
            <returns>The Difference of the 2 Points.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Point2D.op_Multiply(AdvanceMath.Point2D,System.Int32)">
            <summary>
            Does Scaler Multiplication on a Point.
            </summary>
            <param name="source">The Point to be multiplied.</param>
            <param name="scalar">The scalar value that will multiply the Point.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#int_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Point2D.op_Multiply(System.Int32,AdvanceMath.Point2D)">
            <summary>
            Does Scaler Multiplication on a Point.
            </summary>
            <param name="scalar">The scalar value that will multiply the Point.</param>
            <param name="source">The Point to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#int_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Point2D.op_UnaryNegation(AdvanceMath.Point2D)">
            <summary>
            Negates a Point.
            </summary>
            <param name="source">The Point to be Negated.</param>
            <returns>The Negated Point.</returns>
        </member>
        <member name="M:AdvanceMath.Point2D.op_Equality(AdvanceMath.Point2D,AdvanceMath.Point2D)">
            <summary>
            Specifies whether the Points contain the same coordinates.
            </summary>
            <param name="left">The left Point to test.</param>
            <param name="right">The right Point to test.</param>
            <returns>true if the Points have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Point2D.op_Inequality(AdvanceMath.Point2D,AdvanceMath.Point2D)">
            <summary>
            Specifies whether the Points do not contain the same coordinates.
            </summary>
            <param name="left">The left Point to test.</param>
            <param name="right">The right Point to test.</param>
            <returns>true if the Points do not have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Point2D.ToString(System.String)">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation, using the specified format.
            </summary>
            <param name="format">the format for each scaler in this Vector</param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Point2D.GetHashCode">
            <summary>
            	Provides a unique hash code based on the member variables of this
            	class.  This should be done because the equality operators (==, !=)
            	have been overriden by this class.
            	<p/>
            	The standard implementation is a simple XOR operation between all local
            	member variables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Point2D.Equals(System.Object)">
            <summary>
            	Compares this Vector to another object.  This should be done because the 
            	equality operators (==, !=) have been overriden by this class.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:AdvanceMath.PrimeNumberGenerator">
            <summary>
            Generates prime numbers. Just felt like writting one.
            </summary>
        </member>
        <member name="T:AdvanceMath.Quaternion">
            <summary>
            	Summary description for Quaternion.
            </summary>
        </member>
        <member name="F:AdvanceMath.Quaternion.Identity">
            <summary>
               An Identity Quaternion.
            </summary>
        </member>
        <member name="F:AdvanceMath.Quaternion.Zero">
            <summary>
               A Quaternion With all elements set to 0;
            </summary>
        </member>
        <member name="M:AdvanceMath.Quaternion.Slerp(System.Double,AdvanceMath.Quaternion,AdvanceMath.Quaternion,System.Boolean)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <param name="quatA"></param>
            <param name="quatB"></param>
            <param name="useShortestPath"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.FromAngleAxis(System.Double,AdvanceMath.Vector3D)">
            <summary>
            Creates a Quaternion from a supplied angle and aXis.
            </summary>
            <param name="angle">Value of an angle in radians.</param>
            <param name="aXis">ArbitrarY aXis vector.</param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.Squad(System.Double,AdvanceMath.Quaternion,AdvanceMath.Quaternion,AdvanceMath.Quaternion,AdvanceMath.Quaternion,System.Boolean)">
            <summary>
            	Performs spherical quadratic interpolation.
            </summary>
            <param name="t"></param>
            <param name="p"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="q"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            	Creates a new Quaternion.
            </summary>
        </member>
        <member name="M:AdvanceMath.Quaternion.FromEulerAngles(System.Double,System.Double,System.Double)">
            <summary>
            Combines the euler angles in the order Yaw, pitch, roll to create a rotation quaternion
            </summary>
            <param name="pitch"></param>
            <param name="Yaw"></param>
            <param name="roll"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.Dot(AdvanceMath.Quaternion)">
            <summary>
            Performs a Dot Product operation on 2 Quaternions.
            </summary>
            <param name="quat"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.Normalize">
            <summary>
            	Normalizes elements of this quaterion to the range [0,1].
            </summary>
        </member>
        <member name="M:AdvanceMath.Quaternion.ToAngleAxis(System.Double@,AdvanceMath.Vector3D@)">
            <summary>
               
            </summary>
            <param name="angle"></param>
            <param name="aXis"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.ToRotationMatrix">
            <summary>
            Gets a 3X3 rotation matriX from this Quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.Inverse">
            <summary>
            Computes the inverse of a Quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.ToAxis(AdvanceMath.Vector3D@,AdvanceMath.Vector3D@,AdvanceMath.Vector3D@)">
            <summary>
            
            </summary>
            <param name="XAxis"></param>
            <param name="YAxis"></param>
            <param name="ZAxis"></param>
        </member>
        <member name="M:AdvanceMath.Quaternion.Log">
            <summary>
            	Calculates the logarithm of a Quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.Exp">
            <summary>
            	Calculates the Exponent of a Quaternion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Quaternion.ToString">
            <summary>
            	Overrides the Object.ToString() method to provide a teXt representation of 
            	a Quaternion.
            </summary>
            <returns>A string representation of a Quaternion.</returns>
        </member>
        <member name="P:AdvanceMath.Quaternion.Norm">
            <summary>
            	Squared 'length' of this quaternion.
            </summary>
        </member>
        <member name="P:AdvanceMath.Quaternion.XAxis">
            <summary>
               Local X-aXis portion of this rotation.
            </summary>
        </member>
        <member name="P:AdvanceMath.Quaternion.YAxis">
            <summary>
               Local Y-aXis portion of this rotation.
            </summary>
        </member>
        <member name="P:AdvanceMath.Quaternion.ZAxis">
            <summary>
               Local Z-aXis portion of this rotation.
            </summary>
        </member>
        <member name="T:AdvanceMath.Vector2D">
            <summary>
            This is the Vector Class.
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29"/></remarks>
        </member>
        <member name="F:AdvanceMath.Vector2D.Count">
            <summary>
            The number of Scalar values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector2D.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector2D.One">
            <summary>
            Vector2D(1,1)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector2D.Zero">
            <summary>
            Vector2D(0,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector2D.XAxis">
            <summary>
            Vector2D(1,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector2D.YAxis">
            <summary>
            Vector2D(0,1)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector2D.XYAxis">
            <summary>
            Vector2D(0.707...,0.707...)
            </summary>
        </member>
        <member name="M:AdvanceMath.Vector2D.Clamp(AdvanceMath.Vector2D,AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Binds a value to 
            </summary>
            <param name="value"></param>
            <param name="lower"></param>
            <param name="upper"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.FromLengthAndAngle(System.Double,System.Double)">
            <summary>
            Creates a Vector2D With the given length (<see cref="P:AdvanceMath.Vector2D.Magnitude"/>) and the given <see cref="P:AdvanceMath.Vector2D.Angle"/>.
            </summary>
            <param name="length">The length (<see cref="P:AdvanceMath.Vector2D.Magnitude"/>) of the Vector2D to be created</param>
            <param name="radianAngle">The angle of the from the (<see cref="F:AdvanceMath.Vector2D.XAxis"/>) in Radians</param>
            <returns>a Vector2D With the given length and angle.</returns>
            <remarks>
            <code>FromLengthAndAngle(1,Math.PI/2)</code>
             would create a Vector2D equil to 
             <code>new Vector2D(0,1)</code>. 
             And <code>FromLengthAndAngle(1,0)</code>
             would create a Vector2D equil to 
             <code>new Vector2D(1,0)</code>.
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Rotate(System.Double,AdvanceMath.Vector2D)">
            <summary>
            Rotates a Vector2D.
            </summary>
            <param name="radianAngle">The <see cref="P:AdvanceMath.Vector2D.Angle"/> in radians of the amount it is to be rotated.</param>
            <param name="source">The Vector2D to be Rotated.</param>
            <returns>The Rotated Vector2D</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.SetAngle(AdvanceMath.Vector2D,System.Double)">
            <summary>
            Sets the <see cref="P:AdvanceMath.Vector2D.Angle"/> of a Vector2D without changing the <see cref="P:AdvanceMath.Vector2D.Magnitude"/>.
            </summary>
            <param name="source">The Vector2D to have its Angle set.</param>
            <param name="radianAngle">The angle of the from the (<see cref="F:AdvanceMath.Vector2D.XAxis"/>) in Radians</param>
            <returns>A Vector2D with a new Angle.</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.GetAngle(AdvanceMath.Vector2D)">
            <summary>
            Determines the current <see cref="P:AdvanceMath.Vector2D.Angle"/> in radians of the Vector2D and Returns it.
            </summary>
            <param name="source">The Vector2D of whos angle is to be Determined.</param>
            <returns>The <see cref="P:AdvanceMath.Vector2D.Angle"/> in radians of the Vector2D.</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.Add(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Sum of the 2 Vector2Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Subtract(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Subtracts 2 Vector2Ds.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Difference of the 2 Vector2Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Transform(AdvanceMath.Matrix3x3,AdvanceMath.Vector2D)">
            <summary>
            Uses a matrix multiplication to Transform the vector.
            </summary>
            <param name="matrix">The Transformation matrix</param>
            <param name="source">The Vector to be transformed</param>
            <returns>The transformed vector.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Transform(AdvanceMath.Matrix2x3,AdvanceMath.Vector2D)">
            <summary>
            Uses a matrix multiplication to Transform the vector.
            </summary>
            <param name="matrix">The Transformation matrix</param>
            <param name="source">The Vector to be transformed</param>
            <returns>The transformed vector.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Transform(AdvanceMath.Matrix2x2,AdvanceMath.Vector2D)">
            <summary>
            Uses a matrix multiplication to Transform the vector.
            </summary>
            <param name="matrix">The rotation matrix</param>
            <param name="source">The Vector to be transformed</param>
            <returns>The transformed vector.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Transformation_matrix#Rotation"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Multiply(AdvanceMath.Vector2D,System.Double)">
            <summary>
            Does Scaler Multiplication on a Vector2D.
            </summary>
            <param name="scalar">The scalar value that will multiply the Vector2D.</param>
            <param name="source">The Vector2D to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Dot(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Does a Dot Operation Also know as an Inner Product.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Dot Product (Inner Product).</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Dot_product"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.ZCross(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Does a "2D" Cross Product also know as an Outer Product.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Z value of the resulting vector.</returns>
            <remarks>
            This 2D Cross Product is using a cheat. Since the Cross product (in 3D space) 
            always generates a vector perpendicular (orthogonal) to the 2 vectors used as 
            arguments. The cheat is that the only vector that can be perpendicular to two 
            vectors in the XY Plane will parallel to the Z Axis. Since any vector that is 
            parallel to the Z Axis will have zeros in both the X and Y Fields I can represent
            the cross product of 2 vectors in the XY plane as single scalar: Z. Also the 
            Cross Product of and Vector on the XY plan and that of one ont on the Z Axis 
            will result in a vector on the XY Plane. So the ZCross Methods were well thought
            out and can be trusted.
            <seealso href="http://en.wikipedia.org/wiki/Cross_product"/>
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.ZCross(System.Double,AdvanceMath.Vector2D)">
            <summary>
            Does a "2D" Cross Product also know as an Outer Product.
            </summary>
            <param name="leftZ">The Z value of the left vector operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Vector2D that fully represents the resulting vector.</returns>
            <remarks>
            This 2D Cross Product is using a cheat. Since the Cross product (in 3D space) 
            always generates a vector perpendicular (orthogonal) to the 2 vectors used as 
            arguments. The cheat is that the only vector that can be perpendicular to two 
            vectors in the XY Plane will parallel to the Z Axis. Since any vector that is 
            parallel to the Z Axis will have zeros in both the X and Y Fields I can represent
            the cross product of 2 vectors in the XY plane as single scalar: Z. Also the 
            Cross Product of and Vector on the XY plan and that of one ont on the Z Axis 
            will result in a vector on the XY Plane. So the ZCross Methods were well thought
            out and can be trusted.
            <seealso href="http://en.wikipedia.org/wiki/Cross_product"/>
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.ZCross(AdvanceMath.Vector2D,System.Double)">
            <summary>
            Does a "2D" Cross Product also know as an Outer Product.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="rightZ">The Z value of the right vector operand.</param>
            <returns>The Vector2D that fully represents the resulting vector.</returns>
            <remarks>
            This 2D Cross Product is using a cheat. Since the Cross product (in 3D space) 
            always generates a vector perpendicular (orthogonal) to the 2 vectors used as 
            arguments. The cheat is that the only vector that can be perpendicular to two 
            vectors in the XY Plane will parallel to the Z Axis. Since any vector that is 
            parallel to the Z Axis will have zeros in both the X and Y Fields I can represent
            the cross product of 2 vectors in the XY plane as single scalar: Z. Also the 
            Cross Product of and Vector on the XY plan and that of one ont on the Z Axis 
            will result in a vector on the XY Plane. So the ZCross Methods were well thought
            out and can be trusted.
            <seealso href="http://en.wikipedia.org/wiki/Cross_product"/>
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.GetMagnitudeSq(AdvanceMath.Vector2D)">
            <summary>
            Gets the Squared <see cref="P:AdvanceMath.Vector2D.Magnitude"/> of the Vector2D that is passed.
            </summary>
            <param name="source">The Vector2D whos Squared Magnitude is te be returned.</param>
            <returns>The Squared Magnitude.</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.GetMagnitude(AdvanceMath.Vector2D)">
            <summary>
            Gets the <see cref="P:AdvanceMath.Vector2D.Magnitude"/> of the Vector2D that is passed.
            </summary>
            <param name="source">The Vector2D whos Magnitude is te be returned.</param>
            <returns>The Magnitude.</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.SetMagnitude(AdvanceMath.Vector2D,System.Double)">
            <summary>
            Sets the <see cref="P:AdvanceMath.Vector2D.Magnitude"/> of a Vector2D without changing the  <see cref="P:AdvanceMath.Vector2D.Angle"/>.
            </summary>
            <param name="source">The Vector2D whose Magnitude is to be changed.</param>
            <param name="magnitude">The Magnitude.</param>
            <returns>A Vector2D with the new Magnitude</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.Negate(AdvanceMath.Vector2D)">
            <summary>
            Negates a Vector2D.
            </summary>
            <param name="source">The Vector2D to be Negated.</param>
            <returns>The Negated Vector2D.</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.Normalize(AdvanceMath.Vector2D)">
            <summary>
            This returns the Normalized Vector2D that is passed. This is also known as a Unit Vector.
            </summary>
            <param name="source">The Vector2D to be Normalized.</param>
            <returns>The Normalized Vector2D. (Unit Vector)</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Normalize(AdvanceMath.Vector2D,System.Double@)">
            <summary>
            This returns the Normalized Vector2D that is passed. This is also known as a Unit Vector.
            </summary>
            <param name="source">The Vector2D to be Normalized.</param>
            <param name="magnitude">the magitude of the Vector2D passed</param>
            <returns>The Normalized Vector2D. (Unit Vector)</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.Project(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Thie Projects the left Vector2D onto the Right Vector2D.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Projected Vector2D.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Projection_%28linear_algebra%29"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.GetRightHandNormal(AdvanceMath.Vector2D)">
            <summary>
            Gets a Vector2D that is perpendicular(orthogonal) to the passed Vector2D while staying on the XY Plane.
            </summary>
            <param name="source">The Vector2D whose perpendicular(orthogonal) is to be determined.</param>
            <returns>An perpendicular(orthogonal) Vector2D using the Right Hand Rule</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Right-hand_rule"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.GetLeftHandNormal(AdvanceMath.Vector2D)">
            <summary>
            Gets a Vector2D that is perpendicular(orthogonal) to the passed Vector2D while staying on the XY Plane.
            </summary>
            <param name="source">The Vector2D whose perpendicular(orthogonal) is to be determined.</param>
            <returns>An perpendicular(orthogonal) Vector2D using the Left Hand Rule (opposite of the Right hand Rule)</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Right-hand_rule#Left-hand_rule"/></remarks>
        </member>
        <member name="F:AdvanceMath.Vector2D.X">
            <summary>
            This is the X value. (Usually represents a horizontal position or direction.)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector2D.Y">
            <summary>
            This is the Y value. (Usually represents a vertical position or direction.)
            </summary>
        </member>
        <member name="M:AdvanceMath.Vector2D.#ctor(System.Double,System.Double)">
            <summary>
            Creates a New Vector2D Instance on the Stack.
            </summary>
            <param name="X">The X value.</param>
            <param name="Y">The Y value.</param>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_Addition(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Sum of the 2 Vector2Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_Subtraction(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Subtracts 2 Vector2Ds.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Difference of the 2 Vector2Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_Multiply(AdvanceMath.Vector2D,System.Double)">
            <summary>
            Does Scaler Multiplication on a Vector2D.
            </summary>
            <param name="source">The Vector2D to be multiplied.</param>
            <param name="scalar">The scalar value that will multiply the Vector2D.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_Multiply(System.Double,AdvanceMath.Vector2D)">
            <summary>
            Does Scaler Multiplication on a Vector2D.
            </summary>
            <param name="scalar">The scalar value that will multiply the Vector2D.</param>
            <param name="source">The Vector2D to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_Multiply(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Does a Dot Operation Also know as an Inner Product.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Dot Product (Inner Product).</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Dot_product"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_UnaryNegation(AdvanceMath.Vector2D)">
            <summary>
            Negates a Vector2D.
            </summary>
            <param name="source">The Vector2D to be Negated.</param>
            <returns>The Negated Vector2D.</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_ExclusiveOr(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Does a "2D" Cross Product also know as an Outer Product.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Z value of the resulting vector.</returns>
            <remarks>
            This 2D Cross Product is using a cheat. Since the Cross product (in 3D space) 
            always generates a vector perpendicular (orthogonal) to the 2 vectors used as 
            arguments. The cheat is that the only vector that can be perpendicular to two 
            vectors in the XY Plane will parallel to the Z Axis. Since any vector that is 
            parallel to the Z Axis will have zeros in both the X and Y Fields I can represent
            the cross product of 2 vectors in the XY plane as single scalar: Z. Also the 
            Cross Product of and Vector on the XY plan and that of one ont on the Z Axis 
            will result in a vector on the XY Plane. So the ZCross Methods were well thought
            out and can be trusted.
            <seealso href="http://en.wikipedia.org/wiki/Cross_product"/>
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_ExclusiveOr(System.Double,AdvanceMath.Vector2D)">
            <summary>
            Does a "2D" Cross Product also know as an Outer Product.
            </summary>
            <param name="leftZ">The Z value of the left vector operand.</param>
            <param name="right">The right Vector2D operand.</param>
            <returns>The Vector2D that fully represents the resulting vector.</returns>
            <remarks>
            This 2D Cross Product is using a cheat. Since the Cross product (in 3D space) 
            always generates a vector perpendicular (orthogonal) to the 2 vectors used as 
            arguments. The cheat is that the only vector that can be perpendicular to two 
            vectors in the XY Plane will parallel to the Z Axis. Since any vector that is 
            parallel to the Z Axis will have zeros in both the X and Y Fields I can represent
            the cross product of 2 vectors in the XY plane as single scalar: Z. Also the 
            Cross Product of and Vector on the XY plan and that of one ont on the Z Axis 
            will result in a vector on the XY Plane. So the ZCross Methods were well thought
            out and can be trusted.
            <seealso href="http://en.wikipedia.org/wiki/Cross_product"/>
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_ExclusiveOr(AdvanceMath.Vector2D,System.Double)">
            <summary>
            Does a "2D" Cross Product also know as an Outer Product.
            </summary>
            <param name="left">The left Vector2D operand.</param>
            <param name="rightZ">The Z value of the right vector operand.</param>
            <returns>The Vector2D that fully represents the resulting vector.</returns>
            <remarks>
            This 2D Cross Product is using a cheat. Since the Cross product (in 3D space) 
            always generates a vector perpendicular (orthogonal) to the 2 vectors used as 
            arguments. The cheat is that the only vector that can be perpendicular to two 
            vectors in the XY Plane will parallel to the Z Axis. Since any vector that is 
            parallel to the Z Axis will have zeros in both the X and Y Fields I can represent
            the cross product of 2 vectors in the XY plane as single scalar: Z. Also the 
            Cross Product of and Vector on the XY plan and that of one ont on the Z Axis 
            will result in a vector on the XY Plane. So the ZCross Methods were well thought
            out and can be trusted.
            <seealso href="http://en.wikipedia.org/wiki/Cross_product"/>
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_Equality(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Specifies whether the Vector2Ds contain the same coordinates.
            </summary>
            <param name="left">The left Vector2D to test.</param>
            <param name="right">The right Vector2D to test.</param>
            <returns>true if the Vector2Ds have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.op_Inequality(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Specifies whether the Vector2Ds do not contain the same coordinates.
            </summary>
            <param name="left">The left Vector2D to test.</param>
            <param name="right">The right Vector2D to test.</param>
            <returns>true if the Vector2Ds do not have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.ToString(System.String)">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation, using the specified format.
            </summary>
            <param name="format">the format for each scaler in this Vector</param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.GetHashCode">
            <summary>
            	Provides a unique hash code based on the member variables of this
            	class.  This should be done because the equality operators (==, !=)
            	have been overriden by this class.
            	<p/>
            	The standard implementation is a simple XOR operation between all local
            	member variables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector2D.Equals(System.Object)">
            <summary>
            	Compares this Vector to another object.  This should be done because the 
            	equality operators (==, !=) have been overriden by this class.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:AdvanceMath.Vector2D.RightHandNormal">
            <summary>
            Gets A perpendicular(orthogonal) Vector2D using the Right Hand Rule.
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Right-hand_rule"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector2D.LeftHandNormal">
            <summary>
            Gets A perpendicular(orthogonal) Vector2D using the Left Hand Rule.
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Right-hand_rule#Left-hand_rule"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector2D.Magnitude">
            <summary>
            Gets or Sets the Magnitude (Length) of the Vector2D. 
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Length_of_a_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector2D.MagnitudeSq">
            <summary>
            Gets the Squared Magnitude of the Vector2D.
            </summary>
        </member>
        <member name="P:AdvanceMath.Vector2D.Angle">
            <summary>
            Gets or Sets the Angle in radians of the Vector2D.
            </summary>
            <remarks>
            If the Magnitude of the Vector is 1 then The 
            Angles {0,Math.PI/2,Math.PI/2,3*Math.PI/2} would have the vectors {(1,0),(0,1),(-1,0),(0,-1)} respectively.
            </remarks>
        </member>
        <member name="P:AdvanceMath.Vector2D.Normalized">
            <summary>
            Gets the Normalized Vector2D. (Unit Vector)
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector2D.AdvanceMath#IAdvanceValueType#Count">
            <summary>
            The Number of Variables accesable though the indexer.
            </summary>
        </member>
        <member name="T:AdvanceMath.Vector3D">
            <summary>
            A Vector with 3 dimensions.
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29"/></remarks>
        </member>
        <member name="F:AdvanceMath.Vector3D.Count">
            <summary>
            The number of Scalar values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.One">
            <summary>
            Vector3D(1,1,1)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.Zero">
            <summary>
            Vector3D(0,0,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.XAxis">
            <summary>
            Vector3D(1,0,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.YAxis">
            <summary>
            Vector3D(0,1,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.ZAxis">
            <summary>
            Vector3D(0,0,1)
            </summary>
        </member>
        <member name="M:AdvanceMath.Vector3D.Add(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Sum of the 2 Vector3Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.Subtract(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Subtracts 2 Vector3Ds.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Difference of the 2 Vector3Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.Multiply(AdvanceMath.Vector3D,System.Double)">
            <summary>
            Does Scaler Multiplication on a Vector3D.
            </summary>
            <param name="source">The Vector3D to be multiplied.</param>
            <param name="scalar">The scalar value that will multiply the Vector3D.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.Multiply(System.Double,AdvanceMath.Vector3D)">
            <summary>
            Does Scaler Multiplication on a Vector3D.
            </summary>
            <param name="scalar">The scalar value that will multiply the Vector3D.</param>
            <param name="source">The Vector3D to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.Transform(AdvanceMath.Matrix3x3,AdvanceMath.Vector3D)">
            <summary>
            	matrix * vector [3x3 * 3x1 = 3x1]
            </summary>
            <param name="vector"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.Transform(AdvanceMath.Vector3D,AdvanceMath.Matrix3x3)">
            <summary>
            	vector * matrix [1x3 * 3x3 = 1x3]
            </summary>
            <param name="vector"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.Transform(AdvanceMath.Matrix4x4,AdvanceMath.Vector3D)">
            <summary>
            	Transforms the given 3-D vector by the matrix, projecting the 
            	result back into <i>w</i> = 1.
            	<p/>
            	This means that the initial <i>w</i> is considered to be 1.0,
            	and then all the tree elements of the resulting 3-D vector are
            	divided by the resulting <i>w</i>.
            </summary>
            <param name="matrix">A Matrix4.</param>
            <param name="vector">A Vector3D.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.Dot(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Does a Dot Operation Also know as an Inner Product.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Dot Product (Inner Product).</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Dot_product"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.Cross(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Does a Cross Operation Also know as an Outer Product.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Cross Product.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Cross_product"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.GetMagnitudeSq(AdvanceMath.Vector3D)">
            <summary>
            Gets the Squared <see cref="P:AdvanceMath.Vector3D.Magnitude"/> of the Vector3D that is passed.
            </summary>
            <param name="source">The Vector3D whos Squared Magnitude is te be returned.</param>
            <returns>The Squared Magnitude.</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.GetMagnitude(AdvanceMath.Vector3D)">
            <summary>
            Gets the <see cref="P:AdvanceMath.Vector3D.Magnitude"/> of the Vector3D that is passed.
            </summary>
            <param name="source">The Vector3D whos Magnitude is te be returned.</param>
            <returns>The Magnitude.</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.SetMagnitude(AdvanceMath.Vector3D,System.Double)">
            <summary>
            Sets the <see cref="P:AdvanceMath.Vector3D.Magnitude"/> of a Vector3D.
            </summary>
            <param name="source">The Vector3D whose Magnitude is to be changed.</param>
            <param name="magnitude">The Magnitude.</param>
            <returns>A Vector3D with the new Magnitude</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.Normalize(AdvanceMath.Vector3D)">
            <summary>
            This returns the Normalized Vector3D that is passed. This is also known as a Unit Vector.
            </summary>
            <param name="source">The Vector3D to be Normalized.</param>
            <returns>The Normalized Vector3D. (Unit Vector)</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.Negate(AdvanceMath.Vector3D)">
            <summary>
            Negates a Vector3D.
            </summary>
            <param name="source">The Vector3D to be Negated.</param>
            <returns>The Negated Vector3D.</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.Project(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Thie Projects the left Vector3D onto the Right Vector3D.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Projected Vector3D.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Projection_%28linear_algebra%29"/></remarks>
        </member>
        <member name="F:AdvanceMath.Vector3D.X">
            <summary>
            This is the X value.
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.Y">
            <summary>
            This is the Y value.
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector3D.Z">
            <summary>
            This is the Z value. 
            </summary>
        </member>
        <member name="M:AdvanceMath.Vector3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates a New Vector3D Instance on the Stack.
            </summary>
            <param name="X">The X value.</param>
            <param name="Y">The Y value.</param>
            <param name="Z">The Z value.</param>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Addition(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Sum of the 2 Vector3Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Subtraction(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Subtracts 2 Vector3Ds.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Difference of the 2 Vector3Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Multiply(AdvanceMath.Vector3D,System.Double)">
            <summary>
            Does Scaler Multiplication on a Vector3D.
            </summary>
            <param name="source">The Vector3D to be multiplied.</param>
            <param name="scalar">The scalar value that will multiply the Vector3D.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Multiply(System.Double,AdvanceMath.Vector3D)">
            <summary>
            Does Scaler Multiplication on a Vector3D.
            </summary>
            <param name="scalar">The scalar value that will multiply the Vector3D.</param>
            <param name="source">The Vector3D to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Multiply(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Does a Dot Operation Also know as an Inner Product.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Dot Product (Inner Product).</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Dot_product"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Multiply(AdvanceMath.Matrix4x4,AdvanceMath.Vector3D)">
            <summary>
            	Transforms the given 3-D vector by the matrix, projecting the 
            	result back into <i>w</i> = 1.
            	<p/>
            	This means that the initial <i>w</i> is considered to be 1.0,
            	and then all the tree elements of the resulting 3-D vector are
            	divided by the resulting <i>w</i>.
            </summary>
            <param name="matrix">A Matrix4.</param>
            <param name="vector">A Vector3D.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Multiply(AdvanceMath.Matrix3x3,AdvanceMath.Vector3D)">
            <summary>
            	matrix * vector [3x3 * 3x1 = 3x1]
            </summary>
            <param name="vector"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Multiply(AdvanceMath.Vector3D,AdvanceMath.Matrix3x3)">
            <summary>
            	vector * matrix [1x3 * 3x3 = 1x3]
            </summary>
            <param name="vector"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_UnaryNegation(AdvanceMath.Vector3D)">
            <summary>
            Negates a Vector3D.
            </summary>
            <param name="source">The Vector3D to be Negated.</param>
            <returns>The Negated Vector3D.</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_ExclusiveOr(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Does a "2D" Cross Product also know as an Outer Product.
            </summary>
            <param name="left">The left Vector3D operand.</param>
            <param name="right">The right Vector3D operand.</param>
            <returns>The Z value of the resulting vector.</returns>
            <remarks>
            <seealso href="http://en.wikipedia.org/wiki/Cross_product"/>
            </remarks>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Equality(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Specifies whether the Vector3Ds contain the same coordinates.
            </summary>
            <param name="left">The left Vector3D to test.</param>
            <param name="right">The right Vector3D to test.</param>
            <returns>true if the Vector3Ds have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.op_Inequality(AdvanceMath.Vector3D,AdvanceMath.Vector3D)">
            <summary>
            Specifies whether the Vector3Ds do not contain the same coordinates.
            </summary>
            <param name="left">The left Vector3D to test.</param>
            <param name="right">The right Vector3D to test.</param>
            <returns>true if the Vector3Ds do not have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.GetHashCode">
            <summary>
            	Provides a unique hash code based on the member variables of this
            	class.  This should be done because the equality operators (==, !=)
            	have been overriden by this class.
            	<p/>
            	The standard implementation is a simple XOR operation between all local
            	member variables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector3D.Equals(System.Object)">
            <summary>
            	Compares this Vector to another object.  This should be done because the 
            	equality operators (==, !=) have been overriden by this class.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:AdvanceMath.Vector3D.Magnitude">
            <summary>
            Gets or Sets the Magnitude (Length) of the Vector3D. 
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Length_of_a_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector3D.MagnitudeSq">
            <summary>
            Gets the Squared Magnitude of the Vector3D.
            </summary>
        </member>
        <member name="P:AdvanceMath.Vector3D.Normalized">
            <summary>
            Gets the Normalized Vector3D. (Unit Vector)
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector3D.AdvanceMath#IAdvanceValueType#Count">
            <summary>
            The Number of Variables accesable though the indexer.
            </summary>
        </member>
        <member name="T:AdvanceMath.Vector4D">
            <summary>
            A Vector with 4 dimensions.
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29"/></remarks>
        </member>
        <member name="F:AdvanceMath.Vector4D.Count">
            <summary>
            The number of Scalar values in the class.
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.Size">
            <summary>
            The Size of the class in bytes;
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.One">
            <summary>
            Vector4D(1,1,1,1)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.Zero">
            <summary>
            Vector4D(0,0,0,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.XAxis">
            <summary>
            Vector4D(1,0,0,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.YAxis">
            <summary>
            Vector4D(0,1,0,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.ZAxis">
            <summary>
            Vector4D(0,0,1,0)
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.WAxis">
            <summary>
            Vector4D(0,0,0,1)
            </summary>
        </member>
        <member name="M:AdvanceMath.Vector4D.Add(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Vector4D operand.</param>
            <param name="right">The right Vector4D operand.</param>
            <returns>The Sum of the 2 Vector4Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.Subtract(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Subtracts 2 Vector4Ds.
            </summary>
            <param name="left">The left Vector4D operand.</param>
            <param name="right">The right Vector4D operand.</param>
            <returns>The Difference of the 2 Vector4Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.Multiply(AdvanceMath.Vector4D,System.Double)">
            <summary>
            Does Scaler Multiplication on a Vector4D.
            </summary>
            <param name="source">The Vector4D to be multiplied.</param>
            <param name="scalar">The scalar value that will multiply the Vector4D.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.Multiply(System.Double,AdvanceMath.Vector4D)">
            <summary>
            Does Scaler Multiplication on a Vector4D.
            </summary>
            <param name="scalar">The scalar value that will multiply the Vector4D.</param>
            <param name="source">The Vector4D to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.Dot(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Does a Dot Operation Also know as an Inner Product.
            </summary>
            <param name="left">The left Vector4D operand.</param>
            <param name="right">The right Vector4D operand.</param>
            <returns>The Dot Product (Inner Product).</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Dot_product"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.GetMagnitudeSq(AdvanceMath.Vector4D)">
            <summary>
            Gets the Squared <see cref="P:AdvanceMath.Vector4D.Magnitude"/> of the Vector4D that is passed.
            </summary>
            <param name="source">The Vector4D whos Squared Magnitude is te be returned.</param>
            <returns>The Squared Magnitude.</returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.GetMagnitude(AdvanceMath.Vector4D)">
            <summary>
            Gets the <see cref="P:AdvanceMath.Vector4D.Magnitude"/> of the Vector4D that is passed.
            </summary>
            <param name="source">The Vector4D whos Magnitude is te be returned.</param>
            <returns>The Magnitude.</returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.SetMagnitude(AdvanceMath.Vector4D,System.Double)">
            <summary>
            Sets the <see cref="P:AdvanceMath.Vector4D.Magnitude"/> of a Vector4D.
            </summary>
            <param name="source">The Vector4D whose Magnitude is to be changed.</param>
            <param name="magnitude">The Magnitude.</param>
            <returns>A Vector4D with the new Magnitude</returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.Negate(AdvanceMath.Vector4D)">
            <summary>
            Negates a Vector4D.
            </summary>
            <param name="source">The Vector4D to be Negated.</param>
            <returns>The Negated Vector4D.</returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.Normalize(AdvanceMath.Vector4D)">
            <summary>
            This returns the Normalized Vector4D that is passed. This is also known as a Unit Vector.
            </summary>
            <param name="source">The Vector4D to be Normalized.</param>
            <returns>The Normalized Vector4D. (Unit Vector)</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.Project(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Thie Projects the left Vector4D onto the Right Vector4D.
            </summary>
            <param name="left">The left Vector4D operand.</param>
            <param name="right">The right Vector4D operand.</param>
            <returns>The Projected Vector4D.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Projection_%28linear_algebra%29"/></remarks>
        </member>
        <member name="F:AdvanceMath.Vector4D.X">
            <summary>
            This is the X value. 
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.Y">
            <summary>
            This is the Y value. 
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.Z">
            <summary>
            This is the Z value. 
            </summary>
        </member>
        <member name="F:AdvanceMath.Vector4D.W">
            <summary>
            This is the W value. 
            </summary>
        </member>
        <member name="M:AdvanceMath.Vector4D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a New Vector4D Instance on the Stack.
            </summary>
            <param name="X">The X value.</param>
            <param name="Y">The Y value.</param>
            <param name="Z">The Z value.</param>
            <param name="W">The W value.</param>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_Addition(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Adds 2 Vectors2Ds.
            </summary>
            <param name="left">The left Vector4D operand.</param>
            <param name="right">The right Vector4D operand.</param>
            <returns>The Sum of the 2 Vector4Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_Subtraction(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Subtracts 2 Vector4Ds.
            </summary>
            <param name="left">The left Vector4D operand.</param>
            <param name="right">The right Vector4D operand.</param>
            <returns>The Difference of the 2 Vector4Ds.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Vector_addition_and_subtraction"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_Multiply(AdvanceMath.Vector4D,System.Double)">
            <summary>
            Does Scaler Multiplication on a Vector4D.
            </summary>
            <param name="source">The Vector4D to be multiplied.</param>
            <param name="scalar">The scalar value that will multiply the Vector4D.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_Multiply(System.Double,AdvanceMath.Vector4D)">
            <summary>
            Does Scaler Multiplication on a Vector4D.
            </summary>
            <param name="scalar">The scalar value that will multiply the Vector4D.</param>
            <param name="source">The Vector4D to be multiplied.</param>
            <returns>The Product of the Scaler Multiplication.</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Scalar_multiplication"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_Multiply(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Does a Dot Operation Also know as an Inner Product.
            </summary>
            <param name="left">The left Vector4D operand.</param>
            <param name="right">The right Vector4D operand.</param>
            <returns>The Dot Product (Inner Product).</returns>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Dot_product"/></remarks>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_UnaryNegation(AdvanceMath.Vector4D)">
            <summary>
            Negates a Vector4D.
            </summary>
            <param name="source">The Vector4D to be Negated.</param>
            <returns>The Negated Vector4D.</returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_Equality(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Specifies whether the Vector4Ds contain the same coordinates.
            </summary>
            <param name="left">The left Vector4D to test.</param>
            <param name="right">The right Vector4D to test.</param>
            <returns>true if the Vector4Ds have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.op_Inequality(AdvanceMath.Vector4D,AdvanceMath.Vector4D)">
            <summary>
            Specifies whether the Vector4Ds do not contain the same coordinates.
            </summary>
            <param name="left">The left Vector4D to test.</param>
            <param name="right">The right Vector4D to test.</param>
            <returns>true if the Vector4Ds do not have the same coordinates; otherwise false</returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.GetHashCode">
            <summary>
            	Provides a unique hash code based on the member variables of this
            	class.  This should be done because the equality operators (==, !=)
            	have been overriden by this class.
            	<p/>
            	The standard implementation is a simple XOR operation between all local
            	member variables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdvanceMath.Vector4D.Equals(System.Object)">
            <summary>
            	Compares this Vector to another object.  This should be done because the 
            	equality operators (==, !=) have been overriden by this class.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:AdvanceMath.Vector4D.Magnitude">
            <summary>
            Gets or Sets the Magnitude (Length) of the Vector4D. 
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Length_of_a_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector4D.MagnitudeSq">
            <summary>
            Gets the Squared Magnitude of the Vector4D.
            </summary>
        </member>
        <member name="P:AdvanceMath.Vector4D.Normalized">
            <summary>
            Gets the Normalized Vector4D. (Unit Vector)
            </summary>
            <remarks><seealso href="http://en.wikipedia.org/wiki/Vector_%28spatial%29#Unit_vector"/></remarks>
        </member>
        <member name="P:AdvanceMath.Vector4D.AdvanceMath#IAdvanceValueType#Count">
            <summary>
            The Number of Variables accesable though the indexer.
            </summary>
        </member>
        <member name="T:Jypeli.AnalogState">
            <summary>
            Parametrit analogisen ohjauksen (hiiren tai ohjaustikun) tapahtumalle.
            </summary>    
        </member>
        <member name="F:Jypeli.AnalogState.State">
            <summary>
            Peliohjaimen analoginäppäimen paikkakoordinaatti.
            Arvo on välillä 0.0 - 1.0.
            </summary>
        </member>
        <member name="F:Jypeli.AnalogState.AnalogChange">
            <summary>
            Muutos peliohjaimen analoginäppäimen paikassa.
            </summary>
        </member>
        <member name="F:Jypeli.AnalogState.StateVector">
            <summary>
            Analogisen Ohjainsauvan paikka tai puhelimen asento.
            Arvo on (0, 0) kun sauva on keskellä tai puhelinta ei ole kallistettu.
            X- sekä Y-koordinaattien arvot ovat välillä -1.0 - 1.0.
            </summary>
        </member>
        <member name="F:Jypeli.AnalogState.MouseMovement">
            <summary>
            Hiiren liikevektori.
            </summary>
        </member>
        <member name="M:Jypeli.AnalogState.#ctor(Jypeli.ButtonState,Jypeli.Vector)">
            <summary>
            Parameters for mouse events.
            </summary>
        </member>
        <member name="M:Jypeli.AnalogState.#ctor(System.Double,System.Double,Jypeli.Vector)">
            <summary>
            Parameters for gamecontroller events.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.Automobile">
            <summary>
            Auto.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Automobile.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden auton.
            </summary>
            <param name="width">Auton leveys (X-suunnassa).</param>
            <param name="height">Auton korkeus (Y-suunnassa).</param>
        </member>
        <member name="M:Jypeli.Assets.Automobile.Accelerate(System.Double)">
            <summary>
            Kiihdyttää.
            </summary>
            <param name="time">Kuinka monta sekuntia kiihdytetään.</param>
        </member>
        <member name="M:Jypeli.Assets.Automobile.Brake(System.Double)">
            <summary>
            Jarruttaa.
            </summary>
            <param name="time">Kuinka monta sekuntia jarrutetaan.</param>
        </member>
        <member name="M:Jypeli.Assets.Automobile.Accelerate">
            <summary>
            Kiihdyttää.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Automobile.Reverse">
            <summary>
            Kiihdyttää takaperin.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Automobile.Brake">
            <summary>
            Jarruttaa.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Automobile.Turn(Jypeli.Angle,System.Double)">
            <summary>
            Kääntyy niin paljon kuin auton ohjattavuus sallii.
            </summary>
            <param name="angle">Kääntökulma.</param>
            <param name="time">Aika, joka kääntämiseen käytetään.</param>
        </member>
        <member name="M:Jypeli.Assets.Automobile.Update(Jypeli.Time)">
            <summary>
            Ajetaan kun pelitilannetta päivitetään. Päivityksen voi toteuttaa omassa luokassa toteuttamalla tämän
            metodin. Perityn luokan metodissa tulee kutsua kantaluokan metodia.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Automobile.SpeedMeter">
            <summary>
            Nopeusmittari, joka mittaa auton nopeuden (moottorin nopeus).
            Huomaa, että ei vastaa aina <c>Velocity</c>-ominaisuuden arvoa.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Automobile.Speed">
            <summary>
            Auton moottorin nopeus.
            Huomaa, että ei vastaa aina <c>Velocity</c>-ominaisuuden arvoa.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Automobile.TopSpeed">
            <summary>
            Suurin nopeus, johon auto voi kiihdyttää.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Automobile.Acceleration">
            <summary>
            Auton kiihtyvyys, eli kuinka monta yksikköä korkeintaan nopeutta voidaan
            lisätä sekunnissa kiihdyttämällä.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Automobile.BrakeDeceleration">
            <summary>
            Jarrujen hidastavuus, eli kuinka monta yksikköä korkeintaan nopeutta voidaan
            vähentää sekunnissa jarruttamalla.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Automobile.Maneuverability">
            <summary>
            Ohjattavuus, eli kulma jonka auto voi korkeintaan kääntyä sekunnissa.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.DriverBrain">
            <summary>
            Ajajan aivot.
            Laskee checkpointteja ja kierroksia automaattisesti.
            Nämä aivot ovat ihmispelaajalle, käytä tietokoneautoille <c>ComputerDriverBrain</c>-luokkaa.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.DriverBrain.#ctor(System.Collections.Generic.List{Jypeli.PhysicsObject},System.Int32)">
            <summary>
            Alustaa uudet ajajan aivot.
            </summary>
            <param name="checkpoints">Tarkistuspisteet, joiden läpi pelaajan on ajettava.</param>
            <param name="rounds">Kierrosten määrä.</param>
        </member>
        <member name="M:Jypeli.Assets.DriverBrain.OnCollision(Jypeli.IGameObject)">
            <summary>
            Kutsutaan, kun tapahtuu törmäys.
            </summary>
            <param name="target">Toinen törmääjä.</param>
        </member>
        <member name="P:Jypeli.Assets.DriverBrain.Checkpoints">
            <summary>
            Lista checkpointeista eli tarkistuspisteistä radalla.
            Auton tulee ajaa kaikkien näiden pisteiden läpi oikeassa järjestyksessä, että kierros
            lasketaan suoritetuksi.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.DriverBrain.NextCheckpoint">
            <summary>
            Seuraava tarkistuspiste.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.DriverBrain.RoundsDriven">
            <summary>
            Mittari joka mittaa ajettuja kierroksia.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.DriverBrain.CheckpointsPassed">
            <summary>
            Mittari joka mittaa läpäistyjä tarkistuspisteitä tällä kierroksella.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.ComputerDriverBrain">
            <summary>
            Tietokoneajajan aivot.
            Kuten <c>DriverBrain</c>, mutta osaa automaattisesti suunnistaa checkpointilta toiselle
            vauhtia säädellen.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.ComputerDriverBrain.#ctor(System.Collections.Generic.List{Jypeli.PhysicsObject},System.Int32)">
            <summary>
            Alustaa uudet tietokoneajajan aivot.
            </summary>
            <param name="checkpoints">Tarkistuspisteet, joiden läpi pelaajan on ajettava.</param>
            <param name="rounds">Kierrosten määrä.</param>
        </member>
        <member name="M:Jypeli.Assets.ComputerDriverBrain.Update(Jypeli.Time)">
            <summary>
            Kutsutaan, kun tilaa päivitetään.
            Ajamislogiikka sijaitsee täällä.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:Jypeli.Assets.Explosion">
            <summary>
            Räjähdys.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Explosion.#ctor(Jypeli.Assets.Explosion)">
            <summary>
            Luo uuden räjähdyksen entisen pohjalta.
            </summary>
            <param name="src">Kopioitava räjähdys</param>
        </member>
        <member name="M:Jypeli.Assets.Explosion.#ctor(System.Double)">
            <summary>
            Luo uuden räjähdyksen.
            </summary>
            <param name="radius">Räjähdyksen säde.</param>
        </member>
        <member name="M:Jypeli.Assets.Explosion.AddShockwaveHandler(Jypeli.IPhysicsObject,System.Action{Jypeli.IPhysicsObject,Jypeli.Vector})">
            <summary>
            Laukaisee aliohjelman handler, kun tämän räjähdyksen paineaalto osuu olioon o.
            </summary>
            <param name="o">Olio, johon paineaallon on osuttava</param>
            <param name="handler">Tapahtuman käsittelevä aliohjelma</param>
        </member>
        <member name="M:Jypeli.Assets.Explosion.AddShockwaveHandler(System.String,System.Action{Jypeli.IPhysicsObject,Jypeli.Vector})">
            <summary>
            Laukaisee aliohjelman handler, kun tämän räjähdyksen paineaalto osuu olioon o.
            </summary>
            <param name="o">Olio, johon paineaallon on osuttava</param>
            <param name="handler">Tapahtuman käsittelevä aliohjelma</param>
        </member>
        <member name="M:Jypeli.Assets.Explosion.Update(Jypeli.Time)">
            <summary>
            Ajetaan kun pelitilannetta päivitetään. Päivityksen voi toteuttaa omassa luokassa toteuttamalla tämän
            metodin. Perityn luokan metodissa tulee kutsua kantaluokan metodia.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Explosion.UseShockWave">
            <summary>
            Onko paineaalto käytössä.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Explosion.MaxRadius">
            <summary>
            Suurin säde, johon räjähdys voi kasvaa.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Explosion.Sound">
            <summary>
            Räjähdyksen ääniefekti.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Explosion.CurrentRadius">
            <summary>
            Räjähdyksen nykyinen säde.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Explosion.ShockwaveColor">
            <summary>
            Paineaallon väri.
            <example>
            Shockwave.Color = Color.White
            </example>
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Explosion.Speed">
            <summary>
            Räjähdyksen leviämisnopeus (pikseliä sekunnissa)
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Explosion.Force">
            <summary>
            Voima, jolla räjähdyksen paineaallon uloin reuna heittää olioita räjähdyksestä poispäin.
            Vihje: voit käyttää myös negatiivisia arvoja, jolloin räjähdys imee olioita sisäänsä.
            </summary>
        </member>
        <member name="E:Jypeli.Assets.Explosion.ShockwaveReachesObject">
            <summary>
            Tapahtuu, kun paineaalto osuu peliolioon.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.PathFollowerBrain">
            <summary>
            Aivot, jotka seuraavat annettua polkua.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PathFollowerBrain.#ctor">
            <summary>
            Luo uudet polunseuraaja-aivot.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PathFollowerBrain.#ctor(System.Double)">
            <summary>
            Luo uudet polunseuraaja-aivot ja asettaa niille nopeuden.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PathFollowerBrain.#ctor(Jypeli.Vector[])">
            <summary>
            Luo aivot, jotka seuraavat polkua <c>path</c>.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PathFollowerBrain.#ctor(System.Double,Jypeli.Vector[])">
            <summary>
            Luo aivot, jotka seuraavat polkua <c>path</c>.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PathFollowerBrain.#ctor(System.Collections.Generic.List{Jypeli.Vector})">
            <summary>
            Luo aivot, jotka seuraavat polkua <c>path</c>.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PathFollowerBrain.#ctor(System.Double,System.Collections.Generic.List{Jypeli.Vector})">
            <summary>
            Luo aivot, jotka seuraavat polkua <c>path</c>.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.PathFollowerBrain.Path">
            <summary>
            Polku, eli lista pisteistä joita aivot seuraa.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.PathFollowerBrain.WaypointRadius">
            <summary>
            Etäisyys, jonka sisällä ollaan perillä pisteessä.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.PathFollowerBrain.DistanceToWaypoint">
            <summary>
            Etäisyys seuraavaan pisteeseen.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.PathFollowerBrain.Loop">
            <summary>
            Jos true, palataan alkupisteeseen ja kierretään reittiä loputtomiin.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.PathFollowerBrain.ReverseReturn">
            <summary>
            Palataanko samaa reittiä takaisin.
            </summary>
        </member>
        <member name="E:Jypeli.Assets.PathFollowerBrain.ArrivedAtEnd">
            <summary>
            Tapahtuu, kun saavutaan reitin päähän.
            </summary>
        </member>
        <member name="T:PlatformCharacter">
            <summary>
            Tasohyppelypelin hahmo. Voi liikkua ja hyppiä. Lisäksi sillä voi olla ase.
            </summary>
        </member>
        <member name="M:PlatformCharacter.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden tasohyppelyhahmon.
            </summary>
            <param name="width">Hahmon leveys</param>
            <param name="height">Hahmon korkeus</param>
        </member>
        <member name="M:PlatformCharacter.#ctor(System.Double,System.Double,Jypeli.Shape)">
            <summary>
            Luo uuden tasohyppelyhahmon.
            <param name="width">Hahmon leveys</param>
            <param name="height">Hahmon korkeus</param>
            </summary>
        </member>
        <member name="M:PlatformCharacter.Walk(System.Double)">
            <summary>
            Liikuttaa hahmoa.
            </summary>
            <param name="horizontalVelocity">Nopeus vaakasuunnassa.</param>
        </member>
        <member name="M:PlatformCharacter.Turn(Jypeli.Direction)">
            <summary>
            Kääntyy.
            </summary>
            <param name="direction">Suunta</param>
        </member>
        <member name="M:PlatformCharacter.Jump(System.Double)">
            <summary>
            Hyppää, jos hahmo on staattisen olion päällä.
            </summary>
            <param name="speed">Lähtönopeus maasta.</param>
            <returns><code>true</code> jos hyppäys onnistui.</returns>
        </member>
        <member name="M:PlatformCharacter.IsAboutToFall">
            <summary>
            Onko hahmo astumassa tyhjän päälle.
            </summary>
            <returns><code>true</code> jos on menossa tyhjän päälle.</returns>
        </member>
        <member name="M:PlatformCharacter.ForceJump(System.Double)">
            <summary>
            Hyppää vaikka olio ei olisikaan toisen päällä.
            </summary>
            <param name="speed">Lähtönopeus maasta.</param>
        </member>
        <member name="M:PlatformCharacter.IsStandingOn(Jypeli.PhysicsObject,System.Double)">
            <summary>
            Checks if the character is located on top of the target.
            </summary>
            <param name="target">Another object</param>
            <param name="yTolerance">How close must the distance on the y-axis must be</param>
        </member>
        <member name="M:PlatformCharacter.Update(Jypeli.Time)">
            <summary>
            Ajetaan kun pelitilannetta päivitetään. Päivityksen voi toteuttaa omassa luokassa toteuttamalla tämän
            metodin. Perityn luokan metodissa tulee kutsua kantaluokan metodia.
            </summary>
            <param name="time">Peliaika.</param>
        </member>
        <member name="M:PlatformCharacter.Move(Jypeli.Vector)">
            <summary>
            Siirtää oliota.
            </summary>
            <param name="movement">Vektori, joka määrittää kuinka paljon siirretään.</param>
        </member>
        <member name="P:PlatformCharacter.FacingDirection">
            <summary>
            Hahmon rintamasuunta (vasen tai oikea).
            </summary>
        </member>
        <member name="P:PlatformCharacter.TurnsWhenWalking">
            <summary>
            Kääntyykö hahmo automaattisesti kun se kävelee.
            </summary>
        </member>
        <member name="P:PlatformCharacter.Weapon">
            <summary>
            Hahmolla oleva ase.
            </summary>
        </member>
        <member name="P:PlatformCharacter.CanMoveOnAir">
            <summary>
            Jos <c>false</c>, hahmoa ei voi liikuttaa kun se on ilmassa.
            </summary>
        </member>
        <member name="P:PlatformCharacter.MaintainMomentum">
            <summary>
            Jos <c>true</c>, hahmon liike jatkuu hidastuen vaikka kävelemisen lopettaa.
            </summary>
        </member>
        <member name="P:PlatformCharacter.AnimWalk">
            <summary>
            Kävelyanimaatio (oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter.AnimJump">
            <summary>
            Hyppyanimaatio (oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter.AnimFall">
            <summary>
            Putoamisanimaatio (oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter.LoopJumpAnim">
            <summary>
            Toistetaanko hyppyanimaatiota useammin kuin kerran.
            </summary>
        </member>
        <member name="P:PlatformCharacter.LoopFallAnim">
            <summary>
            Toistetaanko putoamisanimaatiota useammin kuin kerran.
            </summary>
        </member>
        <member name="P:PlatformCharacter.AnimIdle">
            <summary>
            Animaatio, jota käytetään kun hahmo on paikallaan (kääntyneenä oikealle)
            </summary>
        </member>
        <member name="P:PlatformCharacter.WalkOnAir">
            <summary>
            Toistetaanko kävelyanimaatiota ilmassa liikuttaessa?
            </summary>
        </member>
        <member name="E:PlatformCharacter.DirectionChanged">
            <summary>
            Hahmon suunnan muutos.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.Projectile">
            <summary>
            Ammus.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Projectile.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Alustaa uuden pyöreän ammuksen kuvan kanssa.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Projectile.#ctor(System.Double,System.Double,Jypeli.Color)">
            <summary>
            Alustaa uuden pyöreän ammuksen värin kanssa.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Projectile.#ctor(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Alustaa uuden nelikulmaisen ammuksen kuvan kanssa.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Projectile.#ctor(System.Double,System.Double,System.Double,Jypeli.Color)">
            <summary>
            Alustaa uuden nelikulmaisen ammuksen värin kanssa.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.Tank">
            <summary>
            Yksinkertainen tankki eli panssarivaunu.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Tank.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden tankin.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Tank.Accelerate(System.Double)">
            <summary>
            Kiihdyttää tankkia.
            </summary>
            <param name="power">Teho välillä <c>-1.0</c>-<c>1.0</c></param>
        </member>
        <member name="M:Jypeli.Assets.Tank.Shoot(System.Double)">
            <summary>
            Ampuu halutulla voimalla.
            </summary>
            <param name="power">Voima.</param>
        </member>
        <member name="M:Jypeli.Assets.Tank.Shoot">
            <summary>
            Ampuu tankin tykillä, jos ammuksia on vielä jäljellä.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Tank.Size">
            <summary>
            Tankin koko. Tätä ei voi muuttaa.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Tank.HitPoints">
            <summary>
            Tankin osumapisteet.
            Kun nämä menevät nollaan, tankki hajoaa.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Tank.Ammo">
            <summary>
            Ammusten määrä.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Tank.Cannon">
            <summary>
            Tankin piippu.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.Weapon">
            <summary>
            Ase.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Weapon.#ctor(System.Double,System.Double)">
            <summary>
            Luo uuden aseen.
            </summary>
            <param name="width">Leveys.</param>
            <param name="height">Korkeus.</param>
        </member>
        <member name="M:Jypeli.Assets.Weapon.CreateProjectile">
            <summary>
            Luo uuden ammuksen.
            Ylikirjoitetaan aliluokissa.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Assets.Weapon.Shoot">
            <summary>
            Ampuu aseella, ja palauttaa ammuksen tai <c>null</c>, jos
            ampuminen ei onnistu (esimerkiksi jos panokset ovat lopussa).
            </summary>
            <remarks>
            Tätä metodia käyttämällä pääsee muokkaamaan ammusta, esimerkiksi muuttamaan
            sen fysiikkaominaisuuksia. Huomaa kuitenkin, että tällöin tulee aina
            tarkistaa että ammus ei ole <c>null</c>.
            </remarks>
            <returns>Ammuttu panos tai <c>null</c>.</returns>
        </member>
        <member name="P:Jypeli.Assets.Weapon.IsReady">
            <summary>
            Voiko asetta valmiina käytettäväksi.
            Ottaa huomioon tulinopeuden, ammukset jne.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.CanHitOwner">
            <summary>
            Voi ammus osua aseen omistajaan?
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.Power">
            <summary>
            Voima, jolla panos ammutaan. Nollautuu ammuttaessa.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.Ammo">
            <summary>
            Panosten määrä.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.InfiniteAmmo">
            <summary>
            Loputtomat ammukset.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.AmmoIgnoresGravity">
            <summary>
            Jättävätkö panokset painovoiman huomiotta.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.AmmoIgnoresExplosions">
            <summary>
            Jättävätkö panokset räjähdyksen paineaallot huomiotta.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.MaxAmmoLifetime">
            <summary>
            Ammuksen elinikä.
            TimeSpan.MaxValue jos ikuinen, TimeSpan.FromSeconds( 5 ) jos 5 sekuntia jne.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.AttackSound">
            <summary>
            Hyökkäysääni (pistoolin pamaus jne.)
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.TimeBetweenUse">
            <summary>
            Kuinka kauan kestää, että asetta voidaan käyttää uudestaan.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.FireRate">
            <summary>
            Tulinopeus (ammusta sekunnissa)
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Weapon.ProjectileCollision">
            <summary>
            Tapahtumankäsittelijä ammuksen törmäykselle.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.Cannon">
            <summary>
            Yksinkertainen tykki, joka ampuu kuulia tai muuta ammuksia.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Cannon.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden tykin.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.AssaultRifle">
            <summary>
            Rynnäkkökivääri.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.AssaultRifle.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden rynnäkkökiväärin.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.PlasmaCannon">
            <summary>
            Plasmatykki.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.PlasmaCannon.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden plasmakiväärin.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.LaserGun">
            <summary>
            Lasertykki
            </summary>
        </member>
        <member name="M:Jypeli.Assets.LaserGun.#ctor(System.Double,System.Double)">
            <summary>
            Alustaa uuden laser-tykin.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.CannonBall">
            <summary>
            Tykinkuula.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.CannonBall.#ctor(System.Double)">
            <summary>
            Alustaa uuden tykinkuulan.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.Bullet">
            <summary>
            Luoti.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Bullet.#ctor(System.Double)">
            <summary>
            Alustaa uuden luodin.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.Grenade">
            <summary>
            Kranaatti.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.Grenade.#ctor(System.Double)">
            <summary>
            Luo uuden kranaatin, joka räjähtää kolmen sekunnin päästä.
            </summary>
            <param name="radius"></param>
        </member>
        <member name="M:Jypeli.Assets.Grenade.#ctor(System.Double,System.TimeSpan)">
            <summary>
            Luo uuden kranaatin.
            </summary>
            <param name="radius">Säde.</param>
            <param name="fuseTime">Kuinka kauan kestää ennen räjähdystä.</param>
        </member>
        <member name="M:Jypeli.Assets.Grenade.Explode">
            <summary>
            Räjäytä kranaatti.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Grenade.Explosion">
            <summary>
            Räjähdys, joka kranaatista syntyy.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Grenade.ExplosionRadius">
            <summary>
            Räjähdyksen säde.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Grenade.ExplosionSpeed">
            <summary>
            Räjähdyksen nopeus.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Grenade.ExplosionForce">
            <summary>
            Räjähdyksen voima.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.Grenade.FuseTime">
            <summary>
            Aika, jonka päästä ammus räjähtää itsestään.
            </summary>
        </member>
        <member name="T:Jypeli.Assets.ClusterGrenade">
            <summary>
            Rypälepommi. Hajoaa räjähtäessään pienempiin osiin, jotka
            voivat edelleen räjähtää pienempiin osiin.
            </summary>
        </member>
        <member name="M:Jypeli.Assets.ClusterGrenade.#ctor(System.Double,System.Int32)">
            <summary>
            Alustaa uuden rypälepommin.
            </summary>
            <param name="radius">Säde.</param>
            <param name="cl">Kuinka monta kertaa rypäleet hajoavat edelleen. Kuitenkin vähintään yhden kerran.</param>
        </member>
        <member name="M:Jypeli.Assets.ClusterGrenade.Explode">
            <summary>
            Räjäyttää kranaatin sirpaleiksi.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.ClusterGrenade.NumberOfClusters">
            <summary>
            Sirpaleiden määrä, joka räjähdyksestä syntyy.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.ClusterGrenade.ClusterDirection">
            <summary>
            Sirpaleiden hajontasuunta.
            </summary>
        </member>
        <member name="P:Jypeli.Assets.ClusterGrenade.ClusterArc">
            <summary>
            Sirpaleiden hajontakaari.
            </summary>
        </member>
        <member name="T:Jypeli.Camera">
            <summary>
            Kamera. Määrittää mikä osa pelitasosta on kerralla näkyvissä.
            </summary>
        </member>
        <member name="F:Jypeli.Camera.Position">
            <summary>
            Kameran sijainti.
            </summary>
        </member>
        <member name="F:Jypeli.Camera.Velocity">
            <summary>
            Kameran liikkumisnopeus.
            </summary>
        </member>
        <member name="M:Jypeli.Camera.#ctor">
            <summary>
            Luo uuden kameran.
            </summary>
        </member>
        <member name="M:Jypeli.Camera.ScreenToWorld(Jypeli.Vector)">
            <summary>
            Muuntaa annetun pisteen ruutukoordinaateista maailmankoordinaatteihin.
            </summary>
        </member>
        <member name="M:Jypeli.Camera.WorldToScreen(Jypeli.Vector)">
            <summary>
            Muuntaa annetun pisteen maailmankoordinaateista ruutukoordinaatteihin.
            </summary>
        </member>
        <member name="M:Jypeli.Camera.ScreenToWorld(Jypeli.Vector,Jypeli.Layer)">
            <summary>
            Muuntaa annetun pisteen ruutukoordinaateista maailmankoordinaatteihin
            ottaen huomioon oliokerroksen suhteellisen siirtymän.
            </summary>
        </member>
        <member name="M:Jypeli.Camera.Move(Jypeli.Vector)">
            <summary>
            Kohdistaa kameran.
            </summary>
            <param name="v">Koordinaatti vektorina johon kamera kohdistetaan.</param>
        </member>
        <member name="M:Jypeli.Camera.Zoom(System.Double)">
            <summary>
            Zoomaa.
            </summary>
            <param name="zoom">
            Zoomauskerroin. Ykköstä suurempi (esim. 1.5) lähentää ja
            ykköstä pienempi (esim. 0.5) zoomaa kauemmas.
            </param>
        </member>
        <member name="M:Jypeli.Camera.Reset">
            <summary>
            Resetoi kameran (keskittää, laittaa zoomin oletusarvoon ja lopettaa seuraamisen).
            </summary>
        </member>
        <member name="M:Jypeli.Camera.Follow(Jypeli.GameObject[])">
            <summary>
            Seuraa yhtä tai useampaa peliobjektia.
            </summary>
            <param name="gameobjects">Seurattavat peliobjektit.</param>
        </member>
        <member name="M:Jypeli.Camera.FollowX(Jypeli.GameObject[])">
            <summary>
            Seuraa jotakin peliobjektia X- eli vaakasuunnassa.
            </summary>
            <param name="gameobjects">Seurattavat peliobjektit.</param>
        </member>
        <member name="M:Jypeli.Camera.FollowY(Jypeli.GameObject[])">
            <summary>
            Seuraa jotakin peliobjektia Y- eli pystysuunnassa.
            </summary>
            <param name="gameobjects">Seurattavat peliobjektit.</param>
        </member>
        <member name="M:Jypeli.Camera.StopFollowing">
            <summary>
            Lopettaa olio(iden) seuraamisen.
            </summary>
        </member>
        <member name="M:Jypeli.Camera.ZoomTo(Jypeli.Vector,Jypeli.Vector)">
            <summary>
            Zoomaa ja sijoittaa kameran niin, että parametreina annettua alue näkyy kokonaan ruudulla.
            </summary>
            <param name="bottomLeft">Alueen vasen alanurkka.</param>
            <param name="topRight">Alueen oikea ylänurkka.</param>
        </member>
        <member name="M:Jypeli.Camera.ZoomToAllObjects(System.Double)">
            <summary>
            Zoomaa ja sijoittaa kameran siten, että kaikki pelioliot ovat yhtäaikaa näkyvissä.
            </summary>
            <param name="borderSize">Reunalle jätettävä tila (jos negatiivinen, niin osa kentästä jää piiloon).</param>
        </member>
        <member name="M:Jypeli.Camera.ZoomTo(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Zoomaa ja sijoittaa kameran niin, että parametreina annettua alue näkyy kokonaan ruudulla.
            </summary>
            <param name="left">Alueen vasemman reunan x-koordinaatti.</param>
            <param name="bottom">Alueen alareunan y-koordinaatti.</param>
            <param name="right">Alueen oikean reunan x-koordinaatti.</param>
            <param name="top">Alueen yläreunan y-koordinaatti.</param>
        </member>
        <member name="M:Jypeli.Camera.ZoomToLevel">
            <summary>
            Zoomaa ja keskittää kameran siten, että koko kenttä on näkyvissä kerralla.
            </summary>
        </member>
        <member name="M:Jypeli.Camera.ZoomToLevel(System.Double)">
            <summary>
            Zoomaa ja keskittää kameran siten, että koko kenttä on näkyvissä kerralla. Tällöin kamera ei seuraa mitään oliota.
            </summary>
            <param name="borderSize">Reunalle jätettävä tila (jos negatiivinen, niin osa kentästä jää piiloon).</param>
        </member>
        <member name="M:Jypeli.Camera.Update(Jypeli.Time)">
            <summary>
            Ajetaan kun pelitilannetta päivitetään.
            </summary>
            <param name="time">Peliaika</param>
        </member>
        <member name="P:Jypeli.Camera.X">
            <summary>
            Kameran paikan X-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.Y">
            <summary>
            Kameran paikan Y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.ZoomFactor">
            <summary>
            Kameran zoomauskerroin.
            Oletuksena 1.0. Mitä suurempi zoomauskerroin, sitä lähempänä kamera on (esim 2.0 on 2 x lähempänä) ja toisinpäin.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.StayInLevel">
            <summary>
            Jos tosi, kamera ei mene koskaan kentän ulkopuolelle.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.FollowedObject">
            <summary>
            Olio, jota kamera seuraa. Jos <c>null</c>, mitään oliota ei seurata.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.FollowsX">
            <summary>
            Seurataanko oliota (FollowedObject) x- eli vaakasuunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.FollowsY">
            <summary>
            Seurataanko oliota (FollowedObject) y- eli pystysuunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.FollowOffset">
            <summary>
            Jos kamera seuraa oliota, tällä voi säätää missä kohtaa ruutua pelaaja näkyy.
            Toisin sanoen ruutukoordinaateissa kerrotaan, kuinka kaukana ruudun keskustasta
            seurattava olio näkyy.
            </summary>
            <example>
            Pelaajan näyttäminen ruudun alareunassa, vaakasuunnassa keskellä:
            <code>
            Camera.Follow( pelaaja );
            Camera.FollowOffset = new Vector( 0, Screen.Height * 0.4 );
            </code>
            </example>
        </member>
        <member name="P:Jypeli.Camera.FollowXMargin">
            <summary>
            Jos kamera seuraa useita olioita, tällä voi säätää kuinka paljon vasempaan ja
            oikeaan reunaan jätetään tyhjää tilaa.
            </summary>
        </member>
        <member name="P:Jypeli.Camera.FollowYMargin">
            <summary>
            Jos kamera seuraa useita olioita, tällä voi säätää kuinka paljon ylä- ja
            alareunaan jätetään tyhjää tilaa.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Handler">
            <summary>
            Ohjaintapahtumankäsittelijä ilman parametreja.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Handler`1">
            <summary>
            Ohjaintapahtumankäsittelijä yhdellä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Handler`2">
            <summary>
            Ohjaintapahtumankäsittelijä kahdella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Handler`3">
            <summary>
            Ohjaintapahtumankäsittelijä kolmella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Handler`4">
            <summary>
            Ohjaintapahtumankäsittelijä neljällä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.MultiKeyHandler">
            <summary>
            Ohjaintapahtumankäsittelijä ilman parametreja.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.MultiKeyHandler`1">
            <summary>
            Ohjaintapahtumankäsittelijä yhdellä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.MultiKeyHandler`2">
            <summary>
            Ohjaintapahtumankäsittelijä kahdella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.MultiKeyHandler`3">
            <summary>
            Ohjaintapahtumankäsittelijä kolmella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.MultiKeyHandler`4">
            <summary>
            Ohjaintapahtumankäsittelijä neljällä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.AnalogHandler">
            <summary>
            Ohjaintapahtumankäsittelijä ilman parametreja.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.AnalogHandler`1">
            <summary>
            Ohjaintapahtumankäsittelijä yhdellä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.AnalogHandler`2">
            <summary>
            Ohjaintapahtumankäsittelijä kahdella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.AnalogHandler`3">
            <summary>
            Ohjaintapahtumankäsittelijä kolmella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.AnalogHandler`4">
            <summary>
            Ohjaintapahtumankäsittelijä neljällä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.TouchHandler">
            <summary>
            Ohjaintapahtumankäsittelijä ilman parametreja.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.TouchHandler`1">
            <summary>
            Ohjaintapahtumankäsittelijä yhdellä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.TouchHandler`2">
            <summary>
            Ohjaintapahtumankäsittelijä kahdella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.TouchHandler`3">
            <summary>
            Ohjaintapahtumankäsittelijä kolmella parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.TouchHandler`4">
            <summary>
            Ohjaintapahtumankäsittelijä neljällä parametrilla.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Controls">
            <summary>
            Sisältää ohjaimet.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controls.#ctor">
            <summary>
            Luo uuden kontrolli-olion.
            Jos mahdollista, käytä mieluummin peliluokan omaa Controls-ominaisuutta.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controls.PurgeBuffer">
            <summary>
            Tyhjentää kaikkien peliohjaimien ohjauspuskurit, eli jonossa odottavat
            näppäimenpainallukset ja muut ohjaintapahtumat.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Controls.GetHelpTexts">
            <summary>
            Palauttaa kaikki ohjaimien ohjetekstit listana.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Controls.Controls.Clear">
            <summary>
            Tyhjentää kaikki kontrollit.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controls.Keyboard">
            <summary>
            Näppäimistö.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controls.Mouse">
            <summary>
            Hiiri.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controls.Accelerometer">
            <summary>
            Kiihtyvyysanturi (Windows Phone 7)
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controls.TouchPanel">
            <summary>
            Kosketusnäyttö (Windows Phone 7)
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controls.PhoneBackButton">
            <summary>
            Back-nappi (Windows Phone 7)
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controls.GameControllers">
            <summary>
            Peliohjaimet 1-4.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Controls.BufferEmpty">
            <summary>
            Kaikkien ohjainten puskurien tila.
            </summary>
            <value><c>false</c> jos näppäimenpainalluksia on jonossa käsittelemättä, muuten <c>true</c>.</value>
        </member>
        <member name="T:Jypeli.Direction">
            <summary>
            Perussuunta tasossa.
            </summary>
        </member>
        <member name="F:Jypeli.Direction.None">
            <summary>
            Ei suuntaa.
            </summary>
        </member>
        <member name="F:Jypeli.Direction.Up">
            <summary>
            Suunta ylös.
            </summary>
        </member>
        <member name="F:Jypeli.Direction.Down">
            <summary>
            Suunta alas.
            </summary>
        </member>
        <member name="F:Jypeli.Direction.Left">
            <summary>
            Suunta vasemmalle.
            </summary>
        </member>
        <member name="F:Jypeli.Direction.Right">
            <summary>
            Suunta oikealle.
            </summary>
        </member>
        <member name="F:Jypeli.Direction.Vector">
            <summary>
            Suuntaa vastaava yksikkövektori.
            </summary>
        </member>
        <member name="F:Jypeli.Direction.Name">
            <summary>
            Suunnan nimi.
            </summary>
        </member>
        <member name="M:Jypeli.Direction.Inverse(Jypeli.Direction)">
            <summary>
            Palauttaa vastakkaisen suunnan annetulle suunnalle.
            </summary>
            <param name="d">Suunta.</param>
            <returns>Vastakkainen suunta.</returns>
        </member>
        <member name="P:Jypeli.Direction.Angle">
            <summary>
            Suuntaa vastaava kulma.
            </summary>
        </member>
        <member name="T:Jypeli.Effects.ExplosionSystem">
            <summary>
            Järjestelmä räjähdyksille
            </summary>
        </member>
        <member name="M:Jypeli.Effects.ExplosionSystem.#ctor(Jypeli.Image,System.Int32)">
            <summary>
            Räjähdys, jonka tekstuuria ja maksimipartikkeleiden määrää voi vaihtaa
            </summary>
            <param name="particleImage">Partikkelin kuva.</param>
            <param name="maxAmountOfParticles">Suurin mahdollinen määrä partikkeleita joita järjestelmä voi käyttää</param>
        </member>
        <member name="M:Jypeli.Effects.ExplosionSystem.InitializeParticles">
            <summary>
            Määritetään oletusarvot efektille
            </summary>
        </member>
        <member name="M:Jypeli.Effects.ExplosionSystem.InitializeParticle(Jypeli.Effects.Particle,Jypeli.Vector)">
            <summary>
            Alustetaan partikkeli vastaamaan räjähdyksen partikkelia
            </summary>
            <param name="p">Partikkeli joka alustetaan</param>
            <param name="position">Sijainti johon alustetaan</param>
        </member>
        <member name="T:Jypeli.Effects.Flame">
            <summary>
            Järjestelmä liekeille
            </summary>
        </member>
        <member name="M:Jypeli.Effects.Flame.#ctor(Jypeli.Image)">
            <summary>
            Luo uuden liekin.
            </summary>
            <param name="image">Partikkelin kuva.</param>
        </member>
        <member name="M:Jypeli.Effects.Flame.InitializeParticles">
            <summary>
            Määritetään oletusarvot efektille
            </summary>
        </member>
        <member name="M:Jypeli.Effects.Flame.GiveRandomDirection">
            <summary>
            Lasketaan liekin suunnalle satunnaisuutta
            </summary>
            <returns>Partikkelin suunta</returns>
        </member>
        <member name="M:Jypeli.Effects.Flame.Update(Jypeli.Time)">
            <summary>
            Päivitetään liekkiä
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Jypeli.Effects.Flame.InitializeParticle(Jypeli.Effects.Particle,Jypeli.Vector)">
            <summary>
            Alustetaan partikkeli
            </summary>
            <param name="p">Partikkeli joka alustetaan</param>
            <param name="position">Sijainti johon alustetaan</param>
        </member>
        <member name="T:Jypeli.Effects.Light">
            <summary>
            Pistemäinen valonlähde.
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Light.Position">
            <summary>
            Paikka.
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Light.Distance">
            <summary>
            Etäisyys kohtisuoraan 2D-tasosta. Mitä kauempana valo on,
            sitä laajemman alueen se valaisee.
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Light.Intensity">
            <summary>
            Voimakkuus väliltä [0.0, 1.0].
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Light.X">
            <summary>
            Paikan X-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Light.Y">
            <summary>
            Paikan Y-koordinaatti.
            </summary>
        </member>
        <member name="T:Jypeli.Effects.Particle">
            <summary>
            Partikkeli
            </summary>
        </member>
        <member name="M:Jypeli.Effects.Particle.Initialize(Jypeli.Vector,System.Double,System.Double,System.Double,Jypeli.Vector,Jypeli.Vector,System.Double)">
            <summary>
            Alusta partikkeli
            </summary>
            <param name="position">Sijainti</param>
            <param name="scale">Skaalaus</param>
            <param name="rotation">Kierto</param>
            <param name="rotationSpeed">Kiertonopeus</param>
            <param name="velocity">Nopeus</param>
            <param name="acceleration">Kiihtyvyys</param>
            <param name="lifetime">Elinikä</param>
        </member>
        <member name="M:Jypeli.Effects.Particle.Update(System.Double)">
            <summary>
            Päivittää partikkelin sijannin, nopeuden ja kierron
            </summary>
            <param name="time">Aika viime päivityksestä</param>
        </member>
        <member name="P:Jypeli.Effects.Particle.Position">
            <summary>
            Partikkelin sijainti
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.Scale">
            <summary>
            Partikkelin skaalaus
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.Rotation">
            <summary>
            Partikkelin kierto
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.RotationSpeed">
            <summary>
            Partikkelin kiertonopeus
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.Velocity">
            <summary>
            Partikkelin nopeus
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.Acceleration">
            <summary>
            Partikkelin kiihtyvyys
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.Alive">
            <summary>
            Onko partikkelin "elossa", eli päivitetäänkö ja piirretäänkö se
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.MaxLifetime">
            <summary>
            Partikkelin elinikä
            </summary>
        </member>
        <member name="P:Jypeli.Effects.Particle.Lifetime">
            <summary>
            Partikkelin tämän hetkinen ikä
            </summary>
        </member>
        <member name="T:Jypeli.Effects.Smoke">
            <summary>
            Savuefekti.
            </summary>
        </member>
        <member name="M:Jypeli.Effects.Smoke.#ctor">
            <summary>
            Savu, johon vaikuttaa tuuli
            </summary>
        </member>
        <member name="M:Jypeli.Effects.Smoke.#ctor(Jypeli.Image,System.Double)">
            <summary>
            Savu, johon vaikuttaa tuuli ja jonka tekstuuria ja leveyttä voi vaihtaa.
            </summary>
            <param name="particleImage">Partikkelin kuva</param>
            <param name="width">Savun leveys</param>
        </member>
        <member name="M:Jypeli.Effects.Smoke.InitializeParticles">
            <summary>
            Määritetään oletusarvot efektille
            </summary>
        </member>
        <member name="M:Jypeli.Effects.Smoke.GiveRandomDirection">
            <summary>
            Lasketaan savun suunnalle satunnaisuutta
            </summary>
            <returns>Partikkelin suunta</returns>
        </member>
        <member name="M:Jypeli.Effects.Smoke.Update(Jypeli.Time)">
            <summary>
            Päivitetään savua
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Jypeli.Effects.Smoke.InitializeParticle(Jypeli.Effects.Particle,Jypeli.Vector)">
            <summary>
            Alustetaan partikkeli
            </summary>
            <param name="p">Partikkeli joka alustetaan</param>
            <param name="position">Sijainti johon alustetaan</param>
        </member>
        <member name="T:Jypeli.Font">
            <summary>
            Fontti.
            </summary>
        </member>
        <member name="F:Jypeli.Font.Default">
            <summary>
            OletusFontti.
            </summary>
        </member>
        <member name="F:Jypeli.Font.DefaultSmall">
            <summary>
            Pieni oletusfontti.
            </summary>
        </member>
        <member name="F:Jypeli.Font.DefaultLarge">
            <summary>
            Suuri oletusfontti.
            </summary>
        </member>
        <member name="F:Jypeli.Font.DefaultBold">
            <summary>
            Paksunnettu oletusfontti.
            </summary>
        </member>
        <member name="F:Jypeli.Font.DefaultSmallBold">
            <summary>
            Paksunnettu pieni oletusfontti.
            </summary>
        </member>
        <member name="F:Jypeli.Font.DefaultLargeBold">
            <summary>
            Paksunnettu suuri oletusfontti.
            </summary>
        </member>
        <member name="M:Jypeli.Font.GetCharacterSize(System.Char)">
            <summary>
            Palauttaa annetun merkin koon tässä fontissa.
            </summary>
            <param name="c">Merkki</param>
            <returns>Kokovektori, nollavektori jos merkkiä ei ole määritelty</returns>
        </member>
        <member name="M:Jypeli.Font.TruncateText(System.String,System.Double)">
            <summary>
            Katkaisee merkkijonon loppupäästä niin että se sopii annettuun
            pikselileveyteen fontilla kirjoitettuna.
            </summary>
            <param name="str">Merkkijono</param>
            <param name="maxLineWidth">Maksimipikselimäärä merkkijonolle</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Font.WrapText(System.String,System.Double,System.Double)">
            <summary>
            Rivittää tekstin.
            </summary>
            <param name="text">Rivitettävä teksti.</param>
            <param name="softLineWidth">Leveys jonka jälkeen seuraava sana rivitetään seuraavalle riville.</param>
            <param name="hardLineWidth">Leveys jonka jälkeen sana katkaistaan keskeltä.</param>
        </member>
        <member name="M:Jypeli.Font.FindWrapIndex(System.Text.StringBuilder,System.Double,System.Boolean)">
            <summary>
            Etsii katkaisuindeksin merkkijonolle merkki kerrallaan.
            Välilyönneillä ei ole erikoisasemaaa.
            </summary>
            <param name="text">Merkkijono</param>
            <param name="maxWidth">Maksimileveys pikseleinä</param>
            <param name="fromRight">Oikealta vasemmalle (oletus vasemmalta oikealle)</param>
            <returns>Katkaisukohdan indeksi</returns>
        </member>
        <member name="P:Jypeli.Font.CharacterWidth">
            <summary>
            Merkin leveys.
            </summary>
        </member>
        <member name="P:Jypeli.Font.CharacterHeight">
            <summary>
            Merkin korkeus.
            </summary>
        </member>
        <member name="T:Jypeli.FrictionLogic">
            <summary>
            Fysiikkalogiikkaluokka ylhäältä päin kuvattuihin peleihin, joissa tarvitaan kitkaa.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.PhysicsLogic">
            <summary>
            A physics logic is a way for the engine to effect object within the Update call.
            Gravity is a Example of a PhysicsLogic.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.PhysicsLogic.BeforeAddCheck(Physics2DDotNet.PhysicsEngine)">
            <summary>
            Before the item is allowed to be added to pending this method is called to 
            throw any exceptions without corrupting the state of the Physics engine.
            </summary>
            <param name="engine">The engine the item is about to be added too.</param>
        </member>
        <member name="E:Physics2DDotNet.PhysicsLogics.PhysicsLogic.LifetimeChanged">
            <summary>
            Raised when the Lifetime property has been Changed.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsLogics.PhysicsLogic.Added">
            <summary>
            Raised when the object is added to a Physics Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsLogics.PhysicsLogic.Pending">
            <summary>
            Raised when the object is Added to the engine but is not yet part of the update process.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsLogics.PhysicsLogic.Removed">
            <summary>
            Raised when the object is Removed from a Physics Engine. 
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsLogics.PhysicsLogic.IsPending">
            <summary>
            Gets if it has been added the the Engine's PendingQueue, but not yet added to the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsLogics.PhysicsLogic.IsAdded">
            <summary>
            Gets if the object has been added to the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsLogics.PhysicsLogic.Engine">
            <summary>
            Gets The PhysicsEngine the object is currently in. Null if it is in none.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsLogics.PhysicsLogic.Tag">
            <summary>
            Gets and Sets a User defined object.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsLogics.PhysicsLogic.Lifetime">
            <summary>
            Gets and Sets the LifeTime of the object. The object will be removed from the engine when it is Expired.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsLogics.PhysicsLogic.Order">
            <summary>
            Get and Sets The order number of when it will be ran.
            All Logics with a higher order will run after this one and all logics
            with a lower order number will be ran before this one.
            </summary>
        </member>
        <member name="M:Jypeli.FrictionLogic.RunLogic(Physics2DDotNet.TimeStep)">
            <summary>
            Käyttää kitkalogiikkaa pelitilanteeseen.
            </summary>
            <param name="step">Aika viimeisestä päivityksestä.</param>
        </member>
        <member name="T:Jypeli.Controls.GamePad">
            <summary>
            Xbox-peliohjain.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.GamePad.Enable(Jypeli.Button)">
            <summary>
            Ottaa käytöstä poistetun napin takaisin käyttöön.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.GamePad.Enable(Jypeli.Controls.AnalogControl)">
            <summary>
            Ottaa käytöstä poistetun analogiohjaimen takaisin käyttöön.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.GamePad.Disable(Jypeli.Button)">
            <summary>
            Poistaa napin käytöstä.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.GamePad.Disable(Jypeli.Controls.AnalogControl)">
            <summary>
            Poistaa analogiohjaimen (tikku tai nappi) käytöstä.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.GamePad.GetButtonState(Jypeli.Button)">
            <summary>
            Palauttaa annetun napin tilan (ks. <c>ButtonState</c>).
            </summary>
            <param name="b">Nappi.</param>
            <returns>Napin tila</returns>
        </member>
        <member name="M:Jypeli.Controls.GamePad.AnyButtonDown">
            <summary>
            Palauttaa, onko yksikään ohjaimen nappi alhaalla.
            </summary>
            <returns><c>bool</c></returns>
        </member>
        <member name="M:Jypeli.Controls.GamePad.Vibrate(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Täristää peliohjainta.
            </summary>
            <param name="leftMotor">Vasemmanpuoleisen moottorin tärinän määrä (maksimi 1).</param>
            <param name="rightMotor">Oikeanpuoleisen moottorin tärinän määrä (maksimi 1) .</param>
            <param name="leftAcceleration">Vasemmanpuoleisen moottorin tärinäkiihtyvyys (yksikköä sekunnissa).</param>
            <param name="rightAcceleration">Oikeanpuoleisen moottorin tärinäkiihtyvyys (yksikköä sekunnissa).</param>
            <param name="time">Aika, jonka tärinä kestää (sekunteina).</param>
        </member>
        <member name="P:Jypeli.Controls.GamePad.IsConnected">
            <summary>
            Onko ohjain kytkettynä.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.GamePad.LeftThumbDirection">
            <summary>
            Vasemman tatin suuntavektori.
            Vaihtelee välillä (-1, -1) - (1, 1)
            </summary>
        </member>
        <member name="P:Jypeli.Controls.GamePad.RightThumbDirection">
            <summary>
            Oikean tatin suuntavektori.
            Vaihtelee välillä (-1, -1) - (1, 1)
            </summary>
        </member>
        <member name="P:Jypeli.Controls.GamePad.LeftTriggerState">
            <summary>
            Vasemman liipaisimen tila.
            Vaihtelee välillä 0 - 1.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.GamePad.RightTriggerState">
            <summary>
            Oikean liipaisimen tila.
            Vaihtelee välillä 0 - 1.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Keyboard">
            <summary>
            Näppäimistö peliohjaimena.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.IsChar(Jypeli.Key)">
            <summary>
            Tarkistaa, liittyykö näppäimeen k merkkiä.
            </summary>
            <param name="k">Näppäin</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.FromChar(System.Char)">
            <summary>
            Palauttaa näppäimen merkille c.
            Jos merkille ei ole näppäintä, palautetaan Key.None.
            </summary>
            <param name="c">Merkki</param>
            <returns>Näppäin</returns>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ToChar(Jypeli.Key)">
            <summary>
            Palauttaa merkin, joka liittyy näppäimeen k.
            Jos näppäimeen ei liity merkkiä, tapahtuu poikkeus ArgumentException.
            </summary>
            <param name="k">Näppäin</param>
            <returns>Merkki</returns>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.Enable(Jypeli.Key)">
            <summary>
            Ottaa käytöstä poistetun napin <c>k</c> takaisin käyttöön.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.Disable(Jypeli.Key)">
            <summary>
            Poistaa napin <c>k</c> käytöstä.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.GetKeyState(Jypeli.Key)">
            <summary>
            Palauttaa annetun näppäimen tilan (ks. <c>ButtonState</c>).
            </summary>
            <param name="k">Näppäin.</param>
            <returns>Näppäimen tila</returns>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.IsShiftDown">
            <summary>
            Tarkistaa, onko kumpikaan shift-näppäimistä painettuna.
            </summary>
            <returns>
            	<c>true</c> jos alhaalla, muuten <c>painettuna</c>.
            </returns>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.IsCtrlDown">
            <summary>
            Tarkistaa, onko kumpikaan ctrl-näppäimistä painettuna.
            </summary>
            <returns>
            	<c>true</c> jos alhaalla, muuten <c>painettuna</c>.
            </returns>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.IsAltDown">
            <summary>
            Tarkistaa, onko kumpikaan alt-näppäimistä painettuna.
            </summary>
            <returns>
            	<c>true</c> jos alhaalla, muuten <c>painettuna</c>.
            </returns>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenWSAD(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector},System.String)">
            <summary>
            Kuuntelee W, S, A ja D -näppäimiä.
            </summary>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenWSAD``1(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector,``0},System.String,``0)">
            <summary>
            Kuuntelee W, S, A ja D -näppäimiä.
            </summary>
            <typeparam name="T1">Ensimmäisen oman parametrin tyyppi</typeparam>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
            <param name="p1">Ensimmäisen oman parametrin arvo</param>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenWSAD``2(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector,``0,``1},System.String,``0,``1)">
            <summary>
            Kuuntelee W, S, A ja D -näppäimiä.
            </summary>
            <typeparam name="T1">Ensimmäisen oman parametrin tyyppi</typeparam>
            <typeparam name="T2">Toisen oman parametrin tyyppi</typeparam>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
            <param name="p1">Ensimmäisen oman parametrin arvo</param>
            <param name="p2">Toisen oman parametrin arvo</param>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenWSAD``3(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector,``0,``1,``2},System.String,``0,``1,``2)">
            <summary>
            Kuuntelee W, S, A ja D -näppäimiä.
            </summary>
            <typeparam name="T1">Ensimmäisen oman parametrin tyyppi</typeparam>
            <typeparam name="T2">Toisen oman parametrin tyyppi</typeparam>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
            <param name="p1">Ensimmäisen oman parametrin arvo</param>
            <param name="p2">Toisen oman parametrin arvo</param>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenArrows(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector},System.String)">
            <summary>
            Kuuntelee nuolinäppäimiä.
            </summary>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenArrows``1(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector,``0},System.String,``0)">
            <summary>
            Kuuntelee nuolinäppäimiä.
            </summary>
            <typeparam name="T1">Ensimmäisen oman parametrin tyyppi</typeparam>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
            <param name="p1">Ensimmäisen oman parametrin arvo</param>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenArrows``2(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector,``0,``1},System.String,``0,``1)">
            <summary>
            Kuuntelee nuolinäppäimiä.
            </summary>
            <typeparam name="T1">Ensimmäisen oman parametrin tyyppi</typeparam>
            <typeparam name="T2">Toisen oman parametrin tyyppi</typeparam>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
            <param name="p1">Ensimmäisen oman parametrin arvo</param>
            <param name="p2">Toisen oman parametrin arvo</param>
        </member>
        <member name="M:Jypeli.Controls.Keyboard.ListenArrows``3(Jypeli.ButtonState,Jypeli.Controls.Handler{Jypeli.Vector,``0,``1,``2},System.String,``0,``1,``2)">
            <summary>
            Kuuntelee nuolinäppäimiä.
            </summary>
            <typeparam name="T1">Ensimmäisen oman parametrin tyyppi</typeparam>
            <typeparam name="T2">Toisen oman parametrin tyyppi</typeparam>
            <param name="state">Näppäinten kuunneltava tila</param>
            <param name="handler">Tapahtumakäsittelijä. Ensimmäinen parametri on automaattisesti yksikköpituinen vektori.</param>
            <param name="helpText">Ohjeteksti.</param>
            <param name="p1">Ensimmäisen oman parametrin arvo</param>
            <param name="p2">Toisen oman parametrin arvo</param>
        </member>
        <member name="M:Jypeli.ObjectLoadMethods.AddByTag(System.String,System.Func{Jypeli.GameObject,Jypeli.GameObject})">
            <summary>
            Lisää metodin ladatun olion muokkaamiseksi.
            Metodin tulee palauttaa muokkaamansa olio. Metodi voi myös palauttaa uuden olion, jos
            haluttu tyyppi ei ole tuettu editorissa.
            </summary>
            <param name="tag">Tagi, joka oliolla tulee olla.</param>
            <param name="method">Metodi, joka muokkaa oliota tai palauttaa uuden.</param>
        </member>
        <member name="M:Jypeli.ObjectLoadMethods.AddByTemplate(System.String,System.Func{Jypeli.GameObject,Jypeli.GameObject})">
            <summary>
            Lisää metodin ladatun olion muokkaamiseksi.
            Metodin tulee palauttaa muokkaamansa olio. Metodi voi myös palauttaa uuden olion, jos
            haluttu olion tyyppi ei ole tuettu editorissa.
            </summary>
            <param name="tag">Template, jonka pohjalta olio on luotu.</param>
            <param name="method">Metodi, joka muokkaa oliota tai palauttaa uuden.</param>
        </member>
        <member name="T:Jypeli.Level">
            <summary>
            Pelikenttä, johon voi lisätä olioita. Kentällä voi myös olla reunat ja taustaväri tai taustakuva.
            </summary>
        </member>
        <member name="F:Jypeli.Level.Center">
            <summary>
            Kentän keskipiste.
            </summary>
        </member>
        <member name="M:Jypeli.Level.Clear">
            <summary>
            Palauttaa oletustaustan.
            </summary>
        </member>
        <member name="M:Jypeli.Level.FindObjectLimits">
            <summary>
            Laskee pienimmän alueen, jonka sisälle kaikki kentän oliot mahtuvat.
            </summary>
        </member>
        <member name="M:Jypeli.Level.CreateBorders">
            <summary>
            Lisää kaikille kentän sivuille reunat, joihin oliot voivat törmätä.
            </summary>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Boolean)">
            <summary>
            Lisää kaikille kentän sivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Double,System.Boolean)">
            <summary>
            Lisää kaikille kentän sivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Double,System.Boolean,Jypeli.Color)">
            <summary>
            Lisää kaikille kentän sivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
            <param name="borderColor">Reunojen väri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Double,System.Boolean,Jypeli.Image)">
            <summary>
            Lisää kaikille kentän sivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
            <param name="borderImage">Reunojen kuva / tekstuuri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateHorizontalBorders(System.Double,System.Boolean,Jypeli.Color)">
            <summary>
            Lisää kentän vaakasivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
            <param name="borderColor">Reunojen väri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateVerticalBorders(System.Double,System.Boolean,Jypeli.Color)">
            <summary>
            Lisää kentän pystysivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
            <param name="borderColor">Reunojen väri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateHorizontalBorders(System.Double,System.Boolean,Jypeli.Image)">
            <summary>
            Lisää kentän vaakasivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
            <param name="borderImage">Reunojen kuva / tekstuuri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateVerticalBorders(System.Double,System.Boolean,Jypeli.Image)">
            <summary>
            Lisää kentän pystysivuille reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
            <param name="borderImage">Reunojen kuva / tekstuuri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Double,System.Double,System.Int32,System.Double,Jypeli.Color)">
            <summary>
            Lisää kaikille kentän sivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="borderColor">Reunojen väri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Double,System.Double,System.Int32,System.Double,Jypeli.Image)">
            <summary>
            Lisää kaikille kentän sivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="borderImage">Reunojen kuva / tekstuuri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Lisää kaikille kentän sivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
        </member>
        <member name="M:Jypeli.Level.CreateBorders(System.Double,System.Double,System.Int32)">
            <summary>
            Lisää kaikille kentän sivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
        </member>
        <member name="M:Jypeli.Level.CreateHorizontalBorders(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Lisää kentän vaakasivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
        </member>
        <member name="M:Jypeli.Level.CreateHorizontalBorders(System.Double,System.Double,System.Int32,System.Double,Jypeli.Image)">
            <summary>
            Lisää kentän vaakasivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="borderImage">Reunojen kuva / tekstuuri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateHorizontalBorders(System.Double,System.Double,System.Int32,System.Double,Jypeli.Color)">
            <summary>
            Lisää kentän vaakasivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="borderColor">Reunojen väri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateHorizontalBorders(System.Double,System.Double,System.Int32)">
            <summary>
            Lisää kentän vaakasivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
        </member>
        <member name="M:Jypeli.Level.CreateVerticalBorders(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Lisää kentän pystysivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
        </member>
        <member name="M:Jypeli.Level.CreateVerticalBorders(System.Double,System.Double,System.Int32,System.Double,Jypeli.Image)">
            <summary>
            Lisää kentän pystysivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="borderImage">Reunojen kuva / tekstuuri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateVerticalBorders(System.Double,System.Double,System.Int32,System.Double,Jypeli.Color)">
            <summary>
            Lisää kentän pystysivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="borderColor">Reunojen väri.</param>
        </member>
        <member name="M:Jypeli.Level.CreateVerticalBorders(System.Double,System.Double,System.Int32)">
            <summary>
            Lisää kentän vaakasivuille epätasaiset reunat, joihin oliot voivat törmätä.
            </summary>
            <param name="min">Reunan minimipaksuus.</param>
            <param name="max">Reunan maksimipaksuus.</param>
            <param name="points">Pisteiden määrä (kuinka vaihtelevaa maasto on).</param>
        </member>
        <member name="M:Jypeli.Level.CreateLeftBorder(System.Double,System.Boolean)">
            <summary>
            Lisää kenttään vasemman reunan.
            </summary>
            <returns>Uusi reuna.</returns>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
        </member>
        <member name="M:Jypeli.Level.CreateRightBorder(System.Double,System.Boolean)">
            <summary>
            Lisää kenttään oikean reunan.
            </summary>
            <returns>Uusi reuna.</returns>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
        </member>
        <member name="M:Jypeli.Level.CreateTopBorder(System.Double,System.Boolean)">
            <summary>
            Lisää kenttään yläreunan.
            </summary>
            <returns>Uusi reuna.</returns>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
        </member>
        <member name="M:Jypeli.Level.CreateBottomBorder(System.Double,System.Boolean)">
            <summary>
            Lisää kenttään alareunan.
            </summary>
            <returns>Uusi reuna.</returns>
            <param name="restitution">Reunojen kimmoisuus (0.0 = pysäyttää, 1.0 = kimpoaa täydellä voimalla)</param>
            <param name="isVisible">Reunan näkyvyys <c>true</c>, jos näkyvät reunat, muuten <c>false</c>.</param>
        </member>
        <member name="M:Jypeli.Level.CreateLeftBorder">
            <summary>
            Lisää kenttään vasemman reunan.
            </summary>
            <returns>Uusi reuna.</returns>
        </member>
        <member name="M:Jypeli.Level.CreateRightBorder">
            <summary>
            Lisää kenttään oikean reunan.
            </summary>
            <returns>Uusi reuna.</returns>
        </member>
        <member name="M:Jypeli.Level.CreateTopBorder">
            <summary>
            Lisää kenttään yläreunan.
            </summary>
            <returns>Uusi reuna.</returns>
        </member>
        <member name="M:Jypeli.Level.CreateBottomBorder">
            <summary>
            Lisää kenttään alareunan.
            </summary>
            <returns>Uusi reuna.</returns>
        </member>
        <member name="M:Jypeli.Level.CreateGround(System.Double[],System.Double)">
            <summary>
            Helppo tapa lisätä kenttään epätasainen maasto.
            Maasto kuvataan luettelemalla Y-koordinaatteja vasemmalta oikealle lukien. Kahden Y-koordinaatin
            väli on aina sama.
            </summary>
            <param name="heights">Y-koordinaatit lueteltuna vasemmalta oikealle.</param>
            <param name="scale">Vakio, jolla jokainen Y-koordinaatti kerrotaan. Hyödyllinen,
            jos halutaan muuttaa koko maaston korkeutta muuttamatta jokaista pistettä yksitellen.
            Tavallisesti arvoksi kelpaa 1.0.</param>
            <remarks>
            Huomaa, että maastossa ei voi olla kahta pistettä päällekkäin.
            </remarks>
        </member>
        <member name="M:Jypeli.Level.CreateGround(System.Double[],System.Double,Jypeli.Image)">
            <summary>
            Helppo tapa lisätä kenttään epätasainen maasto.
            Maasto kuvataan luettelemalla Y-koordinaatteja vasemmalta oikealle lukien. Kahden Y-koordinaatin
            väli on aina sama.
            </summary>
            <param name="heights">Y-koordinaatit lueteltuna vasemmalta oikealle.</param>
            <param name="scale">Vakio, jolla jokainen Y-koordinaatti kerrotaan. Hyödyllinen,
            jos halutaan muuttaa koko maaston korkeutta muuttamatta jokaista pistettä yksitellen.
            Tavallisesti arvoksi kelpaa 1.0.</param>
            <param name="image">Maastossa käytettävä kuva.</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Level.GetRandomPosition">
            <summary>
            Palauttaa satunnaisen kohdan kentän reunojen sisältä.
            </summary>
            <returns>Vektori.</returns>
        </member>
        <member name="M:Jypeli.Level.GetRandomFreePosition(System.Double)">
            <summary>
            Palauttaa satunnaisen vapaan kohdan kentän reunojen sisältä.
            </summary>
            <param name="radius">Säde jonka sisällä ei saa olla olioita</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Level.LoadFromFile(System.String)">
            <summary>
            Lataa kentän tiedostosta.
            Kenttätiedostoja voi tehdä Jypelin mukana tulevalle editorilla.
            </summary>
            <param name="fileName">Kenttätiedoston nimi</param>
        </member>
        <member name="M:Jypeli.Level.LoadFromFile(System.String,Jypeli.ObjectLoadMethods)">
            <summary>
            Lataa kentän tiedostosta.
            Kenttätiedostoja voi tehdä Jypelin mukana tulevalle editorilla.
            </summary>
            <param name="fileName">Kenttätiedoston nimi</param>
            <param name="methods">Metodit, joilla ladattuja olioita voidaan muokata</param>
        </member>
        <member name="M:Jypeli.Level.LoadFromContent(System.String)">
            <summary>
            Lataa kentän contentista.
            Kenttätiedostoja voi tehdä Jypelin mukana tulevalle editorilla.
            </summary>
            <param name="assetName">Kentän nimi contentissa</param>
        </member>
        <member name="M:Jypeli.Level.LoadFromContent(System.String,Jypeli.ObjectLoadMethods)">
            <summary>
            Lataa kentän contentista.
            Kenttätiedostoja voi tehdä Jypelin mukana tulevalle editorilla.
            </summary>
            <param name="assetName">Kentän nimi contentissa</param>
            <param name="methods">Metodit, joilla ladattuja olioita voidaan muokata</param>
        </member>
        <member name="P:Jypeli.Level.BackgroundColor">
            <summary>
            Kentän taustaväri.
            </summary>
        </member>
        <member name="P:Jypeli.Level.Background">
            <summary>
            Kentän taustakuva.
            </summary>
        </member>
        <member name="P:Jypeli.Level.Width">
            <summary>
            Kentän leveys.
            </summary>
        </member>
        <member name="P:Jypeli.Level.Height">
            <summary>
            Kentän korkeus.
            </summary>
        </member>
        <member name="P:Jypeli.Level.Size">
            <summary>
            Kentän koko (leveys ja korkeus).
            </summary>
        </member>
        <member name="P:Jypeli.Level.Left">
            <summary>
            Kentän vasemman reunan x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.Level.Right">
            <summary>
            Kentän oikean reunan x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.Level.Top">
            <summary>
            Kentän yläreunan y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.Level.Bottom">
            <summary>
            Kentän alareunan y-koordinaatti.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.AnalogControl">
            <summary>
            Analoginen ohjain. Tämä voi olla joko painike, jota voi painaa
            eri voimakkuuksilla (padiohjaimen liipainäppäin), ohjaustikku
            tai puhelimen kiihtyvyysanturi
            </summary>
        </member>
        <member name="F:Jypeli.Controls.AnalogControl.DefaultStick">
            <summary>
            Ohjaimen tavallisemmin käytettävä analogitikku. Padissa, jossa on kaksi tikkua, käytetään vasenta.
            </summary>
        </member>
        <member name="F:Jypeli.Controls.AnalogControl.LeftStick">
            <summary>
            Ohjaimen vasen analogitikku.
            </summary>
        </member>
        <member name="F:Jypeli.Controls.AnalogControl.RightStick">
            <summary>
            Ohjaimen oikea analogitikku.
            </summary>
        </member>
        <member name="F:Jypeli.Controls.AnalogControl.LeftTrigger">
            <summary>
            Ohjaimen vasen liipasin.
            </summary>
        </member>
        <member name="F:Jypeli.Controls.AnalogControl.RightTrigger">
            <summary>
            Ohjaimen oikea liipasin.
            </summary>
        </member>
        <member name="F:Jypeli.Controls.AnalogControl.Accelerometer">
            <summary>
            Puhelimen kiihtyvyysanturi
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Listener.InContext(Jypeli.Controls.ListenContext)">
            <summary>
            Kuuntelee tapahtumaa vain tietyssä kontekstissa.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Jypeli.Controls.Listener.InContext(Jypeli.Controls.ControlContexted)">
            <summary>
            Kuuntelee tapahtumaa vain tietyssä kontekstissa.
            Esim. Keyboard.Listen(parametrit).InContext(omaIkkuna) kuuntelee
            haluttua näppäimistötapahtumaa ainoastaan kun ikkuna on näkyvissä ja päällimmäisenä.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Jypeli.Controls.Listener.OnObject(Jypeli.GameObject)">
            <summary>
            Kuuntelee tapahtumaa tietyn olion päällä.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Jypeli.Controls.Listener.IsDestroyed">
            <summary>
            Onko olio tuhottu.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Jypeli.Controls.Listener.Destroyed">
            <summary> 
            Tapahtuu, kun olio tuhotaan. 
            </summary> 
        </member>
        <member name="T:Jypeli.TriggerDirection">
            <summary>
            Suunta mittarin muutokselle.
            </summary>
        </member>
        <member name="F:Jypeli.TriggerDirection.Up">
            <summary>
            Mittarin arvo kasvaa.
            </summary>
        </member>
        <member name="F:Jypeli.TriggerDirection.Down">
            <summary>
            Mittarin arvo vähenee.
            </summary>
        </member>
        <member name="F:Jypeli.TriggerDirection.Irrelevant">
            <summary>
            Ei väliä suunnalla (kasvaa tai vähenee).
            </summary>
        </member>
        <member name="T:Jypeli.Meter">
            <summary>
            Mittari, joka mittaa erityyppisiä arvoja.
            Sidottavissa näyttöihin, kuten <c>ValueDisplay</c> ja <c>BarGauge</c>.
            </summary>
        </member>
        <member name="M:Jypeli.Meter.OfType``1">
            <summary>
            Palauttaa mittarin sen todellisessa muodossa, jotta sen kaikkiin
            jäseniin pääsee käsiksi.
            </summary>
            <typeparam name="T">Tyyppi, jota mittari mittaa</typeparam>
            <returns>Mittari, joka mittaa tyyppiä T</returns>
        </member>
        <member name="P:Jypeli.Meter.RelativeValue">
            <summary>
            Mittarin suhteellinen arvo (minimi 0, maksimi 1)
            </summary>
        </member>
        <member name="T:Jypeli.Meter`1">
            <summary>
            Mittari, joka mittaa erityyppisiä arvoja.
            Sidottavissa näyttöihin, kuten <c>ValueDisplay</c> ja <c>BarGauge</c>.
            </summary>
        </member>
        <member name="M:Jypeli.Meter`1.#ctor(`0,`0,`0)">
            <summary>
            Luo uuden mittarin.
            </summary>
            <param name="defaultVal">Oletusarvo.</param>
            <param name="minVal">Pienin sallittu arvo.</param>
            <param name="maxVal">Suurin sallittu arvo.</param>
        </member>
        <member name="M:Jypeli.Meter`1.#ctor(Jypeli.Meter{`0})">
            <summary>
            Luo uuden mittarin kopiona parametrina annetusta.
            </summary>
            <param name="src">Kopioitava mittari.</param>
        </member>
        <member name="M:Jypeli.Meter`1.Reset">
            <summary>
            Palauttaa mittarin arvon oletusarvoonsa.
            </summary>
        </member>
        <member name="M:Jypeli.Meter`1.SetValue(`0)">
            <summary>
            Asettaa mittarille arvon. Sama kuin Value-ominaisuuteen sijoitus,
            mutta helpompi käyttää tapahtumakäsittelijöissä.
            </summary>
            <param name="value">Uusi arvo</param>
        </member>
        <member name="M:Jypeli.Meter`1.AddTrigger(`0,Jypeli.TriggerDirection,System.Action)">
            <summary>
            Lisää mittarille rajan, jonka yli mentäessä laukaistaan aliohjelma.
            </summary>
            <param name="value">Mittarin arvo</param>
            <param name="direction">Suunta (TriggerDirection.Irrelevant, TriggerDirection.Up tai TriggerDirection.Down)</param>
            <param name="method">Aliohjelma, jota kutsutaan.</param>
        </member>
        <member name="M:Jypeli.Meter`1.AddTrigger(`0,Jypeli.TriggerDirection,System.Action{`0})">
            <summary>
            Lisää mittarille rajan, jonka yli mentäessä laukaistaan aliohjelma.
            </summary>
            <param name="value">Mittarin arvo</param>
            <param name="direction">Suunta (TriggerDirection.Irrelevant, TriggerDirection.Up tai TriggerDirection.Down)</param>
            <param name="method">Aliohjelma, jota kutsutaan (parametrina mittarin arvo).</param>
        </member>
        <member name="M:Jypeli.Meter`1.RemoveTriggers(`0)">
            <summary>
            Poistaa kaikki tietylle arvolle asetetut raja-arvotapahtumat.
            </summary>
            <param name="value">Arvo</param>
        </member>
        <member name="M:Jypeli.Meter`1.RemoveTriggers(System.Action)">
            <summary>
            Poistaa kaikki raja-arvotapahtumat, jotka kutsuvat tiettyä aliohjelmaa.
            </summary>
            <param name="method">Aliohjelma</param>
        </member>
        <member name="M:Jypeli.Meter`1.ClearTriggers">
            <summary>
            Poistaa kaikki raja-arvotapahtumat.
            </summary>
        </member>
        <member name="M:Jypeli.Meter`1.ToString">
            <summary>
            Palauttaa mittarin arvon merkkijonona.
            </summary>
        </member>
        <member name="P:Jypeli.Meter`1.Value">
            <summary>
            Mittarin arvo.
            </summary>
        </member>
        <member name="P:Jypeli.Meter`1.DefaultValue">
            <summary>
            Mittarin oletusarvo.
            </summary>
        </member>
        <member name="P:Jypeli.Meter`1.MinValue">
            <summary>
            Mittarin pienin sallittu arvo.
            Kun mittari saavuttaa tämän arvon, laukeaa tapahtuma <c>LowerLimit</c>.
            </summary>
        </member>
        <member name="P:Jypeli.Meter`1.MaxValue">
            <summary>
            Mittarin suurin sallittu arvo.
            Kun mittari saavuttaa tämän arvon, laukeaa tapahtuma <c>UpperLimit</c>.
            </summary>
        </member>
        <member name="E:Jypeli.Meter`1.Changed">
            <summary>
            Tapahtuu, kun mittarin arvo muuttuu.
            </summary>
        </member>
        <member name="E:Jypeli.Meter`1.LowerLimit">
            <summary>
            Tapahtuu, kun mittari saavuttaa pienimmän sallitun arvonsa.
            </summary>
        </member>
        <member name="E:Jypeli.Meter`1.UpperLimit">
            <summary>
            Tapahtuu, kun mittari saavuttaa suurimman sallitun arvonsa.
            </summary>
        </member>
        <member name="T:Jypeli.Meter`1.ChangeHandler">
            <summary>
            Mittarin muutostapahtumankäsittelijä.
            </summary>
        </member>
        <member name="T:Jypeli.IntMeter">
            <summary>
            Mittari, joka mittaa int-tyyppisiä arvoja.
            Sidottavissa näyttöihin, kuten <c>ValueDisplay</c> ja <c>BarGauge</c>.
            </summary>
        </member>
        <member name="M:Jypeli.IntMeter.op_Implicit(Jypeli.IntMeter)~System.Int32">
            <summary>
            Antaa mittariolion <c>m</c> arvon, kun mittaria käytetään
            sellaisessa yhteydessä, jossa vaaditaan tavallista <c>int</c>-
            tyyppistä kokonaislukua.
            </summary>
        </member>
        <member name="M:Jypeli.IntMeter.op_Implicit(Jypeli.IntMeter)~System.Double">
            <summary>
            Antaa mittariolion <c>m</c> arvon, kun mittaria käytetään
            sellaisessa yhteydessä, jossa vaaditaan tavallista <c>double</c>-
            tyyppistä liukulukua.
            </summary>
        </member>
        <member name="M:Jypeli.IntMeter.AddValue(System.Int32)">
            <summary>
            Lisää jotain mittarin arvoon. Sama kuin Value-ominaisuuteen lisääminen,
            mutta helpompi käyttää tapahtumakäsittelijöissä.
            </summary>
            <param name="change">Lisättävä luku</param>
        </member>
        <member name="M:Jypeli.IntMeter.MultiplyValue(System.Int32)">
            <summary>
            Kertoo mittarin arvon jollakin. Sama kuin Value-ominaisuuden kertominen,
            mutta helpompi käyttää tapahtumakäsittelijöissä.
            </summary>
            <param name="multiplier">Uusi arvo</param>
        </member>
        <member name="M:Jypeli.IntMeter.MultiplyValue(System.Double)">
            <summary>
            Kertoo mittarin arvon jollakin. Sama kuin Value-ominaisuuden kertominen,
            mutta helpompi käyttää tapahtumakäsittelijöissä.
            </summary>
            <param name="multiplier">Uusi arvo</param>
        </member>
        <member name="M:Jypeli.IntMeter.AddOverTime(System.Int32,System.Double,System.Action)">
            <summary>
            Lisää tietyn summan mittariin tasaisesti tietyn ajan sisällä.
            </summary>
            <param name="change">Kuinka paljon lisätään</param>
            <param name="seconds">Aika joka lisämiseen kuluu</param>
            <param name="onComplete">Aliohjelma, joka suoritetaan kun lisäys on valmis.</param>
            <returns>Operation-tyyppinen muuttuja, jolla voi hallita tapahtuvaa muutosta</returns>
        </member>
        <member name="M:Jypeli.IntMeter.AddOverTime(System.Int32,System.Double)">
            <summary>
            Lisää tietyn summan mittariin tasaisesti tietyn ajan sisällä.
            </summary>
            <param name="change">Kuinka paljon lisätään</param>
            <param name="seconds">Aika joka lisämiseen kuluu</param>
            <returns>Operation-tyyppinen muuttuja, jolla voi hallita tapahtuvaa muutosta</returns>
        </member>
        <member name="M:Jypeli.IntMeter.Stop">
            <summary>
            Pysäyttää AddOverTime-metodilla tehtävät lisäykset mittariin.
            </summary>
        </member>
        <member name="T:Jypeli.DoubleMeter">
            <summary>
            Mittari, joka mittaa double-tyyppisiä arvoja.
            Sidottavissa näyttöihin, kuten <c>ValueDisplay</c> ja <c>BarGauge</c>.
            </summary>
        </member>
        <member name="M:Jypeli.DoubleMeter.op_Implicit(Jypeli.DoubleMeter)~System.Double">
            <summary>
            Antaa mittariolion <c>m</c> arvon, kun mittaria käytetään
            sellaisessa yhteydessä, jossa vaaditaan tavallista <c>double</c>-
            tyyppistä liukulukua.
            </summary>
        </member>
        <member name="M:Jypeli.DoubleMeter.AddValue(System.Double)">
            <summary>
            Lisää jotain mittarin arvoon. Sama kuin Value-ominaisuuteen lisääminen,
            mutta helpompi käyttää tapahtumakäsittelijöissä.
            </summary>
            <param name="change">Lisättävä luku</param>
        </member>
        <member name="M:Jypeli.DoubleMeter.MultiplyValue(System.Double)">
            <summary>
            Kertoo mittarin arvon jollakin. Sama kuin Value-ominaisuuden kertominen,
            mutta helpompi käyttää tapahtumakäsittelijöissä.
            </summary>
            <param name="multiplier">Uusi arvo</param>
        </member>
        <member name="M:Jypeli.DoubleMeter.AddOverTime(System.Double,System.Double,System.Action)">
            <summary>
            Lisää tietyn summan mittariin tasaisesti tietyn ajan sisällä.
            </summary>
            <param name="change">Kuinka paljon lisätään</param>
            <param name="seconds">Aika joka lisämiseen kuluu</param>
            <param name="onComplete">Aliohjelma, joka suoritetaan kun lisäys on valmis.</param>
            <returns>Operation-tyyppinen muuttuja, jolla voi hallita tapahtuvaa muutosta</returns>
        </member>
        <member name="M:Jypeli.DoubleMeter.AddOverTime(System.Double,System.Double)">
            <summary>
            Lisää tietyn summan mittariin tasaisesti tietyn ajan sisällä.
            </summary>
            <param name="change">Kuinka paljon lisätään</param>
            <param name="seconds">Aika joka lisämiseen kuluu</param>
            <returns>Operation-tyyppinen muuttuja, jolla voi hallita tapahtuvaa muutosta</returns>
        </member>
        <member name="M:Jypeli.DoubleMeter.Stop">
            <summary>
            Pysäyttää AddOverTime-metodilla tehtävät lisäykset mittariin.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.Mouse">
            <summary>
            Hiiri peliohjaimena.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Mouse.IsCursorOn(Jypeli.IGameObject)">
            <summary>
            Onko hiiren kursori annetun olion päällä.
            </summary>
        </member>
        <member name="M:Jypeli.Controls.Mouse.Listen(Jypeli.MouseButton,Jypeli.ButtonState,Jypeli.Controls.Handler,System.String)">
            <summary>
            Kuuntelee hiiren nappulan painalluksia.
            </summary>
            <param name="b">Kuunneltava nappula.</param>
            <param name="state">Nappulan tila.</param>
            <param name="handler">Tapahtuman käsittelijä.</param>
            <param name="helpText">Ohjeteksti.</param>
        </member>
        <member name="M:Jypeli.Controls.Mouse.ListenOn(Jypeli.IGameObject,Jypeli.MouseButton,Jypeli.ButtonState,Jypeli.Controls.Handler,System.String)">
            <summary>
            Kuuntelee hiirenpainalluksia annetun peliolion päällä.
            </summary>
            <param name="obj">Olio, jonka päällä hiiren kursorin tulisi olla.</param>
            <param name="b">Hiiren nappula.</param>
            <param name="state">Nappulan tila.</param>
            <param name="handler">Tapahtuman käsittelijä.</param>
            <param name="helpText">Ohjeteksti.</param>
        </member>
        <member name="M:Jypeli.Controls.Mouse.ListenMovement(System.Double,Jypeli.Controls.AnalogHandler,System.String)">
            <summary>
            Kuuntelee hiiren liikettä.
            </summary>
            <param name="trigger">Kuinka pitkän matkan hiiren tulisi liikkua, että tulee tapahtuma.</param>
            <param name="handler">Hiiren tapahtuman käsittelijä.</param>
            <param name="helpText">Ohjeteksti.</param>
        </member>
        <member name="M:Jypeli.Controls.Mouse.ListenWheel(Jypeli.Controls.Handler,System.String)">
            <summary>
            Kuuntelee hiiren rullaa.
            </summary>
            <param name="handler">Hiiren rullan tapahtuman käsittelijä.</param>
            <param name="helpText">Ohjeteksti.</param>
        </member>
        <member name="P:Jypeli.Controls.Mouse.ActiveChannels">
            <summary>
            Multitouchia varten.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Mouse.IsCursorVisible">
            <summary>
            Käytetäänkö hiiren kursoria.
            Jos käytetään, hiiren paikka ruudulla on mitattavissa, mutta hiiri ei
            voi liikkua ruudun ulkopuolelle.
            Jos ei käytetä, hiirtä voidaan liikuttaa rajatta, mutta sen paikkaa
            ruudulla ei voida määrittää.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Mouse.PositionOnScreen">
            <summary>
            Kursorin paikka ruutukoordinaateissa.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Mouse.PositionOnWorld">
            <summary>
            Kursorin paikka maailmankoordinaateissa.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Mouse.WheelState">
            <summary>
            Rullan asento. Vähenee alaspäin ja kasvaa ylöspäin rullattaessa.
            </summary>
        </member>
        <member name="P:Jypeli.Controls.Mouse.WheelChange">
            <summary>
            Rullan asennon muutos viime tarkistuksesta. Vähenee alaspäin ja kasvaa ylöspäin rullattaessa.
            Nolla jos rullaa ei ole käytetty.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.Touch">
            <summary>
            Kosketuspaneelin kosketus.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Touch.Id">
            <summary>
            Id-tunnus tälle kosketukselle.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Touch.PositionOnScreen">
            <summary>
            Kosketuksen paikka ruudulla.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Touch.PositionOnWorld">
            <summary>
            Kosketuksen paikka pelimaailmassa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Touch.MovementOnScreen">
            <summary>
            Kosketuksen liike ruudulla.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Touch.MovementOnWorld">
            <summary>
            Kosketuksen liike pelimaailmassa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.PositionOnScreen2">
            <summary>
            Kosketuksen paikka ruudulla.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.PositionOnWorld2">
            <summary>
            Kosketuksen paikka pelimaailmassa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.MovementOnScreen2">
            <summary>
            Kosketuksen liike ruudulla.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.MovementOnWorld2">
            <summary>
            Kosketuksen liike pelimaailmassa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.WorldDistanceBefore">
            <summary>
            Sormien etäisyysvektori maailmassa eleen alussa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.WorldDistanceAfter">
            <summary>
            Sormien etäisyysvektori maailmassa eleen lopussa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.ScreenDistanceBefore">
            <summary>
            Sormien etäisyysvektori ruudulla eleen alussa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.ScreenDistanceAfter">
            <summary>
            Sormien etäisyysvektori ruudulla eleen lopussa.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Gesture.Rotation">
            <summary>
            Kiertokulma.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.GestureType">
            <summary>
            Kosketuseleen tyyppi.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.GestureType.Tap">
            <summary>
            Tökkäys.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.GestureType.DoubleTap">
            <summary>
            Kaksoistökkäys, eli kaksi tökkäystä peräkkäin.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.GestureType.HorizontalDrag">
            <summary>
            Raahaaminen vaakasuunnassa.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.GestureType.VerticalDrag">
            <summary>
            Raahaaminen pystysuunnassa.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.GestureType.DragComplete">
            <summary>
            Raahaamisen loppuminen. Tämä ei anna nopeutta,
            ainoastaan ilmoittaa että ei raahata enää.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.GestureType.Flick">
            <summary>
            Nopea pyyhkäisy.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.GestureType.Pinch">
            <summary>
            Nipistys.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.DisplayOrientation">
            <summary>
            Puhelimen näytön asemointi.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.DisplayOrientation.Landscape">
            <summary>
            Vaakasuuntainen. näyttö kääntyy automaattisesti, jos puhelin käännetään toisinpäin.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.DisplayOrientation.LandscapeLeft">
            <summary>
            Vaakasuuntainen, vasemmalle käännetty.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.DisplayOrientation.LandscapeRight">
            <summary>
            Vaakasuuntainen, oikealle käännetty.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.DisplayOrientation.Portrait">
            <summary>
            Pystysuuntainen.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.DisplayResolution">
            <summary>
            Puhelimen näytön tarkkuus.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.DisplayResolution.Small">
            <summary>
            Pieni tarkkuus. Paremi suorituskyky ja pienempi akun kulutus.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.DisplayResolution.Large">
            <summary>
            Suuri tarkkuus.
            </summary>
        </member>
        <member name="T:Jypeli.WP7.Phone">
            <summary>
            Aliohjelmia ja ominaisuuksia, jotka toimivat vain puhelimessa. Voidaan kutsua myös PC:lle käännettäessä,
            mutta tällöin mitään ei yksinkertaisesti tapahdu.
            </summary>
        </member>
        <member name="M:Jypeli.WP7.Phone.Vibrate(System.Int32)">
            <summary>
            Värisyttää puhelinta.
            </summary>
            <param name="milliSeconds">Aika kuinka kauan Värisytetään millisekunteina</param>
        </member>
        <member name="M:Jypeli.WP7.Phone.StopVibrating">
            <summary>
            Lopettaa puhelimen värinän.
            </summary>
        </member>
        <member name="E:Jypeli.WP7.Phone.Activated">
            <summary>
            Tapahtuu kun puhelin palaa tombstone-tilasta
            </summary>
        </member>
        <member name="E:Jypeli.WP7.Phone.Deactivated">
            <summary>
            Tapahtuu kun puhelin siirtyy tombstone-tilaan
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Phone.DisplayResolution">
            <summary>
            Puhelimen näytön tarkkuus.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Phone.DisplayOrientation">
            <summary>
            Puhelimen Näytön asemointi.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.Phone.Tombstoning">
            <summary>
            Tallennetaanko pelin tilanne jos ruutu sammutetaan, vaihdetaan ohjelmaa tms.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.ALVector2D">
            <summary>
            Class Used to store a Linear Value along with an Angular Value. Like Position and Orientation. 
            </summary>
        </member>
        <member name="F:Physics2DDotNet.ALVector2D.Zero">
            <summary>
            ALVector2D(0,Vector2D.Zero)
            </summary>
        </member>
        <member name="F:Physics2DDotNet.ALVector2D.Angular">
            <summary>
            This is the Angular value of this ALVector2D. 
            </summary>
            <remarks>Example: Angular would be Orientation and Linear would be Location Completly describing a Position.</remarks>
        </member>
        <member name="F:Physics2DDotNet.ALVector2D.Linear">
            <summary>
            This is the Linear value of this ALVector2D. 
            </summary>
            <remarks>Example: Angular would be Orientation and Linear would be Location Completly describing a Position.</remarks>
        </member>
        <member name="M:Physics2DDotNet.ALVector2D.#ctor(System.Double,AdvanceMath.Vector2D)">
            <summary>
            Creates a new ALVector2D instance on the stack.
            </summary>
            <param name="Angular">The Angular value.</param>
            <param name="Linear">The Linear value.</param>
        </member>
        <member name="M:Physics2DDotNet.ALVector2D.op_Addition(Physics2DDotNet.ALVector2D,Physics2DDotNet.ALVector2D)">
            <summary>
            Does Addition of 2 ALVector2Ds.
            </summary>
            <param name="left">The left ALVector2D operand.</param>
            <param name="right">The right ALVector2D operand.</param>
            <returns>The Sum of the ALVector2Ds.</returns>
        </member>
        <member name="M:Physics2DDotNet.ALVector2D.op_Subtraction(Physics2DDotNet.ALVector2D,Physics2DDotNet.ALVector2D)">
            <summary>
            Does Subtraction of 2 ALVector2Ds.
            </summary>
            <param name="left">The left ALVector2D operand.</param>
            <param name="right">The right ALVector2D operand.</param>
            <returns>The Difference of the ALVector2Ds.</returns>
        </member>
        <member name="M:Physics2DDotNet.ALVector2D.op_Multiply(Physics2DDotNet.ALVector2D,System.Double)">
            <summary>
            Does Multiplication of 2 ALVector2Ds 
            </summary>
            <param name="source">The ALVector2D to be Multiplied.</param>
            <param name="scalar">The Scalar multiplier.</param>
            <returns>The Product of the ALVector2Ds.</returns>
            <remarks>It does normal Multiplication of the Angular value but does Scalar Multiplication of the Linear value.</remarks>
        </member>
        <member name="M:Physics2DDotNet.ALVector2D.op_Multiply(System.Double,Physics2DDotNet.ALVector2D)">
            <summary>
            Does Multiplication of 2 ALVector2Ds 
            </summary>
            <param name="scalar">The Scalar multiplier.</param>
            <param name="source">The ALVector2D to be Multiplied.</param>
            <returns>The Product of the ALVector2Ds.</returns>
            <remarks>It does normal Multiplication of the Angular value but does Scalar Multiplication of the Linear value.</remarks>
        </member>
        <member name="P:Physics2DDotNet.ALVector2D.X">
            <summary>
            The Linear.X component
            </summary>
        </member>
        <member name="P:Physics2DDotNet.ALVector2D.Y">
            <summary>
            The Linear.Y component
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Body">
            <summary>
            This is the Physical Body that collides in the engine.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Body.#ctor(Physics2DDotNet.PhysicsState,Physics2DDotNet.Shapes.IShape,System.Double,Physics2DDotNet.Coefficients,Physics2DDotNet.Lifespan)">
            <summary>
            Creates a new Body Instance.
            </summary>
            <param name="state">The State of the Body.</param>
            <param name="shape">The Shape of the Body.</param>
            <param name="mass">The mass of the Body The inertia will be aquired from the Shape.</param>
            <param name="coefficients">A object containing coefficients.</param>
            <param name="lifeTime">A object Describing how long the object will be in the engine.</param>
        </member>
        <member name="M:Physics2DDotNet.Body.#ctor(Physics2DDotNet.PhysicsState,Physics2DDotNet.Shapes.IShape,Physics2DDotNet.MassInfo,Physics2DDotNet.Coefficients,Physics2DDotNet.Lifespan)">
            <summary>
            Creates a new Body Instance.
            </summary>
            <param name="state">The State of the Body.</param>
            <param name="shape">The Shape of the Body.</param>
            <param name="massInfo">A object describing the mass and inertia of the Body.</param>
            <param name="coefficients">A object containing coefficients.</param>
            <param name="lifeTime">A object Describing how long the object will be in the engine.</param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyProxy">
            <summary>
            This applys the proxy.
            This will cause all other bodies in the proxy list to have their velocity set 
            to this bodys. 
            With the appropriate transformations applied. 
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Body.RemoveFromProxy">
            <summary>
            This will remove this body from any proxy list it is a part of.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyPosition">
            <summary>
            Updates all the values caluclated from the State.Position.
            Re-calculates the Matrices property the re-calculates the Rectangle property
            from that.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Body.ClearForces">
            <summary>
            Sets Acceleration and ForceAccumulator to Zero.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyForce(AdvanceMath.Vector2D)">
            <summary>
            Applys a Force
            </summary>
            <param name="force">The direction and magnitude of the force</param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyForce(AdvanceMath.Vector2D@)">
            <summary>
            Applys a Force
            </summary>
            <param name="force">The direction and magnitude of the force</param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyForce(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Applys a Force
            </summary>
            <param name="force">The direction and magnitude of the force</param>
            <param name="position">The Location where the force will be applied (Offset: Body Rotation: World) </param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyForce(AdvanceMath.Vector2D@,AdvanceMath.Vector2D@)">
            <summary>
            Applys a Force
            </summary>
            <param name="force">The direction and magnitude of the force</param>
            <param name="position">The Location where the force will be applied (Offset: Body Rotation: World) </param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyTorque(System.Double)">
            <summary>
            Applys Torque
            </summary>
            <param name="torque">The direction and magnitude of the torque</param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyImpulse(AdvanceMath.Vector2D)">
            <summary>
            Applys Impulse
            </summary>
            <param name="impulse">The direction and magnitude of the impulse</param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyImpulse(AdvanceMath.Vector2D@)">
            <summary>
            Applys Impulse
            </summary>
            <param name="impulse">The direction and magnitude of the impulse.</param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyImpulse(AdvanceMath.Vector2D,AdvanceMath.Vector2D)">
            <summary>
            Applys Impulse
            </summary>
            <param name="impulse">The direction and magnitude of the impulse.</param>
            <param name="position">The Location where the impulse will be applied (Offset: Body Rotation: World)</param>
        </member>
        <member name="M:Physics2DDotNet.Body.ApplyImpulse(AdvanceMath.Vector2D@,AdvanceMath.Vector2D@)">
            <summary>
            Applys Impulse
            </summary>
            <param name="impulse">The direction and magnitude of the impulse.</param>
            <param name="position">The Location where the impulse will be applied (Offset: Body Rotation: World)</param>
        </member>
        <member name="E:Physics2DDotNet.Body.LifetimeChanged">
            <summary>
            Raised when the Lifetime property has been Changed.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.ShapeChanged">
            <summary>
            Raised when the Shape of the Body has been Changed.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.Pending">
            <summary>
            Raised when the object is Added to the engine but is not yet part of the update process.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.Added">
            <summary>
            Raised when the object is added to a Physics Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.Removed">
            <summary>
            Raised when the object is Removed from a Physics Engine. 
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.PositionChanged">
            <summary>
            Raised when the Position has been Changed.
            Raised by either the Solver or a call to ApplyMatrix.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.Updated">
            <summary>
            Raised when the Body has been updated to a change in time.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.Collided">
            <summary>
            Raised when the Body collides with another.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.Colliding">
            <summary>
            Raised constantly when the Body is colliding with another.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.JointAdded">
            <summary>
            Raised when a joint is added that affects this body.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Body.JointRemoved">
            <summary>
            Raised when a joint is removed that affects this body.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Rectangle">
            <summary>
            This is the Baunding rectangle It is calculated on the call to apply matrix.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Matrices">
            <summary>
            The Matrices that are tranfroming this bodies Shape.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.LinearDamping">
            <summary>
            Gets and Sets The value represents how much Linear velocity is kept each time step. 
            This Dampens the Body's Linear velocity a little per time step. Valid values are zero exclusive to one inclusive.  
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.AngularDamping">
            <summary>
            Gets and Sets The value represents how much Angular velocity is kept each time step. 
            This Dampens the Body's Angular velocity a little per time step. Valid values are zero exclusive to one inclusive.  
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Proxies">
            <summary>
            These are bodies that are mirrors of this body. 
            It's useful for bodies that are being teleported.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.ProxiesCount">
            <summary>
            The number of proxies that this body has.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.ID">
            <summary>
            Unique ID of a PhysicsEntity in the PhysicsEngine
            Assigned on being Added.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Engine">
            <summary>
            Gets The PhysicsEngine the object is currently in. Null if it is in none.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.State">
            <summary>
            Gets The current State of the object IE Velocity 
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Shape">
            <summary>
            Gets and Sets the Shape of the Body. 
            If setting the shape to a shape another body has it will duplicate the shape.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Mass">
            <summary>
            Gets The MassInfo of the body.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.CollisionIgnorer">
            <summary>
            Gets and Sets the Ignore object that decides what collisons to ignore.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.EventIgnorer">
            <summary>
            Gets and Sets the Ignore object that decides what collison events to ignore.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Coefficients">
            <summary>
            Gets and Sets the Coefficients for the class.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Lifetime">
            <summary>
            Gets and Sets the LifeTime of the object. The object will be removed from the engine when it is Expired.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Tag">
            <summary>
            Gets and Sets a User defined object.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.SolverTag">
            <summary>
            Gets a Solver Defined object.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.DetectorTag">
            <summary>
            Gets a Detector Defined object.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Joints">
            <summary>
            Gets the Joints attached to this body.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IgnoresGravity">
            <summary>
            Gets and Sets if the Body will ignore Gravity.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IgnoresPhysicsLogics">
            <summary>
            Gets and Sets if the Body will Ignore all Physics Logics
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IgnoresCollisionResponse">
            <summary>
            Gets and Sets if the Object will ignore the collison Responce but still generate the Collision event.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IgnoreVertexes">
            <summary>
            Gets and Sets if this body's shape's Vertexes will be used in collision detection.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IsPending">
            <summary>
            Gets if it has been added the the Engine's PendingQueue, but not yet added to the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IsAdded">
            <summary>
            Gets if the object has been added to the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IsCollidable">
            <summary>
            gets and sets if the body will have any collision detection ran on it.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IsEventable">
            <summary>
            Gets and Sets if other objects will have their collided 
            event raised when colliding with this body
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.IsBroadPhaseOnly">
            <summary>
            Gets and Sets if the Body will trigger the Collided event at the broadphase level
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.KineticEnergy">
            <summary>
            Gets the Total Kinetic Energy of the Body.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Body.Transformation">
            <summary>
            Gets and Sets the Matrix2x3 that transforms the Shape belonging to the Body.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.BodyProxy">
            <summary>
            This is a Proxy. That keeps 2 bodies velocities synchronized. 
            </summary>
        </member>
        <member name="P:Physics2DDotNet.BodyProxy.Body1">
            <summary>
            This is the other body to be Synchronized with.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.BodyProxy.Body2">
            <summary>
            This is the other body to be Synchronized with.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.BodyProxy.Transformation">
            <summary>
            This is how the Velocity will be transformed when syncronized.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.BodyProxy.InvertedTwin">
            <summary>
            This is the inverted twin of this velocity. It's matrix will be invert of this one's.
            And its body will be the body that contains this.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Coefficients">
            <summary>
            Describes the Coefficients of a surface.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Coefficients.Restitution">
            <summary>
            AKA Bounciness. This is how much energy is kept as kinetic energy after a collision.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Coefficients.StaticFriction">
            <summary>
            (NOT USED)
            http://en.wikipedia.org/wiki/Friction
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Coefficients.DynamicFriction">
            <summary>
            http://en.wikipedia.org/wiki/Friction
            </summary>
        </member>
        <member name="T:Physics2DDotNet.CollectionEventArgs`1">
            <summary>
            a generic EventArgs for read only collections.
            </summary>
            <typeparam name="T">The type of the items on the collection. </typeparam>
        </member>
        <member name="P:Physics2DDotNet.CollectionEventArgs`1.Collection">
            <summary>
            The readonly collection of items.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.DragInfo.DragCenter">
            <summary>
            (In Body Coordinates)
            </summary>
        </member>
        <member name="T:Physics2DDotNet.MassInfo">
            <summary>
            This class Stores mass information and Moment of Inertia Together since they are very closly related.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.MassInfo.Infinite">
            <summary>
            A body with this mass will not be affected by forces or impulse.
            </summary>
            <remarks>
            This is the mass of Chuck Norris.
            </remarks>
        </member>
        <member name="F:Physics2DDotNet.Matrices.ToWorld">
            <summary>
            The matrix that is multiplied against to transform a vertex from relative 
            to the Body to the vertex relative to the World.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.Matrices.ToBody">
            <summary>
            The matrix that is multiplied against to transform a vertex from relative 
            to the World to the vertex relative to the Body.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.Matrices.ToWorldNormal">
            <summary>
            The matrix that is multiplied against to transform a normal (unit vector) from relative 
            to the Body to the normal relative to the World.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Physics2DDotNet.Matrices.ToBodyNormal" -->
        <member name="T:Physics2DDotNet.PhysicsState">
            <summary>
            This class holds the variables usually changed mulitple times  each update like the postion of an object.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.PhysicsState.Position">
            <summary>
            This is Position and Orientation.
            </summary>
            <remarks>
            <seealso href="http://en.wikipedia.org/wiki/Position"/>
            </remarks>
        </member>
        <member name="F:Physics2DDotNet.PhysicsState.Velocity">
            <summary>
            Angular and Linear Velocity.
            </summary>
            <remarks>
            <seealso href="http://en.wikipedia.org/wiki/Velocity"/>
            </remarks>
        </member>
        <member name="F:Physics2DDotNet.PhysicsState.Acceleration">
            <summary>
            Angular and Linear Acceleration.
            </summary>
            <remarks>
            <seealso href="http://en.wikipedia.org/wiki/Acceleration"/>
            </remarks>
        </member>
        <member name="F:Physics2DDotNet.PhysicsState.ForceAccumulator">
            <summary>
            Torque and Force
            </summary>
            <remarks>
            <seealso href="http://en.wikipedia.org/wiki/Torque"/>
            <seealso href="http://en.wikipedia.org/wiki/Force"/>
            </remarks>
        </member>
        <member name="T:Physics2DDotNet.TimeStep">
            <summary>
            Class that holds information about a change in time;
            </summary>
        </member>
        <member name="M:Physics2DDotNet.TimeStep.#ctor(System.Double,System.Int32)">
            <summary>
            Creates a new Timestep instance.
            </summary>
            <param name="dt">The current change in time. (seconds)</param>
            <param name="updateCount">The number for the current update.</param>
        </member>
        <member name="P:Physics2DDotNet.TimeStep.Dt">
            <summary>
            The current change in time. (seconds)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.TimeStep.DtInv">
            <summary>
            The inverse of the change in time. (0 if dt is 0)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.TimeStep.TrueDt">
            <summary>
            The actaul change in time. (seconds)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.TimeStep.TrueDtInv">
            <summary>
            The inverse of the actaul change in time. (0 if dt is 0)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.TimeStep.UpdateCount">
            <summary>
            The number for the current update.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.FrameCoherentSAPDetector">
            <summary>
            Full name is Frame Coherent Sweep and Prune. 
            This class is used to isolate the AABB pairs that are currently in a collision
            state without having to check all pair combinations. It relies heavily on frame
            coherence or the idea that objects will typically be near their last position
            from frame to frame. The class caches the various state information and doesn't
            update it unless an extent on an axis "swaps" positions with its neighbor.
            Note: If your application has "teleporting" objects or objects that are 
            extremely high-speed in relation to other objects, then this Sweep and Prune
            method may breakdown. 
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.TestForCollisions(Physics2DDotNet.Body,Physics2DDotNet.Body)">
            <summary>
            Test AABB collisions between two geometries. Tests include checking if the
            geometries are enabled, static, in the right collision categories, etc.
            </summary>
            <returns>Returns true if there is a collision, false otherwise</returns>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.AddGeom(Physics2DDotNet.Body)">
            <summary>
            This method is used by the PhysicsSimulator to notify Sweep and Prune that 
            new geometry is to be tracked.
            </summary>
            <param name="g">The geometry to be added</param>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.UpdateExtentValues">
            <summary>
            Updates the values in the x and y extent lists by the changing aabb values.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.HandleCollisions">
            <summary>
            Iterates over the collision pairs and creates arbiters.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.Run">
            <summary>
            Just calls Update.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.Update">
            <summary>
            Incrementally updates the system. Assumes relatively good frame coherence.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.ForceNonIncrementalUpdate">
            <summary>
            This function can be used for times when frame-coherence is temporarily lost
            or when it is simply more convenient to completely rebuild all the cached
            data instead of incrementally updating it. Currently it is used after
            removing disposed/removed geometries. If your application had an object
            that teleported across the universe or some other situation where
            frame-coherence was lost, you might consider this function.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.ExtentInfoList">
            <summary>
            This class keeps a list of information that relates extents to geometries.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.CollisionPairDictionary">
            <summary>
            This class is used to keep track of the pairs of geometry that need to be
            passed on to the narrow phase. The keys stored in the dictionary are
            the actual geometry pairs (the boolean value is currently unused).
            NOTE: May eventually want to add OnEnterCollisionState / 
            OnExitCollisionState callbacks which might be useful for debugging
            or possibly in user applications.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.CollisionPair">
            <summary>
            Houses collision pairs as geom1 and geom2. The pairs are always ordered such
            that the lower id geometry is first. This allows the CollisionPairDictionary
            to have a consistent key / hash code for a pair of geometry.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.Extent">
            <summary>
            This class represents a single extent of an AABB on a single axis. It has a
            reference to ExtentInfo which has information about the geometry it belongs
            to.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.ExtentList">
            <summary>
            Represents a lists of extents for a given axis. This list will be kept
            sorted incrementally.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.ExtentList.IncrementalSort">
            <summary>
            Incrementally sorts ExtentList. It is assumed that there is a high level
            of frame coherence and that much of the list is already fairly well
            sorted. This algorithm makes use of "insert sort" which is notoriously
            slow - except for when a list is already almost sorted - which is the
            case when there is high frame coherence.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.FrameCoherentSAPDetector.ExtentInfo">
            <summary>
            This class contains represents additional extent info for a particular axis
            It has a reference to the geometry whose extents are being tracked. It
            also has a min and max extent reference into the ExtentList itself.
            The class keeps track of overlaps with other geometries.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.SelectiveSweepDetector">
            <summary>
            Faster then sweep and prune and does not stutter like SingleSweep
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.SelectiveSweepDetector.Update">
            <summary>
            updates all the nodes to their new values and sorts the lists
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Detectors.SelectiveSweepDetector.ShouldDoX">
            <summary>
            Finds how many collisions there are on the x and y and returns if
            the x axis has the least
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Detectors.SweepAndPruneDetector">
            <summary>
            The Sweep and Prune detector should be O(nlogn), but can be O(n^2) if everything is colliding.  
            </summary>
        </member>
        <member name="T:Physics2DDotNet.DistanceGrid">
            <summary>
            A class used by some Shape Objects for Narrow Phased collision.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Ignorers.AdvGroupIgnorer">
            <summary>
            A collision ignorer that uses group numbers to do collision ignoring.
            If a object is member of a group that the other body is ignoring then they will not collide. 
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Ignorers.Ignorer">
            <summary>
            Base class for Collision Ignorers to impliment.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Ignorers.Ignorer.IsInverted">
            <summary>
            Get and sets if the result of this ignorer is inverted.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Ignorers.GroupCollection">
            <summary>
            A collection that stores ints that represent groups
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.Add(System.Int32)">
            <summary>
            Trys to add a group.
            </summary>
            <param name="item">The group ID to add.</param>
            <returns>false if the ignorer was already part of the group; otherwise false.</returns>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.AddRange(System.Int32[])">
            <summary>
            adds an array of group ids.
            </summary>
            <param name="array">The array of group IDs. (this will be sorted)</param>
            <returns>the number of IDs that were not already part of the group.</returns>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.Contains(System.Int32)">
            <summary>
            returns true if the ignorer is part of the group.
            </summary>
            <param name="item">The group ID.</param>
            <returns>true if the ignorer is part of the group; otherwise false.</returns>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.ContainsRange(System.Int32[])">
            <summary>
            returns the number of groups in the array it is part of.
            </summary>
            <param name="array">The array of group IDs. (this will be sorted)</param>
            <returns>The number of groups in the array it is part of.</returns>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.Remove(System.Int32)">
            <summary>
            Trys to remove the ignorer from a group.
            </summary>
            <param name="item">The group ID.</param>
            <returns>true if the ignore was part of the group; otherwise false.</returns>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.RemoveRange(System.Int32[])">
            <summary>
            Trys to remove the ignorer from a range of groups.
            </summary>
            <param name="array">The array of group IDs. (this will be sorted)</param>
            <returns>the number of groups the ignore was removed from.</returns>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.System#Collections#Generic#ICollection{System#Int32}#Add(System.Int32)">
            <summary>
            returns if the 2 ignores are not part of the same group.
            </summary>
            <param name="other">the other CollisionGroupIgnorer</param>
            <returns>true if they are not part of the same group; otherwiase false.</returns>
        </member>
        <member name="M:Physics2DDotNet.Ignorers.GroupCollection.Clear">
            <summary>
            removes the ignorer from all groups.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Ignorers.GroupCollection.Count">
            <summary>
            Gets the number of collison Groups the ignorer is part of.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Ignorers.GroupIgnorer">
            <summary>
            A collision ignorer that uses group numbers to do collision ignoring.
            If 2 objects are members of the same group then they will not collide.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Ignorers.ObjectIgnorer">
            <summary>
            A collision ignorer that uses reference comparison. 
            All Bodies with the same instance of this ignorer then they will not collide.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Ignorers.OneWayPlatformIgnorer">
            <summary>
            this allows you to have platforms that are one way. like in platform games.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Ignorers.GroupedOneWayPlatformIgnorer">
            <summary>
            this allows you to have platforms that are one way. like in platform games.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.IContactPointInfo">
            <summary>
            Describes a Contact in a collision.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.IContactPointInfo.Position">
            <summary>
            Gets The world coordinates of the contact.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.IContactPointInfo.Normal">
            <summary>
            Gets a Direction Vector Pointing away from the Edge.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.IContactPointInfo.Distance">
            <summary>
            Gets The distance the contact is inside the other object.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.IContact.Body1">
            <summary>
            Gets The First Body that is part of the Contact.
            (The Normal belongs to this Body.)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.IContact.Body2">
            <summary>
            Gets The Second Body that is part of the Contact.
            (The Position of the Vertex belongs to this Body.)
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Joints.AngleJoint">
            <summary>
            A Joint between 2 Bodies that will keep the Angles between the 2 bodies at a certain amount.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Joints.Joint">
            <summary>
            Describes a Connection between 2 objects. 
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Joints.Joint.BeforeAddCheck(Physics2DDotNet.PhysicsEngine)">
            <summary>
            Before the item is allowed to be added to pending this method is called to 
            throw any exceptions without corrupting the state of the Physics engine.
            </summary>
            <param name="engine">The engine the item is about to be added too.</param>
        </member>
        <member name="E:Physics2DDotNet.Joints.Joint.LifetimeChanged">
            <summary>
            Raised when the Lifetime property has been Changed.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Joints.Joint.Added">
            <summary>
            Raised when the object is added to a Physics Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Joints.Joint.Pending">
            <summary>
            Raised when the object is Added to the engine but is not yet part of the update process.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.Joints.Joint.Removed">
            <summary>
            Raised when the object is Removed from a Physics Engine. 
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Joints.Joint.IsPending">
            <summary>
            Gets if it has been added the the Engine's PendingQueue, but not yet added to the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Joints.Joint.Tag">
            <summary>
            Gets and Sets a User defined object.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Joints.Joint.Lifetime">
            <summary>
            Gets and Sets the LifeTime of the object. The object will be removed from the engine when it is Expired.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Joints.Joint.Engine">
            <summary>
            Gets The PhysicsEngine the object is currently in. Null if it is in none.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Joints.Joint.IsAdded">
            <summary>
            Gets if the object has been added to the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Joints.Joint.Bodies">
            <summary>
            Gets the bodies the Joint effects.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Joints.FixedAngleJoint">
            <summary>
            A Joint between 2 Bodies that will keep the Angles between the 2 bodies at a certain amount.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Joints.FixedHingeJoint">
            <summary>
            A joint that makes a single Body Pivot around an Anchor.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Joints.FixedHingeJoint.DistanceTolerance">
            <summary>
            The distance the joint can stretch before breaking. 
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Joints.HingeJoint">
            <summary>
            A Joint Between 2 Bodies that will pivot around an Anchor.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Joints.HingeJoint.#ctor(Physics2DDotNet.Body,Physics2DDotNet.Body,AdvanceMath.Vector2D,Physics2DDotNet.Lifespan)">
            <summary>
            Creates a new HingeJoint Instance.
            </summary>
            <param name="body1">One of the bodies to be Jointed.</param>
            <param name="body2">One of the bodies to be Jointed.</param>
            <param name="anchor">The location of the Hinge.</param>
            <param name="lifeTime">A object Describing how long the object will be in the engine.</param>
        </member>
        <member name="P:Physics2DDotNet.Joints.HingeJoint.DistanceTolerance">
            <summary>
            The Distance the joint can stretch before breaking. 
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Lifespan">
            <summary>
            A object that describes the time a object will remain in the Physics engine.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Lifespan.#ctor">
            <summary>
            Creates a new Lifespan Instance that is Immortal.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Lifespan.#ctor(System.Double)">
            <summary>
            Creates a new Lifespan Instance that is mortal.
            </summary>
            <param name="maxAge">How long the item will stay in the engine. (in seconds)</param>
        </member>
        <member name="M:Physics2DDotNet.Lifespan.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new Lifespan Instance that is mortal and has already aged.
            </summary>
            <param name="age">How old the item is. (in seconds)</param>
            <param name="maxAge">How long the item will stay in the engine. (in seconds)</param>
        </member>
        <member name="M:Physics2DDotNet.Lifespan.Update(Physics2DDotNet.TimeStep)">
            <summary>
            Increases the Age of object by a change in time.
            </summary>
            <param name="update">the update's number (It wont age more then once on a update)</param>
            <param name="step">The TimeStep describing the change in time.</param>
        </member>
        <member name="P:Physics2DDotNet.Lifespan.IsExpired">
            <summary>
            Gets and Sets if it IsExpired and should be removed from the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Lifespan.IsImmortal">
            <summary>
            Gets if the only way for the object to leave the engine is for it to be set to expired.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Lifespan.IsOverAged">
            <summary>
            Gets if it is expired becuase of old age.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Lifespan.MaxAge">
            <summary>
            Gets and Sets how long the object will stay in the engine.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Lifespan.TimeLeft">
            <summary>
            Gets how much time the object has left.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Lifespan.Age">
            <summary>
            Gets and Sets The current age of the object.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.PhysicsEngine">
            <summary>
            The Engine that will Apply Physics to object added to it.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.PhysicsEngine.firstBodyID">
            <summary>
            This is the ID the first body added to the engine will get.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddBody(Physics2DDotNet.Body)">
            <summary>
            Adds a Body to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="item">The Body to be added.</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddBodyRange(System.Collections.Generic.ICollection{Physics2DDotNet.Body})">
            <summary>
            Adds a collection of Bodies to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="collection">The collection to be Added</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddJoint(Physics2DDotNet.Joints.Joint)">
            <summary>
            Adds a Joint to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="item">The Joint to be added.</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddJointRange(System.Collections.Generic.ICollection{Physics2DDotNet.Joints.Joint})">
            <summary>
            Adds a collection of Joints to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="collection">The collection to be Added</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddJointRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Adds a collection of Joints to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="collection">The collection to be Added</param>
            <typeparam name="T">A Type inherited from Joint</typeparam>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddLogic(Physics2DDotNet.PhysicsLogics.PhysicsLogic)">
            <summary>
            Adds a PhysicsLogic to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="item">The PhysicsLogic to be added.</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddLogicRange(System.Collections.Generic.ICollection{Physics2DDotNet.PhysicsLogics.PhysicsLogic})">
            <summary>
            Adds a collection of PhysicsLogics to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="collection">The collection to be Added</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddLogicRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Adds a collection of PhysicsLogics to the pending queue and will be truly added on a call to Update.
            </summary>
            <param name="collection">The collection to be Added</param>
            <typeparam name="T">A Type inherited from PhysicsLogic</typeparam>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.AddProxy(Physics2DDotNet.Body,Physics2DDotNet.Body,AdvanceMath.Matrix2x2)">
            <summary>
            Adds 2 bodies to the same proxy list. 
            If they are both already part of their own proxy list then the lists will merge.
            The transformations will be calcualted automatically. 
            </summary>
            <param name="body1">The first Body.</param>
            <param name="body2">The second Body.</param>
            <param name="transformation">How velocities will be transformed from body1 to body2.</param>
            <remarks>
            This will most likely be removed if i ever figure out how to make a joint like this.
            </remarks>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.Update(System.Double)">
            <summary>
            Updates the Engine with a change in time. 
            This call will block all access to the engine while it is running.
            A complete call to this method is also known as a timestep.
            </summary>
            <param name="dt">The change in time since the last call to this method. (In Seconds)</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsEngine.Clear">
            <summary>
            Clears the Engine of all objects. Also clears the Detector and Solver.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsEngine.BodiesAdded">
            <summary>
            Generated when Bodies are truly added to the Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsEngine.JointsAdded">
            <summary>
            Generated when Joints are truly added to the Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsEngine.LogicsAdded">
            <summary>
            Generated when PhysicsLogics are truly added to the Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsEngine.BodiesRemoved">
            <summary>
            Generated when a Bodies are removed to the Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsEngine.JointsRemoved">
            <summary>
            Generated when a Joints are removed to the Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsEngine.LogicsRemoved">
            <summary>
            Generated when a PhysicsLogics are removed to the Engine.
            </summary>
        </member>
        <member name="E:Physics2DDotNet.PhysicsEngine.Updated">
            <summary>
            Generated when the engine is update;
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsEngine.Joints">
            <summary>
            Gets A threadSafe List of Joints (You wont get the "The collection has changed" Exception with this)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsEngine.Bodies">
            <summary>
            Gets A threadSafe List of Bodies (You wont get the "The collection has changed" Exception with this)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsEngine.Logics">
            <summary>
            Gets A threadSafe List of PhysicsLogics (You wont get the "The collection has changed" Exception with this)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsEngine.BroadPhase">
            <summary>
            Gets and Sets The BroadPhase collision Detector. (This must be Set to a non-Null value before any calls to Update)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsEngine.Solver">
            <summary>
            Gets and Sets the Collision Solver (This must be Set to a non-Null value before any calls to Update)
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsEngine.UpdateCount">
            <summary>
            The number of updates that the engine has completed.
            </summary>
            <remarks>
            This is used for making sure actions are not duplicated on a single time step.
            </remarks>
        </member>
        <member name="T:Physics2DDotNet.PhysicsHelper">
            <summary>
            contains some methods to do physics calculations.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.ExplosionLogic">
            <summary>
            Simulates a simple explosion.  
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.ExplosionLogic.#ctor(AdvanceMath.Vector2D,AdvanceMath.Vector2D,System.Double,System.Double,System.Double,Physics2DDotNet.Lifespan)">
            <summary>
            Creates a new instance of the ExplosionLogic
            </summary>
            <param name="location">ground zero</param>
            <param name="velocity">the velocity of the explosion (this would be from the missile or bomb that spawns it).</param>
            <param name="pressurePulseSpeed">the speed at which the explosion expands</param>
            <param name="dragCoefficient">the drag Coefficient</param>
            <param name="mass">the mass of the expanding cloud</param>
            <param name="lifetime"></param>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.GlobalFluidLogic">
            <summary>
            Applys drag and buoyancy to all items in the engine.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.GravityField">
            <summary>
            A Gravity Field that apply gravity pulling in one direction regardless of the Body's position with zero dropoff.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.GravityField.#ctor(AdvanceMath.Vector2D,Physics2DDotNet.Lifespan)">
            <summary>
            Creates a new GravityField Instance.
            </summary>
            <param name="gravity">The direction and magnitude of the gravity.</param>
            <param name="lifeTime">A object Describing how long the object will be in the engine.</param>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.GravityPointField">
            <summary>
            A PhysicsLogic to causes a Gravity a a certain point with zero dropoff.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.GravityPointField.#ctor(AdvanceMath.Vector2D,System.Double,Physics2DDotNet.Lifespan)">
            <summary>
            Creates a new GravityPointField Instance.
            </summary>
            <param name="location">The location of the Gravity point.</param>
            <param name="gravity"></param>
            <param name="lifetime"></param>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.GravityPointMass">
            <summary>
            A PhysicsLogic to causes a Body to have a realistic pull of Gravity with a exponential drop-off. 
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.GravityPointMass.#ctor(Physics2DDotNet.Body)">
            <summary>
            Creates a new GravityPointMass Instance.
            </summary>
            <param name="body">The body that will be the source of gravity.</param>
            <param name="lifetime">A object Describing how long the object will be in the engine.</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.GravityPointMass.#ctor(Physics2DDotNet.Body,System.Double)">
            <summary>
            Creates a new GravityPointMass Instance.
            </summary>
            <param name="body">The body that will be the source of gravity.</param>
            <param name="metersPerDistanceUnit">The scale of of the universe.</param>
            <param name="lifetime">A object Describing how long the object will be in the engine.</param>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.LineFluidLogic">
            <summary>
            Applys drag and buoyancy to items on one side of a line;
            </summary>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.MoveToPointLogic">
            <summary>
            A class that will apply Force to move an object to a certain point and stop it once it gets there.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.MoveToPointLogic.#ctor(Physics2DDotNet.Body,AdvanceMath.Vector2D,System.Double)">
            <summary>
            Creates a new MoveToPointLogic object.
            </summary>
            <param name="body">The Body this logic will act on.</param>
            <param name="destination">The Point it will move the Body too.</param>
            <param name="maxAcceleration">The maximum acceleration to be applied to the Body</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsLogics.MoveToPointLogic.#ctor(Physics2DDotNet.Body,AdvanceMath.Vector2D,System.Double,System.Double)">
            <summary>
            Creates a new MoveToPointLogic object.
            </summary>
            <param name="body">The Body this logic will act on.</param>
            <param name="destination">The Point it will move the Body too.</param>
            <param name="maxAcceleration">The maximum acceleration to be applied to the Body</param>
            <param name="maxVelocity">The maximum velocity this logic will accelerate the Body too.</param>
        </member>
        <member name="T:Physics2DDotNet.PhysicsLogics.RaySegmentsCollisionLogic">
            <summary>
            A class to manage a RaySegmentsShape collisions
            </summary>
        </member>
        <member name="T:Physics2DDotNet.TimerState">
            <summary>
            The State of a PhysicsTimer
            </summary>
        </member>
        <member name="F:Physics2DDotNet.TimerState.Paused">
            <summary>
            The PhysicsTimer is Paused.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.TimerState.Normal">
            <summary>
            The PhysicsTimer's calls to the Callback are on time.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.TimerState.Slow">
            <summary>
            The PhysicsTimer's calls to the Callback are behind schedule.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.TimerState.Fast">
            <summary>
            The PhysicsTimer's calls to the Callback are delayed to be on time.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.TimerState.Disposed">
            <summary>
            The PhysicsTimer is Disposed.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.PhysicsCallback">
            <summary>
            A Callback used by the PhysicsTimer
            </summary>
            <param name="dt">The change in time.</param>
        </member>
        <member name="T:Physics2DDotNet.PhysicsTimer">
            <summary>
            A class to update the PhysicsEngine at regular intervals.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.PhysicsTimer.#ctor(Physics2DDotNet.PhysicsCallback,System.Double)">
            <summary>
            Creates a new PhysicsTimer Instance.
            </summary>
            <param name="callback">The callback to call.</param>
            <param name="targetDt">The target change in time. (in seconds)</param>
        </member>
        <member name="M:Physics2DDotNet.PhysicsTimer.Dispose">
            <summary>
            Stops the Timer 
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsTimer.IsBackground">
            <summary>
            Gets or sets a value indicating whether or not the thread that runs the time is a background thread.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsTimer.IsRunning">
            <summary>
            Gets and Sets if the PhysicsTimer is currently calling the Callback.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsTimer.TargetInterval">
            <summary>
            Gets and Sets the desired Interval between Callback calls.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsTimer.State">
            <summary>
            Gets the current State of the PhysicsTimer.
            </summary>
        </member>
        <member name="P:Physics2DDotNet.PhysicsTimer.Callback">
            <summary>
            Gets and Sets the current Callback that will be called.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Shapes.CircleShape">
            <summary>
            A Circle
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Shapes.IShape.VertexNormals">
            <summary>
            These are the normals for the original vertexes.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Shapes.CircleShape.#ctor(System.Double,System.Int32)">
            <summary>
            Creates a new Circle Instance.
            </summary>
            <param name="radius">how large the circle is.</param>
            <param name="vertexCount">
            The number or vertex that will be generated along the perimeter of the circle. 
            This is for collision detection.
            </param>
        </member>
        <member name="M:Physics2DDotNet.Shapes.CircleShape.#ctor(System.Double,System.Int32,System.Double)">
            <summary>
            Creates a new Circle Instance.
            </summary>
            <param name="radius">how large the circle is.</param>
            <param name="vertexCount">
            The number or vertex that will be generated along the perimeter of the circle. 
            This is for collision detection.
            </param>
            <param name="inertia">
            How hard it is to turn the shape. Depending on the construtor in the 
            Body this will be multiplied with the mass to determine the moment of inertia.
            </param>
        </member>
        <member name="P:Physics2DDotNet.Shapes.CircleShape.Radius">
            <summary>
            the distance from the position where the circle ends.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Shapes.MultiPolygonShape">
            <summary>
            A shape that contains multiple polygons.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Shapes.ParticleShape">
            <summary>
            Represents a Single point.
            </summary>
        </member>
        <member name="F:Physics2DDotNet.Shapes.ParticleShape.Default">
            <summary>
            All particles are the same! so use this one!
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Shapes.ParticleShape.#ctor">
            <summary>
            Creates a new Particle Instance.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Shapes.PolygonShape">
            <summary>
            Use this to Represent a Polygon in the engine
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Physics2DDotNet.Shapes.PolygonShape.#ctor(AdvanceMath.Vector2D[],System.Double)" -->
        <member name="M:Physics2DDotNet.Shapes.PolygonShape.#ctor(AdvanceMath.Vector2D[],System.Double,System.Double)">
            <summary>
            Creates a new Polygon Instance.
            </summary>
            <param name="vertexes">the vertexes that make up the shape of the Polygon</param>
            <param name="gridSpacing">
            How large a grid cell is. Usualy you will want at least 2 cells between major vertexes.
            The smaller this is the better precision you get, but higher cost in memory. 
            The larger the less precision and if it's to high collision detection may fail completely.
            </param>
            <param name="momentOfInertiaMultiplier">
            How hard it is to turn the shape. Depending on the construtor in the 
            Body this will be multiplied with the mass to determine the moment of inertia.
            </param>
        </member>
        <member name="T:Physics2DDotNet.Shapes.RaySegment">
            <summary>
            A Ray Segment is a Ray that has a length. It can be used to represent 
            lasers or very fast projectiles.
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Shapes.RaySegmentIntersectionInfo">
            <summary>
            The information of an intersection with another shape. 
            </summary>
        </member>
        <member name="P:Physics2DDotNet.Shapes.RaySegmentIntersectionInfo.Distances">
            <summary>
            An collection of distances away from the Ray Segments. 
            The indexes match up with the Segments in the Ray Segments class. 
            A negative value means there was no intersection. 
            </summary>
        </member>
        <member name="T:Physics2DDotNet.Shapes.RaySegmentsShape">
            <summary>
            A shape that holds multiple Ray Segments and generates custom collision events 
            for when they intersect something. The Sequential Impulses Solver does not 
            handle collisions with this shape.
            </summary>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.CreateFromBitmap(System.Boolean[0:,0:])">
            <summary>
            Takes a 2D Boolean array with a true value representing a collidable pixel and converts 
            it to an array of vertex that surrounds that bitmap. The bitmap should be a single piece 
            if there are many pieces it will only return the geometry of the first piece it comes 
            across. Make sure there are at least 3 pixels in a piece otherwise an exception will be 
            thrown (it wont be a polygon). 
            </summary>
            <param name="bitmap">a bitmap to be converted. true means its collidable.</param>
            <returns>A Vector2D[] representing the bitmap.</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.CreateRectangle(System.Double,System.Double)">
            <summary>
            creates vertexes that describe a Rectangle.
            </summary>
            <param name="width"></param>
            <param name="height">The length of the Rectangle</param>
            <returns>array of vectors the describe a rectangle</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.GetInertia(AdvanceMath.Vector2D[])">
            <summary>
            Calculates the moment of inertia for a polygon
            </summary>
            <param name="vertexes"></param>
            <returns>the moment of inertia</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.GetIntersection(AdvanceMath.Vector2D[],System.Double)">
            <summary>
            INCOMPLETE! TODO: FINISH
            </summary>
            <param name="vertexes"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.Subdivide(AdvanceMath.Vector2D[],System.Double)">
            <summary>
            makes sure the distance between 2 vertexes is under the length passed, by adding vertexes between them.
            </summary>
            <param name="vertexes">the original vertexes.</param>
            <param name="maxLength">the maximum distance allowed between 2 vertexes</param>
            <returns>The new vertexes.</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.Subdivide(AdvanceMath.Vector2D[],System.Double,System.Boolean)">
            <summary>
            makes sure the distance between 2 vertexes is under the length passed, by adding vertexes between them.
            </summary>
            <param name="vertexes">the original vertexes.</param>
            <param name="maxLength">the maximum distance allowed between 2 vertexes</param>
            <param name="loop">if it should check the distance between the first and last vertex.</param>
            <returns>The new vertexes.</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.Reduce(AdvanceMath.Vector2D[])">
            <summary>
            Reduces a Polygon's number of vertexes.
            </summary>
            <param name="vertexes">The Polygon to reduce.</param>
            <returns>The reduced vertexes.</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.Reduce(AdvanceMath.Vector2D[],System.Double)">
            <summary>
            Reduces a Polygon's number of vertexes.
            </summary>
            <param name="vertexes">The Polygon to reduce.</param>
            <param name="areaTolerance">
            The amount the removal of a vertex is allowed to change the area of the polygon.
            (Setting this value to 0 will reverse what the Subdivide method does) 
            </param>
            <returns>The reduced vertexes.</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.GetArea(AdvanceMath.Vector2D[])">
            <summary>
            Calculates the area of a polygon.
            </summary>
            <param name="vertexes">The vertexes of the polygon.</param>
            <returns>The area.</returns>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.GetCentroid(AdvanceMath.Vector2D[])">
            <summary>
            Calculates the Centroid of a polygon.
            </summary>
            <param name="vertexes">The vertexes of the polygon.</param>
            <returns>The Centroid of a polygon.</returns>
            <remarks>
            This is Also known as Center of Gravity/Mass.
            </remarks>
        </member>
        <member name="M:Physics2DDotNet.Shapes.VertexHelper.CenterVertexes(AdvanceMath.Vector2D[])">
            <summary>
            repositions the polygon so the Centroid is the origin.
            </summary>
            <param name="vertexes">The vertexes of the polygon.</param>
            <returns>The vertexes of the polygon with the Centroid as the Origin.</returns>
        </member>
        <member name="P:Physics2DDotNet.Solvers.CollisionSolver.Engine">
            <summary>
            The engine this solver is in.
            </summary>
        </member>
        <member name="T:Jypeli.RandomGen">
            <summary>
            Satunnaisgeneraattori. Luo satunnaisia arvoja, mm. lukuja, vektoreita sekä kulmia.
            </summary>
        </member>
        <member name="M:Jypeli.RandomGen.NextBool">
            <summary>
            Palauttaa satunnaisen totuusarvon.
            </summary>
        </member>
        <member name="M:Jypeli.RandomGen.NextInt(System.Int32)">
            <summary>
            Palauttaa satunnaisen kokonaisluvun, joka on vähintään 0 ja pienempi kuin <code>max</code>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextInt(System.Int32,System.Int32)">
            <summary>
            Palauttaa satunnaisen kokonaisluvun, joka on vähintään <code>min</code> ja pienempi kuin <code>max</code>.
            </summary>
        </member>
        <member name="M:Jypeli.RandomGen.NextDouble(System.Double,System.Double)">
            <summary>
            Palauttaa satunnaisen liukuluvun parametrien <code>min</code> ja <code>max</code> väliltä.
            </summary>
        </member>
        <member name="M:Jypeli.RandomGen.NextLetter(System.Boolean)">
            <summary>
            Arpoo satunnaisen kirjaimen väliltä a-z.
            </summary>
            <param name="upperCase">Käytetäänkö ISOJA KIRJAIMIA</param>
            <returns>Satunnainen kirjain</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextDirection">
            <summary>
            Palauttaa satunnaisen suunnan.
            </summary>
        </member>
        <member name="M:Jypeli.RandomGen.NextDoubleArray(System.Double,System.Double,System.Int32)">
            <summary>
            Palauttaa double-taulukon.
            </summary>
            <param name="min">Pienin arvo.</param>
            <param name="max">Suurin arvo.</param>
            <param name="size">Taulukon koko.</param>
            <returns>Taulukko.</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextDoubleArray(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Palauttaa double-taulukon.
            </summary>
            <param name="min">Pienin arvo.</param>
            <param name="max">Suurin arvo.</param>
            <param name="size">Taulukon koko.</param>
            <param name="maxchange">Suurin sallittu muutos kahden luvun välillä.</param>
            <returns>Taulukko.</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextColor">
            <summary>
            Palauttaa satunnaisen värin.
            </summary>
            <returns>Väri.</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextColor(Jypeli.Color,Jypeli.Color)">
            <summary>
            Palauttaa satunnaisen värin.
            </summary>
            <returns>Väri.</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextAngle">
            <summary>
            Palauttaa satunnaisen kulman.
            </summary>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextVector(System.Double,System.Double)">
            <summary>
            Palauttaa satunnaisen vektorin.
            </summary>
            <param name="minLength">Vektorin minimipituus.</param>
            <param name="maxLength">Vektorin maksimipituus.</param>
            <returns>Satunnainen vektori</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextVector(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Palauttaa satunnaisen vektorin.
            </summary>
            <param name="minX">Pienin sallittu X-koordinaatti</param>
            <param name="minY">Pienin sallittu Y-koordinaatti</param>
            <param name="maxX">Suurin sallittu X-koordinaatti</param>
            <param name="maxY">Suurin sallittu Y-koordinaatti</param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextAngle(Jypeli.Angle)">
            <summary>
            Palauttaa satunnaisen kulman nollasta annettuun maksimiin.
            </summary>
            <param name="max">Maksimikulma.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextAngle(Jypeli.Angle,Jypeli.Angle)">
            <summary>
            Palauttaa satunnaisen kulman tietyltä väliltä.
            </summary>
            <param name="min">Minimikulma.</param>
            <param name="max">Maksimikulma.</param>
            <returns>Kulma.</returns>
        </member>
        <member name="M:Jypeli.RandomGen.NextIntWithProbabilities(System.Double[])">
            <summary>
            Palauttaa satunnaisen kokonaisluvun annettujen todennäköisyyksien
            perusteella.
            </summary>
            <param name="p">Todennäköisyydet. 0 = ei koskaan, 1 = varmasti, 0.5 = 50% jne.</param>
            <example>
            int luku = RandomGen.NextIntWithProbabilities( 0.4 );  // palauttaa 40% tod.näk. nollan, muuten ykkösen (60%)
            int luku2 = RandomGen.NextIntWithProbabilities( 0.6, 0.2 );  // palauttaa 60% tod.näk. nollan, 20% tn. ykkösen ja muuten kakkosen (40%)
            int luku3 = RandomGen.NextIntWithProbabilities( 0.6, 0.4 );  // palauttaa 60% tod.näk. nollan ja 40% tn. ykkösen
            </example>
            <returns>Kokonaisluku väliltä 0 - (p+1)</returns>
        </member>
        <member name="M:Jypeli.RandomGen.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
            Sotkee rakenteen satunnaiseen järjestykseen
            </summary>
            <typeparam name="T">Minkä tyyppisiä alkioita sotketaan</typeparam>
            <param name="list">tietorakenne jossa sotkettavat alkiot</param>
        </member>
        <member name="M:Jypeli.RandomGen.SelectOne``1(``0[])">
            <summary>
            Palauttaa yhden annetuista vaihtoehdoista.
            Esim. RandomGen.SelectOne&lt;string&gt;("yksi", "kaksi", "kolme");
            </summary>
            <typeparam name="T">Vaihtoehtojen tyyppi</typeparam>
            <param name="choices">Vaihtoehdot</param>
            <returns>Satunnainen vaihtoehto</returns>
        </member>
        <member name="M:Jypeli.RandomGen.SelectOne``1(System.Collections.Generic.IList{``0})">
            <summary>
            Palauttaa yhden annetuista vaihtoehdoista.
            Esim. RandomGen.SelectOne&lt;string&gt;("yksi", "kaksi", "kolme");
            </summary>
            <typeparam name="T">Vaihtoehtojen tyyppi</typeparam>
            <param name="choices">Vaihtoehdot</param>
            <returns>Satunnainen vaihtoehto</returns>
        </member>
        <member name="T:Jypeli.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Jypeli.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Jypeli.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Jypeli.RoadMap">
            <summary>
            Luo tien. Tie koostuu useasta pienemmästä "pätkästä".
            </summary>
        </member>
        <member name="M:Jypeli.RoadMap.#ctor(System.Collections.Generic.IList{Jypeli.Vector})">
            <summary>
            Luo uuden RoadMapin.
            </summary>
            <param name="wayPoints">Lista reittipisteistä.</param>
        </member>
        <member name="M:Jypeli.RoadMap.GetAngle(System.Int32)">
            <summary>
            Etenemissuunta pisteen kohdalla.
            </summary>
            <param name="wayPointIndex">Pisteen indeksi (alkaen nollasta).</param>
        </member>
        <member name="M:Jypeli.RoadMap.Insert">
            <summary>
            Luo tien kentälle.
            </summary>
        </member>
        <member name="P:Jypeli.RoadMap.DefaultWidth">
            <summary>
            Tien oletusleveys.
            </summary>
        </member>
        <member name="P:Jypeli.RoadMap.DefaultFriction">
            <summary>
            Tien oletuskitka.
            </summary>
        </member>
        <member name="P:Jypeli.RoadMap.Segments">
            <summary>
            Tienpätkät.
            </summary>
        </member>
        <member name="P:Jypeli.RoadMap.CreateSegmentFunction">
            <summary>
            Funktio, joka luo yksittäisen tienpätkän.
            </summary>
            Funktion tulisi olla muotoa
            <example>
            PhysicsObject CreateSegment( double width, double height, Shape shape )
            </example>
            Funktion tulisi sijoittaa saamansa parametrit uudelle oliolle. Lisäksi
            funktion tarvitsee lisätä luomansa olio peliin.
        </member>
        <member name="T:Jypeli.Shape">
            <summary>
            Kuvio.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Circle">
            <summary>
            Ympyrä tai ellipsi.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Ellipse">
            <summary>
            Ellipsi tai ympyrä.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Rectangle">
            <summary>
            Suorakulmio.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Triangle">
            <summary>
            Tasasivuinen kolmio.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Heart">
            <summary>
            Sydän.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Star">
            <summary>
            Tähti.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Diamond">
            <summary>
            Timantti- / salmiakkikuvio
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Pentagon">
            <summary>
            Pentagoni eli viisikulmio.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Hexagon">
            <summary>
            Heksagoni eli kuusikulmio.
            </summary>
        </member>
        <member name="F:Jypeli.Shape.Octagon">
            <summary>
            Oktagoni eli kahdeksankulmio.
            </summary>
        </member>
        <member name="M:Jypeli.Shape.FromImage(Jypeli.Image)">
            <summary>
            Luo kuvion annetusta kuvasta. Kuvassa tulee olla vain yksi
            yhtenäinen muoto (toisin sanoen kuvio ei voi koostua monesta osasta).
            </summary>
            <remarks>
            Kuvion luominen voi olla melko hidasta. Kannattaa luoda kuvio heti pelin alussa
            ja käyttää kerran luotua kuviota kaikille olioille.
            </remarks>
            <param name="image">Kuva, josta muoto luetaan.</param>
        </member>
        <member name="M:Jypeli.Shape.FromString(System.String)">
            <summary>
            Luo muodon merkkijonosta, esim. "Circle"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.Shape.CreateRegularPolygon(System.Int32)">
            <summary>
            Luo säännöllisen monikulmion (polygonin)
            </summary>
            <param name="vertexCount">Kulmapisteiden määrä (3=kolmio, 4=neliö jne.)</param>
            <returns>Monikulmio</returns>
        </member>
        <member name="M:Jypeli.Shape.IsInside(System.Double,System.Double)">
            <summary>
            Onko piste muodon sisällä.
            Pisteen koordinaatiston origo on muodon keskellä.
            Muoto on kokoa 1x1 jos IsUnitSize, muuten saman kokoinen kuin olio.
            </summary>
            <param name="x">X-koordinaatti</param>
            <param name="y">Y-koordinaatti</param>
            <returns>Onko piste muodon sisällä</returns>
        </member>
        <member name="P:Jypeli.Shape.IsUnitSize">
            <summary>
            If true, the shape must be scaled by the size of the object
            that has the shape. Typically, an unit-sized object has width
            and height of 1.0.
            </summary>
        </member>
        <member name="T:Jypeli.Ellipse">
            <summary>
            Ympyrä.
            </summary>
        </member>
        <member name="T:Jypeli.Rectangle">
            <summary>
            Suorakulmio.
            </summary>
        </member>
        <member name="T:Jypeli.Heart">
            <summary>
            Sydän.
            </summary>
        </member>
        <member name="T:Jypeli.Star">
            <summary>
            Tähti.
            </summary>
        </member>
        <member name="T:Jypeli.Triangle">
            <summary>
            Tasasivuinen kolmio.
            </summary>
        </member>
        <member name="T:Jypeli.RaySegment">
            <summary>
            Jana.
            </summary>
        </member>
        <member name="T:Jypeli.Polygon">
            <summary>
            Monikulmio.
            </summary>
        </member>
        <member name="P:Jypeli.Polygon.IsUnitSize">
            <summary>
            If true, the shape must be scaled by the size of the object
            that has the shape. Typically, an unit-sized object has width
            and height of 1.0.
            </summary>
        </member>
        <member name="T:Jypeli.RegularPolygon">
            <summary>
            Säännöllinen monikulmio.
            </summary>
        </member>
        <member name="T:Jypeli.IndexTriangle">
            <summary>
            Muotojen määrityksessä käytettävä kolmio.
            </summary>
        </member>
        <member name="F:Jypeli.IndexTriangle.i1">
            <summary>
            Kulmapisteet.
            </summary>
        </member>
        <member name="F:Jypeli.IndexTriangle.i2">
            <summary>
            Kulmapisteet.
            </summary>
        </member>
        <member name="F:Jypeli.IndexTriangle.i3">
            <summary>
            Kulmapisteet.
            </summary>
        </member>
        <member name="M:Jypeli.IndexTriangle.#ctor(System.Int16,System.Int16,System.Int16)">
            <summary>
            Luo uuden kolmion. Parametreina kulmapisteiden indeksit lueteltuna myötäpäivään.
            </summary>
        </member>
        <member name="M:Jypeli.IndexTriangle.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Luo uuden kolmion. Parametreina kulmapisteiden indeksit lueteltuna myötäpäivään.
            </summary>
        </member>
        <member name="T:Jypeli.ShapeCache">
            <summary>
            Sisältää valmiiksi lasketut kolmiot, joiden avulla piirtäminen on suoraviivaista.
            </summary>
        </member>
        <member name="F:Jypeli.ShapeCache.OutlineVertices">
            <summary>
            Ulkoreunan verteksit, lueteltuna vastapäivään.
            </summary>
        </member>
        <member name="F:Jypeli.ShapeCache.Vertices">
            <summary>
            Kaikki verteksit, ml. kolmioiden kulmapisteet.
            </summary>
        </member>
        <member name="F:Jypeli.ShapeCache.Triangles">
            <summary>
            Kolmiot, joiden avulla kuvio voidaan täyttää värillä.
            </summary>
        </member>
        <member name="M:Jypeli.ShapeCache.#ctor(Jypeli.Vector[],Jypeli.IndexTriangle[])">
            <summary>
            Luo kuvion kolmioilla, joiden avulla kuvio voidaan täyttää värillä. Kaikkien
            verteksien tulee olla kuvion ulkoreunalla.
            </summary>
            <param name="outlineVertices">Ulkoreunan verteksit, lueteltuna vastapäivään.</param>
            <param name="triangles">Kolmiot.</param>
        </member>
        <member name="M:Jypeli.ShapeCache.#ctor(Jypeli.Vector[])">
            <summary>
            Luo kuvion pelkillä reuna-vertekseillä. Kuviolle ei tule tietoa kolmioista,
            näin ollen sitä ei voi täyttää värillä.
            </summary>
            <param name="outlineVertices">Ulkoreunan verteksit, lueteltuna vastapäivään.</param>
        </member>
        <member name="M:Jypeli.ShapeCache.#ctor(Jypeli.Vector[],Jypeli.IndexTriangle[],System.Int16[])">
            <summary>
            Luo kuvion, joka voidaan piirtää täytettynä värillä.
            </summary>
            <param name="vertices">Kaikki verteksit (ml. reunan verteksit sekä kolmioiden verteksit).</param>
            <param name="triangles">Kolmiot, joista kuvio koostuu.</param>
            <param name="outlineIndices">Ulkoreunan verteksit lueteltuna vastapäivään, indekseinä <c>vertices</c>-taulukkoon.</param>
        </member>
        <member name="T:Jypeli.TextureBitmap">
            <summary>
            Tekstuuribittikartta muotojen luomiseen tekstuureista.
            Sisältää tekstuurin tiedot väritaulukkona.
            </summary>
        </member>
        <member name="F:Jypeli.TextureBitmap.bitmap">
            <summary>
            Bittikarttadata.
            </summary>
        </member>
        <member name="M:Jypeli.TextureBitmap.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Predicate{Microsoft.Xna.Framework.Color})">
            <summary>
            Luo uuden bittikartan tekstuurin pohjalta.
            </summary>
            <param name="texture">Tekstuuri.</param>
            <param name="isOpaque">Predikaatti, joka määrää, onko annettu väri läpinäkyvä.</param>
        </member>
        <member name="M:Jypeli.TextureBitmap.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Luo uuden bittikartan tekstuurin pohjalta oletusläpinäkyvyysehdoilla.
            Ks. <see cref="M:Jypeli.TextureBitmap.IsOpaqueColor(Microsoft.Xna.Framework.Color)"/>
            </summary>
            <param name="texture">Tekstuuri.</param>
        </member>
        <member name="M:Jypeli.TextureBitmap.IsOpaqueColor(Microsoft.Xna.Framework.Color)">
            <summary>
            Päättelee pikselin läpinäkyvyyden sen värin perusteella.
            Tässä tapauksessa alfa-arvon tulee olla suurempi tai yhtäsuuri kuin 127.
            </summary>
            <param name="c">Pikselin väri.</param>        
            <returns>Läpinäkyvyys.</returns>
        </member>
        <member name="P:Jypeli.TextureBitmap.Width">
            <summary>
            Bittikartan leveys pikseleinä.
            </summary>
        </member>
        <member name="P:Jypeli.TextureBitmap.Height">
            <summary>
            Bittikartan korkeus pikseleinä.
            </summary>
        </member>
        <member name="P:Jypeli.TextureBitmap.Item(System.Int32,System.Int32)">
            <summary>
            Palauttaa yksittäisen pikselin värin annetusta koordinaattipisteestä (ensin x, sitten y).
            </summary>
        </member>
        <member name="P:Jypeli.Sound.IsLooped">
            <summary>
            Jos <c>true</c>, ääntä soitetaan toistuvasti.
            </summary>
        </member>
        <member name="P:Jypeli.Sound.Pan">
            <summary>
            Äänen kuuluminen vasemmasta ja oikeasta kaiuttimesta.
            Arvot vaihtelevat välillä -1.0 - 1.0 seuraavasti:
            -1.0 -> täysin vasemmalla
            0.0 -> keskellä
            1.0 -> täysin oikealla
            </summary>
        </member>
        <member name="P:Jypeli.Sound.Volume">
            <summary>
            Äänenvoimakkuus välillä 0.0 - 1.0.
            </summary>
        </member>
        <member name="P:Jypeli.Sound.Pitch">
            <summary>
            Äänenkorkeus välillä -1.0 - 1.0.
            </summary>
            <remarks>
            -1.0 on oktaavin alempana, 1.0 oktaavin ylempänä.
            </remarks>
        </member>
        <member name="T:Jypeli.SoundEffect">
            <summary>
            Ääniefekti. Yhdestä efektistä voi luoda <c>CreateSound</c>-metodilla monta ääntä (<c>Sound</c>),
            jotka voivat soida yhtäaikaa. Ääntä ei tarvitse kuitenkaan luoda itse, jos vain kutsuu
            <c>Play</c>-metodia.
            </summary>
        </member>
        <member name="M:Jypeli.SoundEffect.CreateSound">
            <summary>
            Luo Sound-tyyppisen olion. Oliolla on ominaisuuksia kuten voimakkuus ja korkeus
            joita voidaan muuttaa soiton aikana.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.SoundEffect.Play">
            <summary>
            Soittaa äänen.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.SoundEffect.Play(System.Double,System.Double,System.Double)">
            <summary>
            Soittaa äänen.
            </summary>
            <param name="volume">Äänenvoimakkuus 0.0 - 1.0</param>
            <param name="pitch">Äänen taajuusmuutos. -1.0 = oktaavi alaspäin, 1.0 = oktaavi ylöspäin, 0.0 = normaali.</param>
            <param name="pan">Balanssi eli kummasta kaiuttimesta ääni kuuluu enemmän. -1.0 = kokonaan vasemmasta, 1.0 = kokonaan oikeasta, 0.0 = yhtä paljon kummastakin </param>
            <returns></returns>
        </member>
        <member name="M:Jypeli.SoundEffect.Stop">
            <summary>
            Pysäyttää äänen toistamisen.
            </summary>
        </member>
        <member name="P:Jypeli.SoundEffect.Duration">
            <summary>
            Ääniefektin kesto sekunteina.
            </summary>
        </member>
        <member name="P:Jypeli.SoundEffect.Position">
            <summary>
            Paikka äänessä sekunteina (missä kohtaa toistoa ollaan). Ei voi asettaa.
            </summary>
        </member>
        <member name="P:Jypeli.SoundEffect.IsPlaying">
            <summary>
            Toistetaanko ääntä parhaillaan.
            </summary>
        </member>
        <member name="P:Jypeli.SoundEffect.MasterVolume">
            <summary>
            Äänenvoimakkuuden taso 0.0 - 1.0
            </summary>
        </member>
        <member name="T:Jypeli.StorageFile">
            <summary>
            Tiedosto.
            </summary>
        </member>
        <member name="M:Jypeli.WindowsFileManager.Exists(System.String)">
            <summary>
            Kertoo onko tiedosto tai hakemisto olemassa.
            </summary>
            <param name="fileName">Tiedoston tai hakemiston nimi</param>
            <returns>Onko olemassa</returns>
        </member>
        <member name="M:Jypeli.WindowsFileManager.ChDir(System.String)">
            <summary>
            Vaihtaa työhakemistoa.
            </summary>
            <param name="path">Hakemistopolku.</param>
            <returns>Onnistuiko hakemiston vaihtaminen (palauttaa false jos hakemistoa ei ole).</returns>
        </member>
        <member name="M:Jypeli.WindowsFileManager.MkDir(System.String)">
            <summary>
            Luo uuden hakemiston.
            </summary>
            <param name="path">Hakemistopolku.</param>
        </member>
        <member name="M:Jypeli.WindowsFileManager.RmDir(System.String)">
            <summary>
            Tuhoaa hakemiston. Heittää poikkeuksen jos hakemisto ei ole tyhjä.
            Ei heitä poikkeusta, jos hakemistoa ei ole olemassa.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Jypeli.WindowsFileManager.GetFileList">
            <summary>
            Antaa listan nykyisessä hakemistossa olevista tiedostoista.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jypeli.WindowsFileManager.Open(System.String,System.Boolean)">
            <summary>
            Avaa tiedoston.
            </summary>
            <param name="fileName">Tiedoston nimi.</param>
            <param name="write">Tarvitaanko tiedostoon kirjoitusoikeus.</param>
            <returns>StorageFile-olio</returns>
        </member>
        <member name="M:Jypeli.WindowsFileManager.Delete(System.String)">
            <summary>
            Poistaa tiedoston.
            Ei heitä poikkeusta, jos tiedostoa ei ole olemassa.
            </summary>
            <param name="fileName">Tiedoston nimi</param>
        </member>
        <member name="T:Jypeli.WindowsLocation">
            <summary>
            Usein käytettyjä polkuja Windowsissa.
            </summary>
        </member>
        <member name="F:Jypeli.WindowsLocation.MyDocuments">
            <summary>
            Omat tiedostot.
            </summary>
        </member>
        <member name="F:Jypeli.WindowsLocation.MyMusic">
            <summary>
            Oma musiikki.
            </summary>
        </member>
        <member name="F:Jypeli.WindowsLocation.MyPictures">
            <summary>
            Omat kuvatiedostot.
            </summary>
        </member>
        <member name="F:Jypeli.WindowsLocation.MyVideos">
            <summary>
            Omat videot.
            </summary>
        </member>
        <member name="F:Jypeli.WindowsLocation.ExePath">
            <summary>
            Ohjelman hakemisto.
            </summary>
        </member>
        <member name="F:Jypeli.WindowsLocation.DataPath">
            <summary>
            Ohjelman data-alihakemisto.
            </summary>
        </member>
        <member name="F:Jypeli.WindowsLocation.ContentPath">
            <summary>
            Ohjelman content-alihakemisto.
            </summary>
        </member>
        <member name="T:Jypeli.StringList">
            <summary>
            Järjestetty lista merkkijonoja.
            </summary>
        </member>
        <member name="M:Jypeli.StringList.op_Addition(Jypeli.StringList,System.Object)">
            <summary>
            Jatkaa listaa oliolla, joka voi olla toinen lista, toinen merkkijono jne.
            </summary>
            <param name="a">Lista</param>
            <param name="b">Olio.</param>
            <returns>Lista jatkettuna oliolla.</returns>
        </member>
        <member name="M:Jypeli.StringList.op_Addition(System.Object,Jypeli.StringList)">
            <summary>
            Jatkaa oliota listalla. Olio voi olla toinen lista, toinen merkkijono jne.
            </summary>
            <param name="a">Olio</param>
            <param name="b">Lista.</param>
            <returns>Olio jatkettuna listalla.</returns>
        </member>
        <member name="M:Jypeli.StringList.op_Implicit(Jypeli.StringList)~System.Collections.Generic.List{System.String}">
            <summary>
            Muuntaa merkkijonolistan implisiittisesti listaksi merkkijonoja.
            </summary>
            <param name="list">Merkkijonolista.</param>
            <returns>Lista merkkijonoja.</returns>
        </member>
        <member name="M:Jypeli.StringList.op_Implicit(System.Collections.Generic.List{System.String})~Jypeli.StringList">
            <summary>
            Muuntaa listan merkkijonoja implisiittisesti merkkijonolistaksi.
            </summary>
            <param name="list">Lista merkkijonoja.</param>
            <returns>Merkkijonolista.</returns>
        </member>
        <member name="M:Jypeli.StringList.op_Implicit(Jypeli.StringList)~System.String[]">
            <summary>
            Muuntaa merkkijonolistan implisiittisesti taulukoksi merkkijonoja.
            </summary>
            <param name="list">Merkkijonolista.</param>
            <returns>Taulukko merkkijonoja.</returns>
        </member>
        <member name="M:Jypeli.StringList.op_Implicit(System.String[])~Jypeli.StringList">
            <summary>
            Muuntaa taulukon merkkijonoja implisiittisesti merkkijonolistaksi.
            </summary>
            <param name="array">Taulukko merkkijonoja.</param>
            <returns>Merkkijonolista.</returns>
        </member>
        <member name="M:Jypeli.StringList.#ctor">
            <summary>
            Luo uuden tyhjän merkkijonolistan.
            </summary>
        </member>
        <member name="M:Jypeli.StringList.#ctor(Jypeli.StringList)">
            <summary>
            Luo uuden merkkijonolistan olemassaolevan kopiona.
            </summary>
            <param name="source">Olemassaoleva merkkijonolista.</param>
        </member>
        <member name="M:Jypeli.StringList.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Luo uuden merkkijonolistan olemassaolevan kopiona.
            </summary>
            <param name="source">Olemassaoleva merkkijonolista.</param>
        </member>
        <member name="M:Jypeli.StringList.#ctor(System.Object)">
            <summary>
            Luo uuden merkkijonolistan oliosta.
            </summary>
            <param name="source">Olio.</param>
        </member>
        <member name="M:Jypeli.StringList.#ctor(System.String[])">
            <summary>
            Luo uuden merkkijonolistan taulukosta tai parametrina
            annetuista merkkijonoista.
            </summary>
            <param name="source">Merkkijonot taulukkona tai parametreina.</param>
        </member>
        <member name="M:Jypeli.StringList.FromAsset(System.String)">
            <summary>
            Lukee merkkijonolistan Content-projektin tekstitiedostosta.
            </summary>
            <param name="assetName">Tiedoston nimi</param>        
        </member>
        <member name="M:Jypeli.StringList.AssignFrom(System.IO.Stream)">
            <summary>
            Lukee merkkijonolistan tietovirrasta.
            </summary>
            <param name="stream">Luettava virta.</param>
        </member>
        <member name="M:Jypeli.StringList.FromFile(System.String)">
            <summary>
            Lukee merkkijonolistan tiedostosta.
            Huom. toimii vain PC:llä, käytä mieluummin
            FromAsset-metodia jos vain mahdollista.
            </summary>
            <param name="path">Tiedoston polku.</param>
        </member>
        <member name="M:Jypeli.StringList.Add(System.String[])">
            <summary>
            Lisää yhden tai useamman rivin merkkijonolistaan.
            </summary>
            <param name="lines">Rivi(t)</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.Add(Jypeli.StringList)">
            <summary>
            Lisää toisen merkkijonolistan tämän perään.
            </summary>
            <param name="list">Merkkijonolista</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.Add(System.Collections.Generic.List{System.String})">
            <summary>
            Lisää toisen merkkijonolistan tämän perään.
            </summary>
            <param name="list">Lista merkkijonoja.</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.Add(System.Object)">
            <summary>
            Lisää olion merkkijonolistan perään.
            </summary>
            <param name="obj">Olio.</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveAll(System.String[])">
            <summary>
            Poistaa yhden tai useamman rivin.
            Kaikki rivin ilmentymät poistetaan.
            </summary>
            <param name="lines">Poistettava(t) rivi(t)</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveAll(System.Collections.Generic.List{System.String})">
            <summary>
            Poistaa listassa määritellyt rivit.
            Kaikki rivin ilmentymät poistetaan.
            </summary>
            <param name="list">Lista joka sisältää poistettavat rivit</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveAll(Jypeli.StringList)">
            <summary>
            Poistaa toisessa listassa määritellyt rivit.
            Kaikki rivin ilmentymät poistetaan.
            </summary>
            <param name="list">Lista joka sisältää poistettavat rivit</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveFirst(System.String[])">
            <summary>
            Poistaa yhden tai useamman rivin.
            Vain ensimmäinen ilmentymä poistetaan.
            </summary>
            <param name="lines">Poistettava(t) rivi(t)</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveFirst(System.Collections.Generic.List{System.String})">
            <summary>
            Poistaa listassa määritellyt rivit.
            Vain ensimmäinen ilmentymä poistetaan.
            </summary>
            <param name="list">Lista joka sisältää poistettavat rivit</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveFirst(Jypeli.StringList)">
            <summary>
            Poistaa toisessa listassa määritellyt rivit.
            Vain ensimmäinen ilmentymä poistetaan.
            </summary>
            <param name="list">Lista joka sisältää poistettavat rivit</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveLast(System.String[])">
            <summary>
            Poistaa yhden tai useamman rivin.
            Vain viimeinen ilmentymä poistetaan.
            </summary>
            <param name="lines">Poistettava(t) rivi(t)</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveLast(System.Collections.Generic.List{System.String})">
            <summary>
            Poistaa listassa määritellyt rivit.
            Vain ensimmäinen ilmentymä poistetaan.
            </summary>
            <param name="list">Lista joka sisältää poistettavat rivit</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.RemoveLast(Jypeli.StringList)">
            <summary>
            Poistaa toisessa listassa määritellyt rivit.
            Vain ensimmäinen ilmentymä poistetaan.
            </summary>
            <param name="list">Lista joka sisältää poistettavat rivit</param>
            <returns>Lista itse</returns>
        </member>
        <member name="M:Jypeli.StringList.Contains(System.String)">
            <summary>
            Tarkistaa, löytyykö rivi listasta.
            </summary>
            <param name="line">Etsittävä rivi.</param>
            <returns>true jos löytyy</returns>
        </member>
        <member name="M:Jypeli.StringList.FirstBeginningWith(System.String)">
            <summary>
            Palauttaa listasta ensimmäisen annetulla merkkijonolla
            alkavan merkkijonon.
            </summary>
            <param name="line">Etsittävän rivin alku.</param>
            <returns>Löydetty merkkijono tai null jos ei löytynyt.</returns>
        </member>
        <member name="M:Jypeli.StringList.Clear">
            <summary>
            Tyhjentää listan.
            </summary>
        </member>
        <member name="P:Jypeli.StringList.Item(System.Int32)">
            <summary>
            Merkkijono listassa.
            </summary>
            <param name="index">Merkkijonon indeksi</param>
            <returns>Merkkijono</returns>
        </member>
        <member name="P:Jypeli.StringList.IsReadOnly">
            <summary>
            Voiko listaa vain lukea, ei kirjoittaa.
            </summary>
        </member>
        <member name="P:Jypeli.StringList.Length">
            <summary>
            Listan pituus.
            Jos asetetaan pienemmäksi kuin nykyinen koko, ylimenevät rivit poistetaan.
            Jos asetetaan suuremmaksi kuin nykyinen koko, lisätään tyhjiä rivejä.
            </summary>
        </member>
        <member name="P:Jypeli.StringList.Count">
            <summary>
            Listan pituus.
            Jos asetetaan pienemmäksi kuin nykyinen koko, ylimenevät rivit poistetaan.
            Jos asetetaan suuremmaksi kuin nykyinen koko, lisätään tyhjiä rivejä.
            </summary>
        </member>
        <member name="E:Jypeli.StringList.Changed">
            <summary>
            Tapahtuu kun listan sisältö muuttuu.
            </summary>
        </member>
        <member name="T:Jypeli.Timer">
            <summary>
            Ajastin, joka voidaan asettaa laukaisemaan tapahtumia tietyin väliajoin.
            </summary>
        </member>
        <member name="M:Jypeli.Timer.#ctor">
            <summary>
            Alustaa uuden ajastinluokan.
            </summary>
        </member>
        <member name="M:Jypeli.Timer.SingleShot(System.Double,System.Action)">
            <summary>
            Kutsuu aliohjelmaa <c>onTimeout</c> annetun ajan kuluttua.
            Ajastin luodaan automaattisesti.
            </summary>
            <param name="seconds">Aika sekunteina.</param>
            <param name="onTimeout">Kutsuttava aliohjelma.</param>
        </member>
        <member name="M:Jypeli.Timer.Limit(System.Action,System.Double)">
            <summary>
            Rajoittaa toimintaa niin, että se voidaan suorittaa vain tietyin väliajoin.
            Huom. älä käytä delegaatteja tämän metodin kanssa!
            </summary>
            <param name="action">Toiminta</param>
            <param name="seconds">Kuinka monta sekuntia täytyy odottaa ennen seuraavaa suoritusta</param>
        </member>
        <member name="M:Jypeli.Timer.Start">
            <summary>
            Käynnistää ajastimen.
            </summary>
        </member>
        <member name="M:Jypeli.Timer.Start(System.Int32)">
            <summary> 
            Käynnistää ajastimen, rajoittaa suorituskerrat. 
            </summary> 
            <param name="times">Kuinka monta kertaa tulee ajastintapahtuma.</param> 
        </member>
        <member name="M:Jypeli.Timer.Pause">
            <summary>
            Pysäyttää ajastimen tallentaen sen tilan.
            </summary>
        </member>
        <member name="M:Jypeli.Timer.Stop">
            <summary>
            Pysäyttää ajastimen ja nollaa sen tilan.
            </summary>
        </member>
        <member name="M:Jypeli.Timer.Reset">
            <summary>
            Nollaa ajastimen tilan.
            Myös suorituskerrat nollataan.
            </summary>
        </member>
        <member name="M:Jypeli.Timer.ClearAll">
            <summary>
            Poistaa kaikki ajastimet.
            </summary>
        </member>
        <member name="E:Jypeli.Timer.Timeout">
            <summary>
            Tapahtuu väliajoin.
            </summary>
        </member>
        <member name="P:Jypeli.Timer.Enabled">
            <summary>
            Ajastin päällä/pois päältä.
            </summary>
        </member>
        <member name="P:Jypeli.Timer.IgnorePause">
            <summary>
            Ajastin ei pysähdy vaikka peli pysäytettäisiin.
            </summary>
        </member>
        <member name="P:Jypeli.Timer.Interval">
            <summary>
            Aika sekunneissa, jonka välein <c>TimeOut</c> tapahtuu.
            </summary>
        </member>
        <member name="P:Jypeli.Timer.CurrentTime">
            <summary>
            Menossa oleva hetki nollasta väliaikaan (<c>Interval</c>).
            </summary>
        </member>
        <member name="P:Jypeli.Timer.SecondCounter">
            <summary>
            Sekuntilaskuri. Voidaan sitoa näyttöihin.
            </summary>
        </member>
        <member name="P:Jypeli.Timer.SecondCounterStep">
            <summary>
            Kuinka monta sekuntia sekuntilaskuri laskee yhden sekunnin aikana.
            Oletus on 1. Arvolla 2 laskuri laskee tuplanopeudella, arvolla -1 taaksepäin jne.
            </summary>
        </member>
        <member name="P:Jypeli.Timer.Times">
            <summary>
            Määrää, kuinka monta kertaa tapahtuma suoritetaan.
            Kun tapahtumaa on suoritettu tarpeeksi, <c>Enabled</c> saa automaattisesti
            arvon <c>false</c>, jolloin ajastin pysähtyy.
            Kun laskuri nollataan, myös Times palautuu oletusarvoonsa.
            Huomaa, että <c>TimesLimited</c> tulee olla <c>true</c>, että arvo otetaan huomioon.
            </summary>
            <see cref="P:Jypeli.Timer.TimesLimited"/>
        </member>
        <member name="P:Jypeli.Timer.TimesLimited">
            <summary>
            Ajastimen suorituskertojen rajoitus päälle/pois.
            </summary>
            <see cref="P:Jypeli.Timer.Times"/>
        </member>
        <member name="P:Jypeli.Timer.Tag">
            <summary>
            Vapaasti asetettava muuttuja.
            Arvo ei muutu, jos sitä ei muuteta.
            </summary>
        </member>
        <member name="T:Jypeli.Controls.PhoneBackButton">
            <summary>
            Windows Phonen Back-nappi
            </summary>
        </member>
        <member name="M:Jypeli.Controls.PhoneBackButton.Listen(Jypeli.Controls.Handler,System.String)">
            <summary>
            Kuuntelee Windows Phonen Back-nappia.
            </summary>
            <param name="handler">Aliohjelma joka suoritetaan kun painetaan nappia.</param>
            <param name="helpText">Teksti, joka kertoo mitä napin painallus tekee</param>
            <returns>Palauttaa kuuntelijan</returns>
        </member>
        <member name="M:Jypeli.Controls.PhoneBackButton.Listen``1(Jypeli.Controls.Handler,System.String,``0)">
            <summary>
            Kuuntelee Windows Phonen Back-nappia
            </summary>
            <typeparam name="T1">Valinnaisen parametrin tyyppi</typeparam>
            <param name="handler">Aliohjelma joka suoritetaan kun painetaan nappia.</param>
            <param name="helpText">Teksti, joka kertoo mitä napin painallus tekee</param>
            <param name="p1">Valinnainen parametri</param>
            <returns>Palauttaa kuuntelijan</returns>
        </member>
        <member name="M:Jypeli.Controls.PhoneBackButton.Listen``2(Jypeli.Controls.Handler,System.String,``0,``1)">
            <summary>
            Kuuntelee Windows Phonen Back-nappia
            </summary>
            <typeparam name="T1">Valinnaisen parametrin tyyppi</typeparam>
            <typeparam name="T2">Valinnaisen parametrin tyyppi</typeparam>
            <param name="handler">Aliohjelma joka suoritetaan kun painetaan nappia.</param>
            <param name="helpText">Teksti, joka kertoo mitä napin painallus tekee</param>
            <param name="p1">Valinnainen parametri</param>
            <param name="p2">Valinnainen parametri</param>
            <returns>Palauttaa kuuntelijan</returns>
        </member>
        <member name="M:Jypeli.Controls.PhoneBackButton.Listen``3(Jypeli.Controls.Handler,System.String,``0,``1,``2)">
            <summary>
            Kuuntelee Windows Phonen Back-nappia
            </summary>
            <typeparam name="T1">Valinnaisen parametrin tyyppi</typeparam>
            <typeparam name="T2">Valinnaisen parametrin tyyppi</typeparam>
            <typeparam name="T3">Valinnaisen parametrin tyyppi</typeparam>
            <param name="handler">Aliohjelma joka suoritetaan kun painetaan nappia.</param>
            <param name="helpText">Teksti, joka kertoo mitä napin painallus tekee</param>
            <param name="p1">Valinnainen parametri</param>
            <param name="p2">Valinnainen parametri</param>
            <param name="p3">Valinnainen parametri</param>
            <returns>Palauttaa kuuntelijan</returns>
        </member>
        <member name="M:Jypeli.Controls.PhoneBackButton.Listen``4(Jypeli.Controls.Handler,System.String,``0,``1,``2,``3)">
            <summary>
            Kuuntelee Windows Phonen Back-nappia
            </summary>
            <typeparam name="T1">Valinnaisen parametrin tyyppi</typeparam>
            <typeparam name="T2">Valinnaisen parametrin tyyppi</typeparam>
            <typeparam name="T3">Valinnaisen parametrin tyyppi</typeparam>
            <typeparam name="T4">Valinnaisen parametrin tyyppi</typeparam>
            <param name="handler">Aliohjelma joka suoritetaan kun painetaan nappia.</param>
            <param name="helpText">Teksti, joka kertoo mitä napin painallus tekee</param>
            <param name="p1">Valinnainen parametri</param>
            <param name="p2">Valinnainen parametri</param>
            <param name="p3">Valinnainen parametri</param>
            <param name="p4">Valinnainen parametri</param>
            <returns>Palauttaa kuuntelijan</returns>
        </member>
        <member name="T:Jypeli.WP7.TouchPanel">
            <summary>
            Kosketuspaneeli.
            </summary>
        </member>
        <member name="M:Jypeli.WP7.TouchPanel.Enable(Jypeli.ButtonState)">
            <summary>
            Ottaa käytöstä poistetun kosketuskontrollin <c>k</c> takaisin käyttöön.
            </summary>
            <param name="state">Kosketuksen tila</param>
        </member>
        <member name="M:Jypeli.WP7.TouchPanel.Disable(Jypeli.ButtonState)">
            <summary>
            Poistaa kosketuskontrollin <c>k</c> käytöstä.
            </summary>
            <param name="state">Kosketuksen tila</param>
        </member>
        <member name="P:Jypeli.WP7.TouchPanel.ActiveChannels">
            <summary>
            Kuinka monta kosketusta näytöllä on aktiivisena.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.TouchPanel.NumTouches">
            <summary>
            Kuinka monta kosketusta näytöllä on aktiivisena.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.TouchPanel.NumGestures">
            <summary>
            Kuinka monta elettä näytöllä on aktiivisena.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.TouchPanel.FollowSnipping">
            <summary>
            Seurataanko kosketusta kameralla.
            </summary>
        </member>
        <member name="P:Jypeli.WP7.TouchPanel.FollowPinching">
            <summary>
            Zoomataanko kameralla kun käyttäjä tekee nipistyseleen
            </summary>
        </member>
        <member name="P:Jypeli.WP7.TouchPanel.EmulateKeyboard">
            <summary>
            Matkitaanko näppäimistöä. Jos päällä, ruudun reunojen kosketus vastaa nuolinäppäinten
            painalluksia ja ruudun keskeltä painaminen välilyöntiä.
            </summary>
        </member>
        <member name="T:Jypeli.ScreenView">
            <summary>
            Sisältää näytön leveyden ja korkeuden sekä reunojen koordinaatit.
            Y-koordinaatti kasvaa ylöspäin.
            Koordinaatteja ei voi muuttaa.
            </summary>
        </member>
        <member name="M:Jypeli.ScreenView.#ctor(Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Alustaa uuden näyttönäkymän.
            </summary>
            <param name="viewPort">Näytön viewport.</param>
        </member>
        <member name="P:Jypeli.ScreenView.Center">
            <summary>
            Näytön keskipiste.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.Width">
            <summary>
            Näytön leveys x-suunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.Height">
            <summary>
            Näytön korkeus y-suunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.Size">
            <summary>
            Näytön koko vektorina.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.Left">
            <summary>
            Näytön vasemman reunan x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.Right">
            <summary>
            Näytön oikean reunan x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.Top">
            <summary>
            Näytön yläreunan y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.Bottom">
            <summary>
            Näytön alareunan y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.WidthSafe">
            <summary>
            Näytön "turvallinen" ts. laiteriippumaton leveys x-suunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.HeightSafe">
            <summary>
            Näytön "turvallinen" ts. laiteriippumaton korkeus y-suunnassa.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.LeftSafe">
            <summary>
            Näytön vasemman reunan "turvallinen" ts. laiteriippumaton x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.RightSafe">
            <summary>
            Näytön oikean reunan "turvallinen" ts. laiteriippumaton x-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.TopSafe">
            <summary>
            Näytön yläreunan "turvallinen" ts. laiteriippumaton y-koordinaatti.
            </summary>
        </member>
        <member name="P:Jypeli.ScreenView.BottomSafe">
            <summary>
            Näytön alareunan "turvallinen" ts. laiteriippumaton y-koordinaatti.
            </summary>
        </member>
        <member name="T:Jypeli.HorizontalAlignment">
            <summary>
            Asemointi vaakasuunnassa.
            </summary>
        </member>
        <member name="F:Jypeli.HorizontalAlignment.Center">
            <summary>
            Keskellä.
            </summary>
        </member>
        <member name="F:Jypeli.HorizontalAlignment.Left">
            <summary>
            Vasemmassa reunassa.
            </summary>
        </member>
        <member name="F:Jypeli.HorizontalAlignment.Right">
            <summary>
            Oikeassa reunassa.
            </summary>
        </member>
        <member name="T:Jypeli.VerticalAlignment">
            <summary>
            Asemointi pystysuunnassa.
            </summary>
        </member>
        <member name="F:Jypeli.VerticalAlignment.Center">
            <summary>
            Keskellä.
            </summary>
        </member>
        <member name="F:Jypeli.VerticalAlignment.Top">
            <summary>
            Yläreunassa.
            </summary>
        </member>
        <member name="F:Jypeli.VerticalAlignment.Bottom">
            <summary>
            Alareunassa.
            </summary>
        </member>
        <member name="F:Jypeli.WP7.TouchPanelState.ActiveTouches">
            <summary>
            Aktiiviset kosketukset ruudulla
            </summary>
        </member>
        <member name="F:Jypeli.WP7.TouchPanelState.ActiveGestures">
            <summary>
            Aktiiviset eleet ruudulla
            </summary>
        </member>
    </members>
</doc>